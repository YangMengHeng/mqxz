{"remainingRequest":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js!E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web1(原版)\\lamp-web-master\\src\\layout\\components\\Navbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\src\\layout\\components\\Navbar.vue","mtime":1688110966381},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\babel.config.js","mtime":1679380940000},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"E:/project/lamp-web1(\\u539F\\u7248)/lamp-web-master/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.function.name\");\nrequire(\"core-js/modules/es6.string.starts-with\");\nvar _Breadcrumb = _interopRequireDefault(require(\"@/components/Breadcrumb\"));\nvar _Hamburger = _interopRequireDefault(require(\"@/components/Hamburger\"));\nvar _LangSelect = _interopRequireDefault(require(\"@/components/LangSelect\"));\nvar _localstorage = _interopRequireDefault(require(\"@/utils/localstorage\"));\nvar _Screenfull = _interopRequireDefault(require(\"@/components/Screenfull\"));\nvar _HeaderSearch = _interopRequireDefault(require(\"@/components/HeaderSearch\"));\nvar _Login = _interopRequireDefault(require(\"@/api/Login.js\"));\nvar _Msg = _interopRequireDefault(require(\"@/api/Msg.js\"));\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  components: {\n    Breadcrumb: _Breadcrumb.default,\n    Hamburger: _Hamburger.default,\n    LangSelect: _LangSelect.default,\n    Screenfull: _Screenfull.default,\n    Search: _HeaderSearch.default\n  },\n  filters: {\n    userAvatarFilter: function userAvatarFilter(name) {\n      return name.charAt(0);\n    },\n    msgTypeFilter: function msgTypeFilter(status) {\n      var map = {\n        WAIT: \"\",\n        NOTIFY: \"success\",\n        PUBLICITY: \"info\",\n        WARN: \"danger\"\n      };\n      return map[status] || \"\";\n    }\n  },\n  data: function data() {\n    return {\n      tips: ' 演示环境禁止修改、删除重要数据！请登录租户【0000】，账号【lamp_pt】查询其他租户的管理员账号后，登录其他租户测试全部功能!!! ',\n      tableData: {\n        total: 0,\n        records: []\n      },\n      msgRefresh: _localstorage.default.get('MSG_REFRESH', false),\n      // 消息是否自动刷新\n      msgRefreshTimer: null\n    };\n  },\n  computed: {\n    sidebar: function sidebar() {\n      return this.$store.state.setting.sidebar;\n    },\n    avatar: function avatar() {\n      var user = this.$store.state.account.user;\n      if (!user[\"avatar\"]) {\n        return require(\"@/assets/avatar/default.jpg\");\n      } else {\n        if (user[\"avatar\"].startsWith(\"http://\") || user[\"avatar\"].startsWith(\"https://\")) {\n          return user[\"avatar\"];\n        } else {\n          return require(\"@/assets/avatar/\".concat(user.avatar));\n        }\n      }\n    },\n    name: function name() {\n      return this.$store.state.account.user.name;\n    },\n    userId: function userId() {\n      return this.$store.state.account.user.id;\n    },\n    device: function device() {\n      return this.$store.state.setting.device;\n    }\n  },\n  mounted: function mounted() {\n    this.tipsScrolling();\n    this.loadMyMsg();\n    if (this.msgRefresh) {\n      this.msgRefreshChange(true);\n    }\n  },\n  methods: {\n    tipsScrolling: function tipsScrolling() {\n      var _this = this;\n      setInterval(function () {\n        //ES6箭头函数\n        // 截取首字符串(第一个)\n        var head = _this.tips.substring(0, 1);\n        // 截取除首字符串外所有字符串(除第一个所有)\n        var foot = _this.tips.substring(1);\n        // 头尾拼接后赋给data => tit属性\n        _this.tips = foot + head;\n      }, 1000);\n    },\n    loadMyMsg: function loadMyMsg() {\n      var _this2 = this;\n      var params = {\n        model: {}\n      };\n      params.size = 10;\n      params.current = 1;\n      params.model.isRead = false;\n      _Msg.default.page(params, {\n        isAlert: false\n      }).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess) {\n          _this2.tableData = res.data;\n        }\n      });\n    },\n    mark: function mark(ids, callback) {\n      _Msg.default.mark(ids).then(function (response) {\n        var res = response.data;\n        if (typeof callback === \"function\") {\n          callback(ids);\n        }\n      });\n    },\n    view: function view(row) {\n      var _this3 = this;\n      this.mark([row.id], function (ids) {\n        _this3.loadMyMsg();\n        _this3.$router.push({\n          path: \"/resources/msg/edit\",\n          query: {\n            id: row.id,\n            type: \"view\"\n          }\n        });\n      });\n    },\n    msgRefreshChange: function msgRefreshChange(val) {\n      var _this4 = this;\n      _localstorage.default.save('MSG_REFRESH', val);\n      if (val) {\n        this.msgRefreshTimer = setInterval(function () {\n          _this4.loadMyMsg();\n        }, 15000);\n      } else {\n        clearInterval(this.msgRefreshTimer);\n        console.log(\"定时拉取消息停止了！\");\n        this.msgRefreshTimer = null;\n      }\n    },\n    toggleSideBar: function toggleSideBar() {\n      this.$store.commit(\"setting/toggleSidebar\");\n    },\n    setting: function setting() {\n      this.$store.commit(\"setting/openSettingBar\", true);\n    },\n    logout: function logout() {\n      var _this5 = this;\n      var param = {\n        token: _localstorage.default.get('TOKEN', ''),\n        userId: _localstorage.default.get('USER', {\n          id: null\n        }).id,\n        clientId: process.env.VUE_APP_CLIENT_ID\n      };\n      _Login.default.logout(param).finally(function () {\n        return _this5.clean();\n      });\n    },\n    clean: function clean() {\n      _localstorage.default.clear();\n      location.reload();\n    },\n    deleteCache: function deleteCache() {\n      var _this6 = this;\n      this.$confirm(this.$t(\"tips.confirmDeleteCache\"), this.$t(\"common.tips\"), {\n        confirmButtonText: this.$t(\"common.confirm\"),\n        cancelButtonText: this.$t(\"common.cancel\"),\n        type: \"warning\"\n      }).then(function () {\n        _this6.reloadData();\n      }).catch(function () {\n        // do nothing\n      });\n    },\n    reloadData: function reloadData() {\n      var _this7 = this;\n      var param = {\n        grantType: 'refresh_token',\n        refreshToken: _localstorage.default.get('REFRESH_TOKEN', '')\n      };\n      _Login.default.login(param).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess) {\n          var data = res.data;\n          _this7.$store.commit(\"account/setToken\", data['token']);\n          _this7.$store.commit(\"account/setRefreshToken\", data['refreshToken']);\n          _this7.$store.commit(\"account/setExpireTime\", data['expiration']);\n          _this7.$store.commit(\"account/setUser\", {\n            id: data.userId,\n            account: data.account,\n            name: data.name,\n            avatar: data.avatar,\n            workDescribe: data.workDescribe\n          });\n          _this7.loadPermissions();\n        } else {\n          _this7.logout();\n        }\n      }).catch(function () {\n        _localstorage.default.remove(\"EXPIRE_TIME\");\n        _localstorage.default.remove(\"TOKEN\");\n        _localstorage.default.remove(\"USER_ROUTER\");\n        _localstorage.default.remove(\"PERMISSIONS\");\n        _this7.logout();\n      });\n    },\n    loadPermissions: function loadPermissions() {\n      var _this8 = this;\n      _Login.default.getResource().then(function (response) {\n        var res = response.data;\n        if (res.isSuccess) {\n          var authorityResource = res.data;\n          var permissionsList = authorityResource.resourceList || [];\n          _this8.$store.commit(\"account/setPermissions\", permissionsList);\n          _this8.$store.commit(\"account/setAuthorityResource\", authorityResource);\n          setTimeout(function () {\n            location.reload();\n          }, 1000);\n        } else {\n          _this8.logout();\n        }\n      }).catch(function () {\n        _this8.logout();\n      });\n    }\n  }\n};\nexports.default = _default;",null]}