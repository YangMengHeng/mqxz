{"remainingRequest":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js!E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js!E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web-master(finish\\lamp-web-master\\src\\views\\lamp\\museum\\index1.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\src\\views\\lamp\\museum\\index1.vue","mtime":1692713017060},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\babel.config.js","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1686711135008},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport Chart from 'chart.js';\nexport default {\n  mounted: function mounted() {\n    this.chart = new Chart(this.$refs.chart, {\n      type: 'line',\n      data: {\n        labels: [],\n        // 折线图的标签\n        datasets: [{\n          label: '数据集',\n          data: [],\n          // 实时数据\n          fill: false,\n          borderColor: 'rgba(75,192,192,1)',\n          tension: 0.1\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          x: {\n            display: true\n          },\n          y: {\n            display: true\n          }\n        }\n      }\n    });\n  },\n  methods: {\n    updateChart: function updateChart(data) {\n      // 更新折线图数据\n      this.chart.data.labels.push(data.minuteTime);\n      this.chart.data.datasets[0].data.push(data.inPerMinute);\n      this.chart.update();\n    },\n    fetchData: function fetchData() {\n      var _this = this;\n      // 调用后端API获取数据\n      // 假设后端返回的数据格式为 { label: '标签', value: 10 }\n      // 可以使用axios或者fetch等库进行API请求\n      axios.get('/miniute/lineMap').then(function (response) {\n        var data = response.data;\n        _this.updateChart(data);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    // ...\n    mounted: function mounted() {\n      var _this2 = this;\n      this.fetchData();\n      setInterval(function () {\n        _this2.fetchData();\n      }, 1000); // 每秒钟更新一次数据\n    }\n  }\n};",{"version":3,"names":["Chart","mounted","chart","$refs","type","data","labels","datasets","label","fill","borderColor","tension","options","responsive","maintainAspectRatio","scales","x","display","y","methods","updateChart","push","minuteTime","inPerMinute","update","fetchData","_this","axios","get","then","response","catch","error","console","_this2","setInterval"],"sources":["src/views/lamp/museum/index1.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <canvas ref=\"chart\"></canvas>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Chart from 'chart.js';\r\n\r\nexport default {\r\n  mounted() {\r\n    this.chart = new Chart(this.$refs.chart, {\r\n      type: 'line',\r\n      data: {\r\n        labels: [], // 折线图的标签\r\n        datasets: [{\r\n          label: '数据集',\r\n          data: [], // 实时数据\r\n          fill: false,\r\n          borderColor: 'rgba(75,192,192,1)',\r\n          tension: 0.1\r\n        }]\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n          x: {\r\n            display: true\r\n          },\r\n          y: {\r\n            display: true\r\n          }\r\n        }\r\n      }\r\n    });\r\n  },\r\n\r\n  \r\n  methods: {\r\n    updateChart(data) {\r\n      // 更新折线图数据\r\n      this.chart.data.labels.push(data.minuteTime);\r\n      this.chart.data.datasets[0].data.push(data.inPerMinute);\r\n      this.chart.update();\r\n    },\r\n\r\n    fetchData() {\r\n      // 调用后端API获取数据\r\n      // 假设后端返回的数据格式为 { label: '标签', value: 10 }\r\n      // 可以使用axios或者fetch等库进行API请求\r\n      axios.get('/miniute/lineMap')\r\n        .then(response => {\r\n          const data = response.data;\r\n          this.updateChart(data);\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n        });\r\n    },\r\n    // ...\r\n  \r\n  mounted() {\r\n    this.fetchData();\r\n    setInterval(() => {\r\n      this.fetchData();\r\n    }, 1000); // 每秒钟更新一次数据\r\n  }\r\n}\r\n  }\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n</script>\r\n"],"mappings":";;;;;;;AAOA,OAAAA,KAAA;AAEA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAC,KAAA,OAAAF,KAAA,MAAAG,KAAA,CAAAD,KAAA;MACAE,IAAA;MACAC,IAAA;QACAC,MAAA;QAAA;QACAC,QAAA;UACAC,KAAA;UACAH,IAAA;UAAA;UACAI,IAAA;UACAC,WAAA;UACAC,OAAA;QACA;MACA;MACAC,OAAA;QACAC,UAAA;QACAC,mBAAA;QACAC,MAAA;UACAC,CAAA;YACAC,OAAA;UACA;UACAC,CAAA;YACAD,OAAA;UACA;QACA;MACA;IACA;EACA;EAGAE,OAAA;IACAC,WAAA,WAAAA,YAAAf,IAAA;MACA;MACA,KAAAH,KAAA,CAAAG,IAAA,CAAAC,MAAA,CAAAe,IAAA,CAAAhB,IAAA,CAAAiB,UAAA;MACA,KAAApB,KAAA,CAAAG,IAAA,CAAAE,QAAA,IAAAF,IAAA,CAAAgB,IAAA,CAAAhB,IAAA,CAAAkB,WAAA;MACA,KAAArB,KAAA,CAAAsB,MAAA;IACA;IAEAC,SAAA,WAAAA,UAAA;MAAA,IAAAC,KAAA;MACA;MACA;MACA;MACAC,KAAA,CAAAC,GAAA,qBACAC,IAAA,WAAAC,QAAA;QACA,IAAAzB,IAAA,GAAAyB,QAAA,CAAAzB,IAAA;QACAqB,KAAA,CAAAN,WAAA,CAAAf,IAAA;MACA,GACA0B,KAAA,WAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA;IACA;IACA;IAEA/B,OAAA,WAAAA,QAAA;MAAA,IAAAiC,MAAA;MACA,KAAAT,SAAA;MACAU,WAAA;QACAD,MAAA,CAAAT,SAAA;MACA;IACA;EACA;AACA"}]}