{"remainingRequest":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js!E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js!E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web1(原版)\\lamp-web-master\\src\\views\\lamp\\tenant\\tenant\\connection.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\src\\views\\lamp\\tenant\\tenant\\connection.vue","mtime":1679380940000},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\babel.config.js","mtime":1679380940000},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1686711135008},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport tenantApi from '@/api/Tenant.js';\nimport datasourceConfigApi from '@/api/DatasourceConfig.js';\nexport default {\n  name: 'TenantConnection',\n  props: {\n    dialogVisible: {\n      type: Boolean,\n      default: false\n    },\n    title: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    var _this = this;\n    return {\n      type: 'add',\n      tenant: this.initTenant(),\n      screenWidth: 0,\n      datasourceConfigList: [],\n      width: this.initWidth(),\n      confirmDisabled: false,\n      connectTypeDisabled: process.env.VUE_APP_IS_MULTI_TENANT_TYPE !== 'DATASOURCE',\n      rules: {\n        tenant: [{\n          required: true,\n          message: this.$t('rules.require'),\n          trigger: 'blur'\n        }],\n        connectType: [{\n          required: true,\n          message: this.$t('rules.require'),\n          trigger: 'blur'\n        }],\n        baseDatasourceId: {\n          validator: function validator(rule, value, callback) {\n            if (_this.tenant.connectType === 'CUSTOM' && !value) {\n              callback('请选择基础库数据源');\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        },\n        extendDatasourceId: {\n          validator: function validator(rule, value, callback) {\n            if (_this.tenant.connectType === 'CUSTOM' && !value) {\n              callback('请选择扩展库数据源');\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        }\n      }\n    };\n  },\n  computed: {\n    isVisible: {\n      get: function get() {\n        return this.dialogVisible;\n      },\n      set: function set() {\n        this.close();\n        this.reset();\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n    window.onresize = function () {\n      return function () {\n        _this2.width = _this2.initWidth();\n      }();\n    };\n    this.loadDatasourceConfigList();\n  },\n  methods: {\n    loadDatasourceConfigList: function loadDatasourceConfigList() {\n      var _this3 = this;\n      if (process.env.VUE_APP_IS_MULTI_TENANT_TYPE === \"DATASOURCE\") {\n        datasourceConfigApi.query().then(function (response) {\n          if (response.data.isSuccess) {\n            _this3.datasourceConfigList = response.data.data;\n          }\n        });\n      }\n    },\n    initTenant: function initTenant() {\n      return {\n        id: '',\n        connectType: 'SYSTEM',\n        tenant: '',\n        baseDatasourceId: null,\n        extendDatasourceId: null\n      };\n    },\n    initWidth: function initWidth() {\n      this.screenWidth = document.body.clientWidth;\n      if (this.screenWidth < 991) {\n        return '90%';\n      } else if (this.screenWidth < 1400) {\n        return '45%';\n      } else {\n        return '800px';\n      }\n    },\n    setTenant: function setTenant(val) {\n      this.tenant.id = val['id'];\n      this.tenant.tenant = val['code'];\n    },\n    close: function close() {\n      this.$emit('close');\n    },\n    submitForm: function submitForm() {\n      var _this4 = this;\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          _this4.confirmDisabled = true;\n          _this4.initConnect();\n        } else {\n          return false;\n        }\n      });\n    },\n    initConnect: function initConnect() {\n      var _this5 = this;\n      var loading = this.$loading({\n        lock: true,\n        text: 'Loading',\n        spinner: 'el-icon-loading',\n        background: 'rgba(0, 0, 0, 0.7)'\n      });\n      tenantApi.initConnect(this.tenant).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess && res.data) {\n          _this5.isVisible = false;\n          _this5.$message({\n            message: _this5.$t('tips.createSuccess'),\n            type: 'success'\n          });\n          _this5.$emit('success');\n        }\n      }).finally(function () {\n        _this5.confirmDisabled = false;\n        loading.close();\n        return true;\n      });\n    },\n    reset: function reset() {\n      // 先清除校验，再清除表单，不然有奇怪的bug\n      this.$refs.form.clearValidate();\n      this.$refs.form.resetFields();\n      this.tenant = this.initTenant();\n    },\n    connectTypeChange: function connectTypeChange(val) {\n      if (val === 'SYSTEM') {\n        this.tenant.baseDatasourceId = null;\n        this.tenant.extendDatasourceId = null;\n      }\n    }\n  }\n};",null]}