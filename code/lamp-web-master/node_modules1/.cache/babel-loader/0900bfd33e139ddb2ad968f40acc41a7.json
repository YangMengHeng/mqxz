{"remainingRequest":"E:\\project\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js!E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web-master\\src\\views\\lamp\\org\\station\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\project\\lamp-web-master\\src\\views\\lamp\\org\\station\\index.vue","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master\\babel.config.js","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"E:/project/lamp-web-master/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.regexp.split\");\nrequire(\"core-js/modules/es7.array.includes\");\nrequire(\"core-js/modules/es6.string.includes\");\nrequire(\"core-js/modules/es6.array.sort\");\nrequire(\"core-js/modules/web.dom.iterable\");\nvar _defineProperty2 = _interopRequireDefault(require(\"E:/project/lamp-web-master/node_modules/@babel/runtime/helpers/defineProperty.js\"));\nrequire(\"core-js/modules/es6.regexp.search\");\nvar _vueTreeselect = _interopRequireDefault(require(\"@riophae/vue-treeselect\"));\nrequire(\"@riophae/vue-treeselect/dist/vue-treeselect.css\");\nvar _elDragDialog = _interopRequireDefault(require(\"@/directive/el-drag-dialog\"));\nvar _Import = _interopRequireDefault(require(\"@/components/lamp/Import\"));\nvar _Pagination = _interopRequireDefault(require(\"@/components/Pagination\"));\nvar _edit = _interopRequireDefault(require(\"./edit\"));\nvar _Station = _interopRequireDefault(require(\"@/api/Station.js\"));\nvar _Org = _interopRequireDefault(require(\"@/api/Org.js\"));\nvar _commons = require(\"@/utils/commons\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: \"StationManage\",\n  directives: {\n    elDragDialog: _elDragDialog.default\n  },\n  components: {\n    Pagination: _Pagination.default,\n    StationEdit: _edit.default,\n    Treeselect: _vueTreeselect.default,\n    FileImport: _Import.default\n  },\n  filters: {\n    stateFilter: function stateFilter(state) {\n      var map = {\n        false: \"danger\",\n        true: \"success\"\n      };\n      return map[state] || \"success\";\n    }\n  },\n  data: function data() {\n    return {\n      dialog: {\n        isVisible: false,\n        type: \"add\"\n      },\n      preview: {\n        isVisible: false,\n        context: ''\n      },\n      fileImport: {\n        isVisible: false,\n        type: \"import\",\n        action: \"\".concat(process.env.VUE_APP_BASE_API, \"/authority/station/import\")\n      },\n      tableKey: 0,\n      orgList: [],\n      queryParams: (0, _commons.initQueryParams)({\n        model: {\n          orgId: null\n        }\n      }),\n      selection: [],\n      loading: false,\n      tableData: {\n        total: 0\n      }\n    };\n  },\n  computed: {},\n  watch: {\n    $route: function $route() {\n      if (this.$route.path === \"/user/station\") {\n        this.initOrg();\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.initOrg();\n    this.fetch();\n  },\n  methods: {\n    initOrg: function initOrg() {\n      var _this = this;\n      _Org.default.allTree({\n        state: true\n      }).then(function (response) {\n        var res = response.data;\n        _this.orgList = res.data;\n      }).catch(function () {\n        _this.$message({\n          message: _this.$t(\"tips.getDataFail\"),\n          type: \"error\"\n        });\n      });\n    },\n    loadListOptions: function loadListOptions(_ref) {\n      var callback = _ref.callback;\n      callback();\n    },\n    editClose: function editClose() {\n      this.dialog.isVisible = false;\n    },\n    editSuccess: function editSuccess() {\n      this.search();\n    },\n    onSelectChange: function onSelectChange(selection) {\n      this.selection = selection;\n    },\n    search: function search() {\n      this.fetch(_objectSpread({}, this.queryParams));\n    },\n    reset: function reset() {\n      this.queryParams = (0, _commons.initQueryParams)({\n        model: {\n          orgId: null\n        }\n      });\n      this.$refs.table.clearSort();\n      this.$refs.table.clearFilter();\n      this.search();\n    },\n    exportExcelPreview: function exportExcelPreview() {\n      var _this2 = this;\n      if (this.queryParams.timeRange) {\n        this.queryParams.extra.createTime_st = this.queryParams.timeRange[0];\n        this.queryParams.extra.createTime_ed = this.queryParams.timeRange[1];\n      }\n      this.queryParams.extra.fileName = '导出岗位数据';\n      _Station.default.preview(_objectSpread(_objectSpread({}, this.queryParams), {\n        size: 10000\n      })).then(function (response) {\n        var res = response.data;\n        _this2.preview.isVisible = true;\n        _this2.preview.context = res.data;\n      });\n    },\n    exportExcel: function exportExcel() {\n      if (this.queryParams.timeRange) {\n        this.queryParams.extra.createTime_st = this.queryParams.timeRange[0];\n        this.queryParams.extra.createTime_ed = this.queryParams.timeRange[1];\n      }\n      this.queryParams.extra.fileName = '导出岗位数据';\n      _Station.default.export(_objectSpread(_objectSpread({}, this.queryParams), {\n        size: 10000\n      })).then(function (response) {\n        (0, _commons.downloadFile)(response);\n      });\n    },\n    importExcel: function importExcel() {\n      this.fileImport.type = \"upload\";\n      this.fileImport.isVisible = true;\n      this.$refs.import.setModel(false);\n    },\n    importSuccess: function importSuccess() {\n      this.search();\n    },\n    importClose: function importClose() {\n      this.fileImport.isVisible = false;\n    },\n    singleDelete: function singleDelete(row) {\n      this.$refs.table.clearSelection();\n      this.$refs.table.toggleRowSelection(row, true);\n      this.batchDelete();\n    },\n    batchDelete: function batchDelete() {\n      var _this3 = this;\n      if (!this.selection.length) {\n        this.$message({\n          message: this.$t(\"tips.noDataSelected\"),\n          type: \"warning\"\n        });\n        return;\n      }\n      this.$confirm(this.$t(\"tips.confirmDelete\"), this.$t(\"common.tips\"), {\n        confirmButtonText: this.$t(\"common.confirm\"),\n        cancelButtonText: this.$t(\"common.cancel\"),\n        type: \"warning\"\n      }).then(function () {\n        var ids = [];\n        _this3.selection.forEach(function (u) {\n          ids.push(u.id);\n        });\n        _this3.delete(ids);\n      }).catch(function () {\n        _this3.clearSelections();\n      });\n    },\n    clearSelections: function clearSelections() {\n      this.$refs.table.clearSelection();\n    },\n    delete: function _delete(ids) {\n      var _this4 = this;\n      _Station.default.delete(ids).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess) {\n          _this4.$message({\n            message: _this4.$t(\"tips.deleteSuccess\"),\n            type: \"success\"\n          });\n        }\n        _this4.search();\n      });\n    },\n    add: function add() {\n      this.dialog.type = \"add\";\n      this.dialog.isVisible = true;\n      this.$refs.edit.setStation(false, this.orgList);\n    },\n    edit: function edit(row) {\n      this.$refs.edit.setStation(row, this.orgList);\n      this.dialog.type = \"edit\";\n      this.dialog.isVisible = true;\n    },\n    fetch: function fetch() {\n      var _this5 = this;\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.loading = true;\n      if (this.queryParams.timeRange) {\n        this.queryParams.extra.createTime_st = this.queryParams.timeRange[0];\n        this.queryParams.extra.createTime_ed = this.queryParams.timeRange[1];\n      }\n      this.queryParams.current = params.current ? params.current : this.queryParams.current;\n      this.queryParams.size = params.size ? params.size : this.queryParams.size;\n      _Station.default.page(this.queryParams).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess) {\n          _this5.tableData = res.data;\n        }\n      }).finally(function () {\n        return _this5.loading = false;\n      });\n    },\n    sortChange: function sortChange(val) {\n      this.queryParams.sort = val.prop;\n      this.queryParams.order = val.order;\n      if (this.queryParams.sort) {\n        this.search();\n      }\n    },\n    filterChange: function filterChange(filters) {\n      for (var key in filters) {\n        if (key.includes('.')) {\n          var val = {};\n          val[key.split('.')[1]] = filters[key][0];\n          this.queryParams.model[key.split('.')[0]] = val;\n        } else {\n          this.queryParams.model[key] = filters[key][0];\n        }\n      }\n      this.search();\n    },\n    cellClick: function cellClick(row, column) {\n      var _this6 = this;\n      if (column['columnKey'] === \"operation\") {\n        return;\n      }\n      var flag = false;\n      this.selection.forEach(function (item) {\n        if (item.id === row.id) {\n          flag = true;\n          _this6.$refs.table.toggleRowSelection(row);\n        }\n      });\n      if (!flag) {\n        this.$refs.table.toggleRowSelection(row, true);\n      }\n    }\n  }\n};\nexports.default = _default;",{"version":3,"names":["_vueTreeselect","_interopRequireDefault","require","_elDragDialog","_Import","_Pagination","_edit","_Station","_Org","_commons","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","name","directives","elDragDialog","components","Pagination","StationEdit","Treeselect","FileImport","filters","stateFilter","state","map","false","true","data","dialog","isVisible","type","preview","context","fileImport","action","concat","process","env","VUE_APP_BASE_API","tableKey","orgList","queryParams","initQueryParams","model","orgId","selection","loading","tableData","total","computed","watch","$route","path","initOrg","mounted","fetch","methods","_this","orgApi","allTree","then","response","res","catch","$message","message","$t","loadListOptions","_ref","callback","editClose","editSuccess","search","onSelectChange","reset","$refs","table","clearSort","clearFilter","exportExcelPreview","_this2","timeRange","extra","createTime_st","createTime_ed","fileName","stationApi","size","exportExcel","export","downloadFile","importExcel","import","setModel","importSuccess","importClose","singleDelete","row","clearSelection","toggleRowSelection","batchDelete","_this3","$confirm","confirmButtonText","cancelButtonText","ids","u","id","delete","clearSelections","_delete","_this4","isSuccess","add","edit","setStation","_this5","params","undefined","current","page","finally","sortChange","val","sort","prop","order","filterChange","includes","split","cellClick","column","_this6","flag","item","exports","_default"],"sources":["src/views/lamp/org/station/index.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-input :placeholder=\"$t('table.station.name')\" class=\"filter-item search-item\"\n                v-model=\"queryParams.model.name\"/>\n      <treeselect\n        :clear-value-text=\"$t('common.clear')\"\n        :load-options=\"loadListOptions\"\n        :multiple=\"false\"\n        :options=\"orgList\"\n        :placeholder=\"$t('table.station.orgId')\"\n        :searchable=\"true\"\n        class=\"filter-item search-item\"\n        v-model=\"queryParams.model.orgId\"\n      />\n      <el-date-picker\n        :range-separator=\"null\"\n        class=\"filter-item search-item date-range-item\"\n        end-placeholder=\"结束日期\"\n        format=\"yyyy-MM-dd HH:mm:ss\"\n        start-placeholder=\"开始日期\"\n        type=\"daterange\"\n        v-model=\"queryParams.timeRange\"\n        value-format=\"yyyy-MM-dd HH:mm:ss\"\n      />\n      <el-button @click=\"search\" class=\"filter-item\" plain type=\"primary\">{{ $t(\"table.search\") }}</el-button>\n      <el-button @click=\"reset\" class=\"filter-item\" plain type=\"warning\">{{ $t(\"table.reset\") }}</el-button>\n      <el-button @click=\"add\" class=\"filter-item\" plain type=\"danger\" v-has-permission=\"['authority:station:add']\">\n        {{ $t(\"table.add\") }}\n      </el-button>\n      <el-dropdown class=\"filter-item\" trigger=\"click\"\n                   v-has-any-permission=\"['authority:station:delete','authority:station:export','authority:station:import']\">\n        <el-button>\n          {{ $t(\"table.more\") }}\n          <i class=\"el-icon-arrow-down el-icon--right\"/>\n        </el-button>\n        <el-dropdown-menu slot=\"dropdown\">\n          <el-dropdown-item @click.native=\"batchDelete\" v-has-permission=\"['authority:station:delete']\">\n            {{ $t(\"table.delete\") }}\n          </el-dropdown-item>\n          <el-dropdown-item @click.native=\"exportExcel\" v-has-permission=\"['authority:station:export']\">\n            {{ $t(\"table.export\") }}\n          </el-dropdown-item>\n          <el-dropdown-item @click.native=\"exportExcelPreview\" v-has-permission=\"['authority:station:export']\">\n            {{ $t(\"table.exportPreview\") }}\n          </el-dropdown-item>\n          <el-dropdown-item @click.native=\"importExcel\" v-has-permission=\"['authority:station:import']\">\n            {{ $t(\"table.import\") }}\n          </el-dropdown-item>\n        </el-dropdown-menu>\n      </el-dropdown>\n    </div>\n\n    <el-table\n      :data=\"tableData.records\"\n      :key=\"tableKey\"\n      @filter-change=\"filterChange\"\n      @selection-change=\"onSelectChange\"\n      @sort-change=\"sortChange\"\n      @cell-click=\"cellClick\"\n      border fit row-key=\"id\"\n      ref=\"table\"\n      style=\"width: 100%;\"\n      v-loading=\"loading\"\n    >\n      <el-table-column align=\"center\" type=\"selection\" width=\"40px\" :reserve-selection=\"true\"/>\n      <el-table-column\n        :label=\"$t('table.station.name')\"\n        :show-overflow-tooltip=\"true\"\n        align=\"center\"\n        prop=\"name\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.name }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('table.station.describe')\"\n        :show-overflow-tooltip=\"true\"\n        align=\"center\"\n        prop=\"describe\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.describe }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('table.station.orgId')\"\n        align=\"center\"\n        :show-overflow-tooltip=\"true\"\n        width=\"180px\"\n      >\n        <template slot-scope=\"scope\">\n          <span>\n            {{ scope.row.echoMap.orgId ? scope.row.echoMap.orgId.label : '' }}\n          </span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :filter-multiple=\"false\"\n        column-key=\"state\"\n        :filters=\"[\n          { text: $t('common.state.valid'), value: true },\n          { text: $t('common.state.invalid'), value: false }\n        ]\"\n        :label=\"$t('table.station.state')\"\n        class-name=\"status-col\"\n        width=\"70px\"\n      >\n        <template slot-scope=\"{ row }\">\n          <el-tag :type=\"row.state | stateFilter\">{{\n            row.state ? $t(\"common.state.valid\") : $t(\"common.state.invalid\")\n            }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('table.createTime')\"\n        align=\"center\"\n        prop=\"createTime\"\n        sortable=\"custom\"\n        width=\"170px\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.createTime }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('table.operation')\"\n        align=\"center\"\n        column-key=\"operation\"\n        class-name=\"small-padding fixed-width\"\n        width=\"100px\"\n      >\n        <template slot-scope=\"{ row }\">\n          <i\n            @click=\"edit(row)\"\n            class=\"el-icon-edit table-operation\"\n            style=\"color: #2db7f5;\"\n            v-hasPermission=\"['authority:station:edit']\"\n          />\n          <i\n            @click=\"singleDelete(row)\"\n            class=\"el-icon-delete table-operation\"\n            style=\"color: #f50;\"\n            v-hasPermission=\"['authority:station:delete']\"\n          />\n          <el-link\n            class=\"no-perm\"\n            v-has-no-permission=\"['authority:station:edit', 'authority:station:delete']\"\n          >{{ $t(\"tips.noPermission\") }}\n          </el-link\n          >\n        </template>\n      </el-table-column>\n    </el-table>\n    <pagination\n      :limit.sync=\"queryParams.size\"\n      :page.sync=\"queryParams.current\"\n      :total=\"Number(tableData.total)\"\n      @pagination=\"fetch\"\n      v-show=\"tableData.total > 0\"\n    />\n    <station-edit\n      :dialog-visible=\"dialog.isVisible\"\n      :type=\"dialog.type\"\n      @close=\"editClose\"\n      @success=\"editSuccess\"\n      ref=\"edit\"\n    />\n    <file-import\n      :dialog-visible=\"fileImport.isVisible\"\n      :type=\"fileImport.type\"\n      :action=\"fileImport.action\" accept=\".xls,.xlsx\"\n      @close=\"importClose\"\n      @success=\"importSuccess\"\n      ref=\"import\"\n    />\n    <el-dialog\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"true\"\n      title=\"预览\"\n      width=\"80%\"\n      top=\"50px\"\n      :visible.sync=\"preview.isVisible\"\n      v-el-drag-dialog\n    >\n      <el-scrollbar>\n        <div v-html=\"preview.context\"></div>\n      </el-scrollbar>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n  import Treeselect from \"@riophae/vue-treeselect\";\n  import \"@riophae/vue-treeselect/dist/vue-treeselect.css\";\n  import elDragDialog from '@/directive/el-drag-dialog'\n  import FileImport from \"@/components/lamp/Import\"\n  import Pagination from \"@/components/Pagination\";\n  import StationEdit from \"./edit\";\n  import stationApi from \"@/api/Station.js\";\n  import orgApi from \"@/api/Org.js\";\n  import {downloadFile, initQueryParams} from '@/utils/commons'\n\n  export default {\n    name: \"StationManage\",\n    directives: {elDragDialog},\n    components: {Pagination, StationEdit, Treeselect, FileImport},\n    filters: {\n      stateFilter(state) {\n        const map = {\n          false: \"danger\",\n          true: \"success\"\n        };\n        return map[state] || \"success\";\n      }\n    },\n    data() {\n      return {\n        dialog: {\n          isVisible: false,\n          type: \"add\"\n        },\n        preview: {\n          isVisible: false,\n          context: ''\n        },\n        fileImport: {\n          isVisible: false,\n          type: \"import\",\n          action: `${process.env.VUE_APP_BASE_API}/authority/station/import`\n        },\n        tableKey: 0,\n        orgList: [],\n        queryParams: initQueryParams({\n          model: {\n            orgId: null\n          }\n        }),\n        selection: [],\n        loading: false,\n        tableData: {\n          total: 0\n        },\n      };\n    },\n    computed: {},\n    watch: {\n      $route() {\n        if (this.$route.path === \"/user/station\") {\n          this.initOrg();\n        }\n      }\n    },\n    mounted() {\n      this.initOrg();\n      this.fetch();\n    },\n    methods: {\n      initOrg() {\n        orgApi\n          .allTree({state: true})\n          .then(response => {\n            const res = response.data;\n            this.orgList = res.data;\n          })\n          .catch(() => {\n            this.$message({\n              message: this.$t(\"tips.getDataFail\"),\n              type: \"error\"\n            });\n          });\n      },\n      loadListOptions({callback}) {\n        callback();\n      },\n      editClose() {\n        this.dialog.isVisible = false;\n      },\n      editSuccess() {\n        this.search();\n      },\n      onSelectChange(selection) {\n        this.selection = selection;\n      },\n      search() {\n        this.fetch({\n          ...this.queryParams\n        });\n      },\n      reset() {\n        this.queryParams = initQueryParams({\n          model: {\n            orgId: null\n          }\n        });\n        this.$refs.table.clearSort();\n        this.$refs.table.clearFilter();\n        this.search();\n      },\n      exportExcelPreview() {\n        if (this.queryParams.timeRange) {\n          this.queryParams.extra.createTime_st = this.queryParams.timeRange[0];\n          this.queryParams.extra.createTime_ed = this.queryParams.timeRange[1];\n        }\n        this.queryParams.extra.fileName = '导出岗位数据';\n        stationApi.preview({...this.queryParams, ...{size: 10000}}).then(response => {\n          const res = response.data;\n          this.preview.isVisible = true;\n          this.preview.context = res.data;\n        });\n      },\n      exportExcel() {\n        if (this.queryParams.timeRange) {\n          this.queryParams.extra.createTime_st = this.queryParams.timeRange[0];\n          this.queryParams.extra.createTime_ed = this.queryParams.timeRange[1];\n        }\n        this.queryParams.extra.fileName = '导出岗位数据';\n        stationApi.export({...this.queryParams, ...{size: 10000}}).then(response => {\n          downloadFile(response);\n        });\n      },\n      importExcel() {\n        this.fileImport.type = \"upload\";\n        this.fileImport.isVisible = true;\n        this.$refs.import.setModel(false);\n      },\n      importSuccess() {\n        this.search();\n      },\n      importClose() {\n        this.fileImport.isVisible = false;\n      },\n      singleDelete(row) {\n        this.$refs.table.clearSelection()\n        this.$refs.table.toggleRowSelection(row, true);\n        this.batchDelete();\n      },\n      batchDelete() {\n        if (!this.selection.length) {\n          this.$message({\n            message: this.$t(\"tips.noDataSelected\"),\n            type: \"warning\"\n          });\n          return;\n        }\n        this.$confirm(this.$t(\"tips.confirmDelete\"), this.$t(\"common.tips\"), {\n          confirmButtonText: this.$t(\"common.confirm\"),\n          cancelButtonText: this.$t(\"common.cancel\"),\n          type: \"warning\"\n        })\n          .then(() => {\n            const ids = [];\n            this.selection.forEach(u => {\n              ids.push(u.id);\n            });\n            this.delete(ids);\n          })\n          .catch(() => {\n            this.clearSelections();\n          });\n      },\n      clearSelections() {\n        this.$refs.table.clearSelection();\n      },\n      delete(ids) {\n        stationApi.delete(ids).then(response => {\n          const res = response.data;\n          if (res.isSuccess) {\n            this.$message({\n              message: this.$t(\"tips.deleteSuccess\"),\n              type: \"success\"\n            });\n          }\n          this.search();\n        });\n      },\n      add() {\n        this.dialog.type = \"add\";\n        this.dialog.isVisible = true;\n        this.$refs.edit.setStation(false, this.orgList);\n      },\n      edit(row) {\n        this.$refs.edit.setStation(row, this.orgList);\n        this.dialog.type = \"edit\";\n        this.dialog.isVisible = true;\n      },\n      fetch(params = {}) {\n        this.loading = true;\n        if (this.queryParams.timeRange) {\n          this.queryParams.extra.createTime_st = this.queryParams.timeRange[0];\n          this.queryParams.extra.createTime_ed = this.queryParams.timeRange[1];\n        }\n\n        this.queryParams.current = params.current ? params.current : this.queryParams.current;\n        this.queryParams.size = params.size ? params.size : this.queryParams.size;\n\n        stationApi.page(this.queryParams).then(response => {\n          const res = response.data;\n          if (res.isSuccess) {\n            this.tableData = res.data;\n          }\n        }).finally(() => this.loading = false);\n      },\n      sortChange(val) {\n        this.queryParams.sort = val.prop;\n        this.queryParams.order = val.order;\n        if (this.queryParams.sort) {\n          this.search();\n        }\n      },\n      filterChange(filters) {\n        for (const key in filters) {\n          if (key.includes('.')) {\n            const val = {};\n            val[key.split('.')[1]] = filters[key][0];\n            this.queryParams.model[key.split('.')[0]] = val;\n          } else {\n            this.queryParams.model[key] = filters[key][0]\n          }\n        }\n        this.search()\n      },\n      cellClick (row, column) {\n        if (column['columnKey'] === \"operation\") {\n          return;\n        }\n        let flag = false;\n        this.selection.forEach((item) => {\n          if (item.id === row.id) {\n            flag = true;\n            this.$refs.table.toggleRowSelection(row);\n          }\n        })\n\n        if (!flag) {\n          this.$refs.table.toggleRowSelection(row, true);\n        }\n      }\n    }\n  };\n</script>\n<style lang=\"scss\" scoped></style>\n"],"mappings":"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"}]}