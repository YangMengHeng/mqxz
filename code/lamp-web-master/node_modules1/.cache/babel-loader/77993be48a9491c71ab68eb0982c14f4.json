{"remainingRequest":"E:\\project\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js!E:\\project\\lamp-web-master\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\project\\lamp-web-master\\src\\layout\\mixin\\ResizeHandler.js","dependencies":[{"path":"E:\\project\\lamp-web-master\\src\\layout\\mixin\\ResizeHandler.js","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master\\babel.config.js","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web-master\\node_modules\\eslint-loader\\index.js","mtime":1686711135831}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"E:/project/lamp-web-master/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _index = _interopRequireDefault(require(\"@/store/index\"));\nvar _document = document,\n  body = _document.body;\nvar WIDTH = 992; // refer to Bootstrap's responsive design\nvar _default = {\n  watch: {\n    $route: function $route(route) {\n      if (_index.default.state.setting.device === 'mobile' && _index.default.state.setting.sidebar.opened) {\n        _index.default.commit('setting/closeSidebar', {\n          withoutAnimation: false\n        });\n      }\n    }\n  },\n  beforeMount: function beforeMount() {\n    window.addEventListener('resize', this.$_resizeHandler);\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('resize', this.$_resizeHandler);\n  },\n  mounted: function mounted() {\n    var isMobile = this.$_isMobile();\n    if (isMobile) {\n      _index.default.commit('setting/toggleDevice', 'mobile');\n      _index.default.commit('setting/closeSidebar', {\n        withoutAnimation: true\n      });\n    }\n  },\n  methods: {\n    // use $_ for mixins properties\n    // https://vuejs.org/v2/style-guide/index.html#Private-property-names-essential\n    $_isMobile: function $_isMobile() {\n      var rect = body.getBoundingClientRect();\n      return rect.width - 1 < WIDTH;\n    },\n    $_resizeHandler: function $_resizeHandler() {\n      if (!document.hidden) {\n        var isMobile = this.$_isMobile();\n        _index.default.commit('setting/toggleDevice', isMobile ? 'mobile' : 'desktop');\n        if (isMobile) {\n          _index.default.commit('setting/closeSidebar', {\n            withoutAnimation: true\n          });\n        }\n      }\n    }\n  }\n};\nexports.default = _default;",null]}