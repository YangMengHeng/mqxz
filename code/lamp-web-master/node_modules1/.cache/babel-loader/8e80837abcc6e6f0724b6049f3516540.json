{"remainingRequest":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js!E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js!E:\\project\\lamp-web1(原版)\\lamp-web-master\\src\\store\\modules\\account.js","dependencies":[{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\src\\store\\modules\\account.js","mtime":1679380940000},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\babel.config.js","mtime":1679380940000},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1686711135008},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609}],"contextDependencies":[],"result":["import db from '@/utils/localstorage';\nexport default {\n  namespaced: true,\n  state: {\n    refreshToken: db.get('REFRESH_TOKEN'),\n    token: db.get('TOKEN', ''),\n    tenant: db.get('TENANT', ''),\n    expireTime: db.get('EXPIRE_TIME', 0),\n    user: db.get('USER') || {},\n    permissions: db.get('PERMISSIONS') || [],\n    authorityResource: db.get('AUTHORITY_RESOURCE') || {\n      \"enabled\": true,\n      \"caseSensitive\": false,\n      \"resourceList\": [],\n      \"roleList\": []\n    },\n    routes: db.get('USER_ROUTER') || []\n  },\n  mutations: {\n    setTenant: function setTenant(state, val) {\n      db.save('TENANT', val);\n      state.accessToken = val;\n    },\n    setRefreshToken: function setRefreshToken(state, val) {\n      db.save('REFRESH_TOKEN', val);\n      state.refreshToken = val;\n    },\n    setToken: function setToken(state, val) {\n      db.save('TOKEN', val);\n      state.token = val;\n    },\n    setExpireTime: function setExpireTime(state, val) {\n      db.save('EXPIRE_TIME', val);\n      state.expireTime = val;\n    },\n    setUser: function setUser(state, val) {\n      db.save('USER', val);\n      state.user = val;\n    },\n    setPermissions: function setPermissions(state, val) {\n      db.save('PERMISSIONS', val);\n      state.permissions = val;\n    },\n    setAuthorityResource: function setAuthorityResource(state, val) {\n      db.save('AUTHORITY_RESOURCE', val);\n      state.authorityResource = val;\n    },\n    setRoutes: function setRoutes(state, val) {\n      db.save('USER_ROUTER', val);\n      state.routes = val;\n    }\n  }\n};",null]}