{"remainingRequest":"E:\\project\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js!E:\\project\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js!E:\\project\\lamp-web-master\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\project\\lamp-web-master\\src\\store\\modules\\account.js","dependencies":[{"path":"E:\\project\\lamp-web-master\\src\\store\\modules\\account.js","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master\\babel.config.js","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1686711135008},{"path":"E:\\project\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web-master\\node_modules\\eslint-loader\\index.js","mtime":1686711135831}],"contextDependencies":[],"result":["import db from '@/utils/localstorage';\nexport default {\n  namespaced: true,\n  state: {\n    refreshToken: db.get('REFRESH_TOKEN'),\n    token: db.get('TOKEN', ''),\n    tenant: db.get('TENANT', ''),\n    expireTime: db.get('EXPIRE_TIME', 0),\n    user: db.get('USER') || {},\n    permissions: db.get('PERMISSIONS') || [],\n    authorityResource: db.get('AUTHORITY_RESOURCE') || {\n      \"enabled\": true,\n      \"caseSensitive\": false,\n      \"resourceList\": [],\n      \"roleList\": []\n    },\n    routes: db.get('USER_ROUTER') || []\n  },\n  mutations: {\n    setTenant: function setTenant(state, val) {\n      db.save('TENANT', val);\n      state.accessToken = val;\n    },\n    setRefreshToken: function setRefreshToken(state, val) {\n      db.save('REFRESH_TOKEN', val);\n      state.refreshToken = val;\n    },\n    setToken: function setToken(state, val) {\n      db.save('TOKEN', val);\n      state.token = val;\n    },\n    setExpireTime: function setExpireTime(state, val) {\n      db.save('EXPIRE_TIME', val);\n      state.expireTime = val;\n    },\n    setUser: function setUser(state, val) {\n      db.save('USER', val);\n      state.user = val;\n    },\n    setPermissions: function setPermissions(state, val) {\n      db.save('PERMISSIONS', val);\n      state.permissions = val;\n    },\n    setAuthorityResource: function setAuthorityResource(state, val) {\n      db.save('AUTHORITY_RESOURCE', val);\n      state.authorityResource = val;\n    },\n    setRoutes: function setRoutes(state, val) {\n      db.save('USER_ROUTER', val);\n      state.routes = val;\n    }\n  }\n};",{"version":3,"names":["db","namespaced","state","refreshToken","get","token","tenant","expireTime","user","permissions","authorityResource","routes","mutations","setTenant","val","save","accessToken","setRefreshToken","setToken","setExpireTime","setUser","setPermissions","setAuthorityResource","setRoutes"],"sources":["E:/project/lamp-web-master/src/store/modules/account.js"],"sourcesContent":["import db from '@/utils/localstorage'\n\nexport default {\n  namespaced: true,\n  state: {\n    refreshToken: db.get('REFRESH_TOKEN'),\n    token: db.get('TOKEN', ''),\n    tenant: db.get('TENANT', ''),\n    expireTime: db.get('EXPIRE_TIME', 0),\n    user: db.get('USER') || {},\n    permissions: db.get('PERMISSIONS') || [],\n    authorityResource: db.get('AUTHORITY_RESOURCE') || {\"enabled\": true, \"caseSensitive\": false, \"resourceList\": [], \"roleList\": []},\n    routes: db.get('USER_ROUTER') || []\n  },\n  mutations: {\n    setTenant (state, val) {\n      db.save('TENANT', val)\n      state.accessToken = val\n    },\n    setRefreshToken (state, val) {\n      db.save('REFRESH_TOKEN', val)\n      state.refreshToken = val\n    },\n    setToken (state, val) {\n      db.save('TOKEN', val)\n      state.token = val\n    },\n    setExpireTime (state, val) {\n      db.save('EXPIRE_TIME', val)\n      state.expireTime = val\n    },\n    setUser (state, val) {\n      db.save('USER', val)\n      state.user = val\n    },\n    setPermissions (state, val) {\n      db.save('PERMISSIONS', val)\n      state.permissions = val\n    },\n    setAuthorityResource (state, val) {\n      db.save('AUTHORITY_RESOURCE', val)\n      state.authorityResource = val\n    },\n    setRoutes (state, val) {\n      db.save('USER_ROUTER', val)\n      state.routes = val\n    }\n  }\n}\n"],"mappings":"AAAA,OAAOA,EAAE,MAAM,sBAAsB;AAErC,eAAe;EACbC,UAAU,EAAE,IAAI;EAChBC,KAAK,EAAE;IACLC,YAAY,EAAEH,EAAE,CAACI,GAAG,CAAC,eAAe,CAAC;IACrCC,KAAK,EAAEL,EAAE,CAACI,GAAG,CAAC,OAAO,EAAE,EAAE,CAAC;IAC1BE,MAAM,EAAEN,EAAE,CAACI,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC;IAC5BG,UAAU,EAAEP,EAAE,CAACI,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC;IACpCI,IAAI,EAAER,EAAE,CAACI,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC1BK,WAAW,EAAET,EAAE,CAACI,GAAG,CAAC,aAAa,CAAC,IAAI,EAAE;IACxCM,iBAAiB,EAAEV,EAAE,CAACI,GAAG,CAAC,oBAAoB,CAAC,IAAI;MAAC,SAAS,EAAE,IAAI;MAAE,eAAe,EAAE,KAAK;MAAE,cAAc,EAAE,EAAE;MAAE,UAAU,EAAE;IAAE,CAAC;IAChIO,MAAM,EAAEX,EAAE,CAACI,GAAG,CAAC,aAAa,CAAC,IAAI;EACnC,CAAC;EACDQ,SAAS,EAAE;IACTC,SAAS,WAAAA,UAAEX,KAAK,EAAEY,GAAG,EAAE;MACrBd,EAAE,CAACe,IAAI,CAAC,QAAQ,EAAED,GAAG,CAAC;MACtBZ,KAAK,CAACc,WAAW,GAAGF,GAAG;IACzB,CAAC;IACDG,eAAe,WAAAA,gBAAEf,KAAK,EAAEY,GAAG,EAAE;MAC3Bd,EAAE,CAACe,IAAI,CAAC,eAAe,EAAED,GAAG,CAAC;MAC7BZ,KAAK,CAACC,YAAY,GAAGW,GAAG;IAC1B,CAAC;IACDI,QAAQ,WAAAA,SAAEhB,KAAK,EAAEY,GAAG,EAAE;MACpBd,EAAE,CAACe,IAAI,CAAC,OAAO,EAAED,GAAG,CAAC;MACrBZ,KAAK,CAACG,KAAK,GAAGS,GAAG;IACnB,CAAC;IACDK,aAAa,WAAAA,cAAEjB,KAAK,EAAEY,GAAG,EAAE;MACzBd,EAAE,CAACe,IAAI,CAAC,aAAa,EAAED,GAAG,CAAC;MAC3BZ,KAAK,CAACK,UAAU,GAAGO,GAAG;IACxB,CAAC;IACDM,OAAO,WAAAA,QAAElB,KAAK,EAAEY,GAAG,EAAE;MACnBd,EAAE,CAACe,IAAI,CAAC,MAAM,EAAED,GAAG,CAAC;MACpBZ,KAAK,CAACM,IAAI,GAAGM,GAAG;IAClB,CAAC;IACDO,cAAc,WAAAA,eAAEnB,KAAK,EAAEY,GAAG,EAAE;MAC1Bd,EAAE,CAACe,IAAI,CAAC,aAAa,EAAED,GAAG,CAAC;MAC3BZ,KAAK,CAACO,WAAW,GAAGK,GAAG;IACzB,CAAC;IACDQ,oBAAoB,WAAAA,qBAAEpB,KAAK,EAAEY,GAAG,EAAE;MAChCd,EAAE,CAACe,IAAI,CAAC,oBAAoB,EAAED,GAAG,CAAC;MAClCZ,KAAK,CAACQ,iBAAiB,GAAGI,GAAG;IAC/B,CAAC;IACDS,SAAS,WAAAA,UAAErB,KAAK,EAAEY,GAAG,EAAE;MACrBd,EAAE,CAACe,IAAI,CAAC,aAAa,EAAED,GAAG,CAAC;MAC3BZ,KAAK,CAACS,MAAM,GAAGG,GAAG;IACpB;EACF;AACF,CAAC"}]}