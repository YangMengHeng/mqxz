{"remainingRequest":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js!E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js!E:\\project\\lamp-web1(原版)\\lamp-web-master\\src\\store\\modules\\setting.js","dependencies":[{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\src\\store\\modules\\setting.js","mtime":1679380940000},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\babel.config.js","mtime":1679380940000},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1686711135008},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609}],"contextDependencies":[],"result":["import db from '@/utils/localstorage';\nimport { getLanguage } from '@/lang/index';\nexport default {\n  namespaced: true,\n  state: {\n    settingBar: {\n      opened: false\n    },\n    sidebar: {\n      opened: db.get('SIDEBAR_STATUS', true),\n      withoutAnimation: false\n    },\n    device: 'desktop',\n    language: getLanguage(),\n    sidebarLogo: db.get('SIDEBAR_LOGO', true),\n    uniqueOpened: db.get('UNIQUE_OPENED', true),\n    multipage: db.get('MULTIPAGE', true),\n    fixSiderbar: db.get('FIX_SIDERBAR', true),\n    fixHeader: db.get('FIX_HEADER', true),\n    colorList: ['rgb(245, 34, 45)', 'rgb(250, 84, 28)', 'rgb(250, 173, 20)', 'rgb(66, 185, 131)', 'rgb(82, 196, 26)', 'rgb(24, 144, 255)', 'rgb(47, 84, 235)', 'rgb(114, 46, 209)'],\n    color: db.get('COLOR', 'rgb(24, 144, 255)'),\n    theme: '#1890FF'\n  },\n  mutations: {\n    toggleSidebar: function toggleSidebar(state) {\n      state.sidebar.opened = !state.sidebar.opened;\n      state.sidebar.withoutAnimation = false;\n      if (state.sidebar.opened) {\n        db.save('SIDEBAR_STATUS', 1);\n      } else {\n        db.save('SIDEBAR_STATUS', 0);\n      }\n    },\n    closeSidebar: function closeSidebar(state, withoutAnimation) {\n      db.save('SIDEBAR_STATUS', 0);\n      state.sidebar.opened = false;\n      state.sidebar.withoutAnimation = withoutAnimation;\n    },\n    openSettingBar: function openSettingBar(state, val) {\n      state.settingBar.opened = val;\n    },\n    setMultipage: function setMultipage(state, multipage) {\n      db.save('MULTIPAGE', multipage);\n      state.multipage = multipage;\n    },\n    fixSiderbar: function fixSiderbar(state, val) {\n      db.save('FIX_SIDERBAR', val);\n      state.fixSiderbar = val;\n    },\n    fixHeader: function fixHeader(state, val) {\n      db.save('FIX_HEADER', val);\n      state.fixHeader = val;\n    },\n    setSettingBar: function setSettingBar(state, val) {\n      state.settingBar.opened = val;\n    },\n    setColor: function setColor(state, color) {\n      db.save('COLOR', color);\n      state.color = color;\n    },\n    setLanguage: function setLanguage(state, language) {\n      db.save('LANGUAGE', language);\n      state.language = language;\n    },\n    toggleDevice: function toggleDevice(state, device) {\n      state.device = device;\n    },\n    setSidebarLogo: function setSidebarLogo(state, val) {\n      db.save('SIDEBAR_LOGO', val);\n      state.sidebarLogo = val;\n    },\n    setUniqueOpened: function setUniqueOpened(state, val) {\n      db.save('UNIQUE_OPENED', val);\n      state.uniqueOpened = val;\n    },\n    setTheme: function setTheme(state, val) {\n      state.theme = val;\n    }\n  }\n};",null]}