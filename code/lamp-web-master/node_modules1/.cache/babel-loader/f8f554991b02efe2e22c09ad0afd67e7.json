{"remainingRequest":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js!E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js!E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web-master(finish\\lamp-web-master\\src\\views\\lamp\\tenant\\datasourceConfig\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\src\\views\\lamp\\tenant\\datasourceConfig\\index.vue","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\babel.config.js","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1686711135008},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.find-index\";\nimport _defineProperty from \"E:/project/lamp-web-master(finish/lamp-web-master/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es6.regexp.search\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Pagination from \"@/components/Pagination\";\nimport DatasourceConfigEdit from \"./edit\";\nimport datasourceConfigApi from \"@/api/DatasourceConfig.js\";\nimport elDragDialog from '@/directive/el-drag-dialog';\nimport { downloadFile, initQueryParams } from '@/utils/commons';\nexport default {\n  name: \"DatasourceConfigManage\",\n  directives: {\n    elDragDialog: elDragDialog\n  },\n  components: {\n    Pagination: Pagination,\n    DatasourceConfigEdit: DatasourceConfigEdit\n  },\n  filters: {},\n  data: function data() {\n    return {\n      dialog: {\n        isVisible: false,\n        title: \"\"\n      },\n      isTestConnect: false,\n      preview: {\n        isVisible: false,\n        context: ''\n      },\n      tableKey: 0,\n      queryParams: initQueryParams({}),\n      selection: [],\n      loading: false,\n      tableData: {\n        total: 0\n      },\n      enums: {}\n    };\n  },\n  computed: {},\n  mounted: function mounted() {\n    this.fetch();\n  },\n  methods: {\n    editClose: function editClose() {\n      this.dialog.isVisible = false;\n    },\n    editSuccess: function editSuccess() {\n      this.search();\n    },\n    onSelectChange: function onSelectChange(selection) {\n      this.selection = selection;\n    },\n    search: function search() {\n      this.fetch(_objectSpread({}, this.queryParams));\n    },\n    reset: function reset() {\n      this.queryParams = initQueryParams({});\n      this.$refs.table.clearSort();\n      this.$refs.table.clearFilter();\n      this.search();\n    },\n    exportExcelPreview: function exportExcelPreview() {\n      var _this = this;\n      if (this.queryParams.timeRange) {\n        this.queryParams.extra.createTime_st = this.queryParams.timeRange[0];\n        this.queryParams.extra.createTime_ed = this.queryParams.timeRange[1];\n      }\n      this.queryParams.extra.fileName = '导出数据源数据';\n      datasourceConfigApi.preview(this.queryParams).then(function (response) {\n        var res = response.data;\n        _this.preview.isVisible = true;\n        _this.preview.context = res.data;\n      });\n    },\n    exportExcel: function exportExcel() {\n      if (this.queryParams.timeRange) {\n        this.queryParams.extra.createTime_st = this.queryParams.timeRange[0];\n        this.queryParams.extra.createTime_ed = this.queryParams.timeRange[1];\n      }\n      this.queryParams.extra.fileName = '导出数据源数据';\n      datasourceConfigApi.export(this.queryParams).then(function (response) {\n        downloadFile(response);\n      });\n    },\n    add: function add() {\n      this.$refs.edit.type = \"add\";\n      this.dialog.title = this.$t(\"common.add\");\n      this.dialog.isVisible = true;\n    },\n    singleDelete: function singleDelete(row) {\n      this.$refs.table.clearSelection();\n      this.$refs.table.toggleRowSelection(row, true);\n      this.batchDelete();\n    },\n    batchDelete: function batchDelete() {\n      var _this2 = this;\n      if (!this.selection.length) {\n        this.$message({\n          message: this.$t(\"tips.noDataSelected\"),\n          type: \"warning\"\n        });\n        return;\n      }\n      var readonlyIndex = this.selection.findIndex(function (item) {\n        return item.readonly;\n      });\n      if (readonlyIndex > -1) {\n        this.$message({\n          message: this.$t(\"tips.readonly\"),\n          type: \"warning\"\n        });\n        return;\n      }\n      this.$confirm(\"删除数据源数据后，会导致运行中的租户无法正常运行，请谨慎删除\", this.$t(\"common.tips\"), {\n        confirmButtonText: \"坚决删除\",\n        cancelButtonText: \"取消\",\n        type: \"warning\",\n        closeOnClickModal: false,\n        closeOnPressEscape: false,\n        distinguishCancelAndClose: true\n      }).then(function () {\n        var ids = [];\n        var contain = false;\n        _this2.selection.forEach(function (item) {\n          if (item.readonly) {\n            contain = true;\n            return;\n          }\n          ids.push(item.id);\n        });\n        if (contain) {\n          _this2.$message({\n            message: _this2.$t(\"tips.readonly\"),\n            type: \"warning\"\n          });\n        } else {\n          _this2.delete(ids);\n        }\n      });\n    },\n    clearSelections: function clearSelections() {\n      this.$refs.table.clearSelection();\n    },\n    delete: function _delete(ids) {\n      var _this3 = this;\n      datasourceConfigApi.delete(ids).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess) {\n          _this3.$message({\n            message: _this3.$t(\"tips.deleteSuccess\"),\n            type: \"success\"\n          });\n          _this3.search();\n        }\n      });\n    },\n    testConnect: function testConnect(row) {\n      var _this4 = this;\n      row.poolName = 'test';\n      if (this.isTestConnect) {\n        this.$message({\n          message: '正在测试连接，请稍后',\n          type: 'warn'\n        });\n        return;\n      }\n      var loading = this.$loading({\n        lock: true,\n        text: 'Loading',\n        spinner: 'el-icon-loading',\n        background: 'rgba(0, 0, 0, 0.7)'\n      });\n      this.isTestConnect = true;\n      datasourceConfigApi.testConnect(row).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess && res.data) {\n          _this4.$message({\n            message: '连接成功',\n            type: 'success'\n          });\n        } else {\n          _this4.$message({\n            message: '连接失败',\n            type: 'error'\n          });\n        }\n      }).catch(function (error) {\n        console.log(error);\n      }).finally(function () {\n        _this4.isTestConnect = false;\n        loading.close();\n      });\n    },\n    copy: function copy(row) {\n      this.$refs.edit.setDatasourceConfig(row);\n      this.$refs.edit.type = \"copy\";\n      this.dialog.title = this.$t(\"common.copy\");\n      this.dialog.isVisible = true;\n    },\n    edit: function edit(row) {\n      this.$refs.edit.setDatasourceConfig(row);\n      this.$refs.edit.type = \"edit\";\n      this.dialog.title = this.$t(\"common.edit\");\n      this.dialog.isVisible = true;\n    },\n    fetch: function fetch() {\n      var _this5 = this;\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.loading = true;\n      if (this.queryParams.timeRange) {\n        this.queryParams.extra.createTime_st = this.queryParams.timeRange[0];\n        this.queryParams.extra.createTime_ed = this.queryParams.timeRange[1];\n      }\n      this.queryParams.current = params.current ? params.current : this.queryParams.current;\n      this.queryParams.size = params.size ? params.size : this.queryParams.size;\n      datasourceConfigApi.page(this.queryParams).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess) {\n          _this5.tableData = res.data;\n        }\n        // eslint-disable-next-line no-return-assign\n      }).finally(function () {\n        return _this5.loading = false;\n      });\n    },\n    sortChange: function sortChange(val) {\n      this.queryParams.sort = val.prop;\n      this.queryParams.order = val.order;\n      if (this.queryParams.sort) {\n        this.search();\n      }\n    },\n    filterChange: function filterChange(filters) {\n      for (var key in filters) {\n        if (key.includes('.')) {\n          var val = {};\n          val[key.split('.')[1]] = filters[key][0];\n          this.queryParams.model[key.split('.')[0]] = val;\n        } else {\n          this.queryParams.model[key] = filters[key][0];\n        }\n      }\n      this.search();\n    },\n    cellClick: function cellClick(row, column) {\n      var _this6 = this;\n      if (column['columnKey'] !== \"selectionId\") {\n        return;\n      }\n      var flag = false;\n      this.selection.forEach(function (item) {\n        if (item.id === row.id) {\n          flag = true;\n          _this6.$refs.table.toggleRowSelection(row);\n        }\n      });\n      if (!flag) {\n        this.$refs.table.toggleRowSelection(row, true);\n      }\n    }\n  }\n};",{"version":3,"names":["Pagination","DatasourceConfigEdit","datasourceConfigApi","elDragDialog","downloadFile","initQueryParams","name","directives","components","filters","data","dialog","isVisible","title","isTestConnect","preview","context","tableKey","queryParams","selection","loading","tableData","total","enums","computed","mounted","fetch","methods","editClose","editSuccess","search","onSelectChange","_objectSpread","reset","$refs","table","clearSort","clearFilter","exportExcelPreview","_this","timeRange","extra","createTime_st","createTime_ed","fileName","then","response","res","exportExcel","export","add","edit","type","$t","singleDelete","row","clearSelection","toggleRowSelection","batchDelete","_this2","length","$message","message","readonlyIndex","findIndex","item","readonly","$confirm","confirmButtonText","cancelButtonText","closeOnClickModal","closeOnPressEscape","distinguishCancelAndClose","ids","contain","forEach","push","id","delete","clearSelections","_delete","_this3","isSuccess","testConnect","_this4","poolName","$loading","lock","text","spinner","background","catch","error","console","log","finally","close","copy","setDatasourceConfig","_this5","params","arguments","undefined","current","size","page","sortChange","val","sort","prop","order","filterChange","key","includes","split","model","cellClick","column","_this6","flag"],"sources":["src/views/lamp/tenant/datasourceConfig/index.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-input\n        v-model=\"queryParams.model.name\"\n        :placeholder=\"$t('table.datasourceConfig.name')\"\n        class=\"filter-item search-item\"\n      />\n      <el-input\n        v-model=\"queryParams.model.username\"\n        :placeholder=\"$t('table.datasourceConfig.username')\"\n        class=\"filter-item search-item\"\n      />\n      <el-date-picker\n        v-model=\"queryParams.timeRange\"\n        :range-separator=\"null\"\n        :start-placeholder=\"$t('table.createTime')\"\n        class=\"filter-item search-item date-range-item\"\n        format=\"yyyy-MM-dd HH:mm:ss\"\n        type=\"daterange\"\n        value-format=\"yyyy-MM-dd HH:mm:ss\"\n      />\n      <el-button class=\"filter-item\" plain type=\"primary\" @click=\"search\">\n        {{ $t(\"table.search\") }}\n      </el-button>\n      <el-button class=\"filter-item\" plain type=\"warning\" @click=\"reset\">\n        {{ $t(\"table.reset\") }}\n      </el-button>\n      <el-button class=\"filter-item\" plain type=\"danger\" @click=\"add\">\n        {{ $t(\"table.add\") }}\n      </el-button>\n      <el-dropdown class=\"filter-item\" trigger=\"click\">\n        <el-button>\n          {{ $t(\"table.more\") }}\n          <i class=\"el-icon-arrow-down el-icon--right\" />\n        </el-button>\n        <el-dropdown-menu slot=\"dropdown\">\n          <el-dropdown-item icon=\"el-icon-delete\" @click.native=\"batchDelete\">{{ $t(\"table.delete\") }}</el-dropdown-item>\n          <el-dropdown-item @click.native=\"exportExcel\">{{ $t(\"table.export\") }}</el-dropdown-item>\n          <el-dropdown-item @click.native=\"exportExcelPreview\">{{ $t(\"table.exportPreview\") }}</el-dropdown-item>\n        </el-dropdown-menu>\n      </el-dropdown>\n    </div>\n\n    <el-table\n      :key=\"tableKey\"\n      ref=\"table\"\n      v-loading=\"loading\"\n      :data=\"tableData.records\"\n      border\n      fit\n      row-key=\"id\"\n      style=\"width: 100%;\"\n      @filter-change=\"filterChange\"\n      @selection-change=\"onSelectChange\"\n      @sort-change=\"sortChange\"\n      @cell-click=\"cellClick\"\n    >\n      <el-table-column align=\"center\" type=\"selection\" width=\"40px\" column-key=\"selectionId\" :reserve-selection=\"true\" />\n      <el-table-column\n        :label=\"$t('table.datasourceConfig.name')\"\n        align=\"center\"\n        prop=\"code\"\n        width=\"150px\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.name }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('table.datasourceConfig.username')\"\n        class-name=\"status-col\"\n        prop=\"name\"\n        width=\"100px\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.username }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('table.datasourceConfig.password')\"\n        class-name=\"status-col\"\n        width=\"100px\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.password }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('table.datasourceConfig.url')\"\n        class-name=\"status-col\"\n        :show-overflow-tooltip=\"true\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.url }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('table.datasourceConfig.driverClassName')\"\n        class-name=\"status-col\"\n        :show-overflow-tooltip=\"true\"\n        width=\"200px\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.driverClassName }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('table.createTime')\"\n        align=\"center\"\n        prop=\"createTime\"\n        sortable=\"custom\"\n        width=\"170px\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.createTime }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('table.operation')\"\n        align=\"center\"\n        column-key=\"operation\"\n        class-name=\"small-padding fixed-width\"\n        width=\"150px\"\n      >\n        <template slot-scope=\"{ row }\">\n          <i\n            class=\"el-icon-copy-document table-operation\"\n            style=\"color: #87d068;\"\n            @click=\"copy(row)\"\n          />\n          <i\n            class=\"el-icon-connection table-operation\"\n            style=\"color: #87d068;\"\n            @click=\"testConnect(row)\"\n          />\n          <i\n            class=\"el-icon-edit table-operation\"\n            style=\"color: #2db7f5;\"\n            @click=\"edit(row)\"\n          />\n          <i\n            class=\"el-icon-delete table-operation\"\n            style=\"color: #f50;\"\n            @click=\"singleDelete(row)\"\n          />\n        </template>\n      </el-table-column>\n    </el-table>\n    <pagination\n      v-show=\"tableData.total > 0\"\n      :limit.sync=\"queryParams.size\"\n      :page.sync=\"queryParams.current\"\n      :total=\"Number(tableData.total)\"\n      @pagination=\"fetch\"\n    />\n    <datasourceConfig-edit\n      ref=\"edit\"\n      :dialog-visible=\"dialog.isVisible\"\n      :title=\"dialog.title\"\n      @close=\"editClose\"\n      @success=\"editSuccess\"\n    />\n    <el-dialog\n      v-el-drag-dialog\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"true\"\n      title=\"预览\"\n      width=\"80%\"\n      top=\"50px\"\n      :visible.sync=\"preview.isVisible\"\n    >\n      <el-scrollbar>\n        <div v-html=\"preview.context\" />\n      </el-scrollbar>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport Pagination from \"@/components/Pagination\"\nimport DatasourceConfigEdit from \"./edit\"\nimport datasourceConfigApi from \"@/api/DatasourceConfig.js\"\nimport elDragDialog from '@/directive/el-drag-dialog'\nimport { downloadFile, initQueryParams } from '@/utils/commons'\nexport default {\n  name: \"DatasourceConfigManage\",\n  directives: { elDragDialog },\n  components: { Pagination, DatasourceConfigEdit },\n  filters: {\n  },\n  data () {\n    return {\n      dialog: {\n        isVisible: false,\n        title: \"\"\n      },\n      isTestConnect: false,\n      preview: {\n        isVisible: false,\n        context: ''\n      },\n      tableKey: 0,\n      queryParams: initQueryParams({}),\n      selection: [],\n      loading: false,\n      tableData: {\n        total: 0\n      },\n      enums: {\n      }\n    }\n  },\n  computed: {\n  },\n  mounted () {\n    this.fetch()\n  },\n  methods: {\n    editClose () {\n      this.dialog.isVisible = false\n    },\n    editSuccess () {\n      this.search()\n    },\n    onSelectChange (selection) {\n      this.selection = selection\n    },\n    search () {\n      this.fetch({\n        ...this.queryParams\n      })\n    },\n    reset () {\n      this.queryParams = initQueryParams({})\n      this.$refs.table.clearSort()\n      this.$refs.table.clearFilter()\n      this.search()\n    },\n    exportExcelPreview () {\n      if (this.queryParams.timeRange) {\n        this.queryParams.extra.createTime_st = this.queryParams.timeRange[0]\n        this.queryParams.extra.createTime_ed = this.queryParams.timeRange[1]\n      }\n      this.queryParams.extra.fileName = '导出数据源数据'\n      datasourceConfigApi.preview(this.queryParams).then(response => {\n        const res = response.data\n        this.preview.isVisible = true\n        this.preview.context = res.data\n      })\n    },\n    exportExcel () {\n      if (this.queryParams.timeRange) {\n        this.queryParams.extra.createTime_st = this.queryParams.timeRange[0]\n        this.queryParams.extra.createTime_ed = this.queryParams.timeRange[1]\n      }\n      this.queryParams.extra.fileName = '导出数据源数据'\n      datasourceConfigApi.export(this.queryParams).then(response => {\n        downloadFile(response)\n      })\n    },\n    add () {\n      this.$refs.edit.type = \"add\"\n      this.dialog.title = this.$t(\"common.add\")\n      this.dialog.isVisible = true\n    },\n    singleDelete (row) {\n      this.$refs.table.clearSelection()\n      this.$refs.table.toggleRowSelection(row, true)\n      this.batchDelete()\n    },\n    batchDelete () {\n      if (!this.selection.length) {\n        this.$message({\n          message: this.$t(\"tips.noDataSelected\"),\n          type: \"warning\"\n        })\n        return\n      }\n\n      const readonlyIndex = this.selection.findIndex(item => item.readonly)\n\n      if (readonlyIndex > -1) {\n        this.$message({\n          message: this.$t(\"tips.readonly\"),\n          type: \"warning\"\n        })\n        return\n      }\n\n      this.$confirm(\"删除数据源数据后，会导致运行中的租户无法正常运行，请谨慎删除\", this.$t(\"common.tips\"), {\n        confirmButtonText: \"坚决删除\",\n        cancelButtonText: \"取消\",\n        type: \"warning\",\n        closeOnClickModal: false,\n        closeOnPressEscape: false,\n        distinguishCancelAndClose: true\n      })\n        .then(() => {\n          const ids = []\n          let contain = false\n          this.selection.forEach(item => {\n            if (item.readonly) {\n              contain = true\n              return\n            }\n            ids.push(item.id)\n          })\n          if (contain) {\n            this.$message({\n              message: this.$t(\"tips.readonly\"),\n              type: \"warning\"\n            })\n          } else {\n            this.delete(ids)\n          }\n        })\n    },\n    clearSelections () {\n      this.$refs.table.clearSelection()\n    },\n    delete (ids) {\n      datasourceConfigApi.delete(ids).then(response => {\n        const res = response.data\n        if (res.isSuccess) {\n          this.$message({\n            message: this.$t(\"tips.deleteSuccess\"),\n            type: \"success\"\n          })\n          this.search()\n        }\n      })\n    },\n    testConnect (row) {\n      row.poolName = 'test'\n      if (this.isTestConnect) {\n        this.$message({\n          message: '正在测试连接，请稍后',\n          type: 'warn'\n        })\n        return\n      }\n\n      const loading = this.$loading({\n        lock: true,\n        text: 'Loading',\n        spinner: 'el-icon-loading',\n        background: 'rgba(0, 0, 0, 0.7)'\n      });\n      this.isTestConnect = true\n      datasourceConfigApi.testConnect(row).then((response) => {\n        const res = response.data\n        if (res.isSuccess && res.data) {\n          this.$message({\n            message: '连接成功',\n            type: 'success'\n          })\n        } else {\n          this.$message({\n            message: '连接失败',\n            type: 'error'\n          })\n        }\n      }).catch((error) => {\n        console.log(error)\n      }).finally(() => {\n        this.isTestConnect = false;\n        loading.close();\n      })\n    },\n    copy (row) {\n      this.$refs.edit.setDatasourceConfig(row)\n      this.$refs.edit.type = \"copy\"\n      this.dialog.title = this.$t(\"common.copy\")\n      this.dialog.isVisible = true\n    },\n    edit (row) {\n      this.$refs.edit.setDatasourceConfig(row)\n      this.$refs.edit.type = \"edit\"\n      this.dialog.title = this.$t(\"common.edit\")\n      this.dialog.isVisible = true\n    },\n    fetch (params = {}) {\n      this.loading = true\n      if (this.queryParams.timeRange) {\n        this.queryParams.extra.createTime_st = this.queryParams.timeRange[0]\n        this.queryParams.extra.createTime_ed = this.queryParams.timeRange[1]\n      }\n\n      this.queryParams.current = params.current ? params.current : this.queryParams.current\n      this.queryParams.size = params.size ? params.size : this.queryParams.size\n\n      datasourceConfigApi.page(this.queryParams).then(response => {\n        const res = response.data\n        if (res.isSuccess) {\n          this.tableData = res.data\n        }\n        // eslint-disable-next-line no-return-assign\n      }).finally(() => this.loading = false)\n    },\n    sortChange (val) {\n      this.queryParams.sort = val.prop\n      this.queryParams.order = val.order\n      if (this.queryParams.sort) {\n        this.search()\n      }\n    },\n    filterChange (filters) {\n      for (const key in filters) {\n        if (key.includes('.')) {\n          const val = {}\n          val[key.split('.')[1]] = filters[key][0]\n          this.queryParams.model[key.split('.')[0]] = val\n        } else {\n          this.queryParams.model[key] = filters[key][0]\n        }\n      }\n      this.search()\n    },\n    cellClick (row, column) {\n      if (column['columnKey'] !== \"selectionId\") {\n        return\n      }\n      let flag = false\n      this.selection.forEach((item) => {\n        if (item.id === row.id) {\n          flag = true\n          this.$refs.table.toggleRowSelection(row)\n        }\n      })\n\n      if (!flag) {\n        this.$refs.table.toggleRowSelection(row, true)\n      }\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scoped></style>\n"],"mappings":"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"}]}