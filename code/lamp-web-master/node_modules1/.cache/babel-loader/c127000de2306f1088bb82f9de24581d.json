{"remainingRequest":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\src\\views\\lamp\\activiti\\leave\\ruTask\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\src\\views\\lamp\\activiti\\leave\\ruTask\\edit.vue","mtime":1679380940000},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\babel.config.js","mtime":1679380940000},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1686711135008},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport activitiApi from \"@/api/Activiti.js\";\nfunction subFormInst() {\n  return {\n    startTime: '',\n    endTime: '',\n    whenLong: '',\n    type: '',\n    reason: ''\n  };\n}\nfunction subForm() {\n  return {\n    id: null,\n    itemName: '',\n    itemContent: '',\n    itemRemake: '',\n    result: true,\n    bizId: '',\n    taskId: '',\n    instId: '',\n    tenantCode: '',\n    module: 'leave'\n  };\n}\nexport default {\n  name: 'ModelEdit',\n  props: {\n    type: {\n      type: String,\n      default: 'add'\n    }\n  },\n  data: function data() {\n    return {\n      editVisible: false,\n      types: [\"病假\", \"事假\"],\n      subForm: subForm(),\n      subFormInst: subFormInst(),\n      row: {},\n      tableKey: 'id',\n      tableData: [],\n      loading: false,\n      isSubmit: false\n    };\n  },\n  computed: {},\n  watch: {},\n  mounted: function mounted() {},\n  methods: {\n    open: function open(row) {\n      this.editVisible = true;\n      this.row = row;\n      this.subForm.taskId = this.row.id;\n      this.subForm.tenantCode = this.row.tenantCode;\n      this.subForm.itemName = this.row.name;\n      if (this.row.inst && this.row.inst.data) {\n        this.subForm.instId = this.row.inst.data.id;\n      }\n      if (this.row.biz && this.row.biz.data) {\n        this.subForm.bizId = this.row.biz.data.id;\n      }\n      if (this.row.taskDefKey === 'QJ1') {\n        this.isSubmit = true;\n      }\n      this.getDetail();\n      this.getList();\n      this.getDetailInst();\n    },\n    editClose: function editClose() {\n      this.$parent.editClose();\n      this.row = {};\n      this.subForm = subForm();\n      this.formItemList = [];\n      this.formList = [];\n      this.formKey = null;\n      this.editVisible = false;\n    },\n    getList: function getList() {\n      var vm = this;\n      if (!vm.row.id) {\n        return;\n      }\n      if (vm.row.inst && vm.row.inst.data && vm.row.inst.data.id) {\n        vm.loading = true;\n        activitiApi.getItemList({\n          instId: vm.row.inst.data.id\n        }).then(function (response) {\n          var res = response.data;\n          if (res.code === 0 && res.data) {\n            vm.tableData = res.data;\n            vm.getReadyTaskByInst(vm.row.inst.data.id);\n          }\n        }).finally();\n      }\n    },\n    getDetail: function getDetail() {\n      var vm = this;\n      if (!vm.row.id) {\n        return;\n      }\n      activitiApi.getItemDetail({\n        taskId: vm.row.id\n      }).then(function (response) {\n        var res = response.data;\n        if (res.code === 0 && res.data) {\n          vm.subForm.id = res.data.id;\n          vm.subForm.itemName = res.data.itemName;\n          vm.subForm.itemContent = res.data.itemContent;\n          vm.subForm.itemRemake = res.data.itemRemake;\n          vm.subForm.result = res.data.result;\n        }\n      }).finally();\n    },\n    getDetailInst: function getDetailInst() {\n      var vm = this;\n      if (!vm.row.id) {\n        return;\n      }\n      if (vm.row.biz && vm.row.biz.data && vm.row.biz.data.id) {\n        activitiApi.getDetailInst({\n          id: vm.row.biz.data.id\n        }).then(function (response) {\n          var res = response.data;\n          if (res.code === 0) {\n            vm.subFormInst = res.data;\n          }\n        }).finally();\n      }\n    },\n    getReadyTaskByInst: function getReadyTaskByInst(instId) {\n      var _this = this;\n      var vm = this;\n      activitiApi.getReadyTaskByInst({\n        instId: instId\n      }).then(function (response) {\n        var res = response.data;\n        if (res.code === 0 && res.data) {\n          if (res.data) {\n            var list = res.data;\n            list.forEach(function (data) {\n              data.isReady = true;\n              data.itemName = data.name;\n              vm.tableData.unshift(data);\n            });\n          }\n        }\n      }).finally(function () {\n        return _this.loading = false;\n      });\n    },\n    submitForm: function submitForm() {\n      var vm = this;\n      activitiApi.saveItem(vm.subForm).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess) {\n          vm.$message({\n            message: vm.$t(\"tips.createSuccess\"),\n            type: 'success'\n          });\n          vm.getList();\n          vm.editClose();\n        } else {\n          vm.$message({\n            message: response.msg,\n            type: 'error'\n          });\n        }\n      }).finally(function () {\n        return vm.loading = false;\n      });\n    },\n    tableRowClassName: function tableRowClassName(_ref) {\n      var row = _ref.row,\n        rowIndex = _ref.rowIndex;\n      if (rowIndex === 0) {\n        if (row.isReady) {\n          return 'warning-row';\n        } else {\n          return 'success-row';\n        }\n      }\n      return '';\n    }\n  }\n};",null]}