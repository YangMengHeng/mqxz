{"remainingRequest":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js!E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js!E:\\project\\lamp-web1(原版)\\lamp-web-master\\src\\api\\Tenant.js","dependencies":[{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\src\\api\\Tenant.js","mtime":1679380940000},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\babel.config.js","mtime":1679380940000},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1686711135008},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"E:/project/lamp-web1(\\u539F\\u7248)/lamp-web-master/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty from \"E:/project/lamp-web1(\\u539F\\u7248)/lamp-web-master/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport axiosApi from \"./AxiosApi.js\";\nvar apiList = {\n  page: {\n    method: 'POST',\n    url: \"/tenant/tenant/page\"\n  },\n  update: {\n    method: 'PUT',\n    url: \"/tenant/tenant\"\n  },\n  save: {\n    method: 'POST',\n    url: \"/tenant/tenant\"\n  },\n  saveInit: {\n    method: 'POST',\n    url: \"/tenant/tenant/init\"\n  },\n  updateStatus: {\n    method: 'POST',\n    url: \"/tenant/tenant/status\"\n  },\n  remove: {\n    method: 'DELETE',\n    url: \"/tenant/tenant/deleteAll\"\n  },\n  list: {\n    method: 'POST',\n    url: \"/tenant/tenant/query\"\n  },\n  preview: {\n    method: 'POST',\n    url: \"/tenant/tenant/preview\"\n  },\n  export: {\n    method: 'POST',\n    url: \"/tenant/tenant/export\"\n  },\n  import: {\n    method: 'POST',\n    url: \"/tenant/tenant/import\"\n  },\n  initConnect: {\n    method: 'POST',\n    url: \"/tenant/tenant/initConnect\"\n  }\n};\nexport default {\n  page: function page(data) {\n    return axiosApi(_objectSpread(_objectSpread({}, apiList.page), {}, {\n      data: data\n    }));\n  },\n  save: function save(data) {\n    return axiosApi(_objectSpread(_objectSpread({}, apiList.save), {}, {\n      data: data\n    }));\n  },\n  // 同步创建租户，防止在切换回默认数据源时，执行其他方法\n  saveInit: function () {\n    var _saveInit = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(data) {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", axiosApi(_objectSpread(_objectSpread({}, apiList.saveInit), {}, {\n              data: data\n            })));\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    function saveInit(_x) {\n      return _saveInit.apply(this, arguments);\n    }\n    return saveInit;\n  }(),\n  update: function update(data) {\n    return axiosApi(_objectSpread(_objectSpread({}, apiList.update), {}, {\n      data: data\n    }));\n  },\n  updateStatus: function updateStatus(data) {\n    return axiosApi(_objectSpread(_objectSpread({}, apiList.updateStatus), {}, {\n      formData: true,\n      data: data\n    }));\n  },\n  remove: function remove(data) {\n    return axiosApi(_objectSpread(_objectSpread({}, apiList.remove), {}, {\n      data: data\n    }));\n  },\n  list: function list(data) {\n    return axiosApi(_objectSpread(_objectSpread({}, apiList.list), {}, {\n      data: data\n    }));\n  },\n  check: function check(code) {\n    return axiosApi({\n      method: 'GET',\n      url: \"/tenant/tenant/check/\".concat(code)\n    });\n  },\n  preview: function preview(data) {\n    return axiosApi(_objectSpread(_objectSpread({}, apiList.preview), {}, {\n      data: data\n    }));\n  },\n  export: function _export(data) {\n    return axiosApi(_objectSpread(_objectSpread({}, apiList.export), {}, {\n      responseType: \"blob\",\n      data: data\n    }));\n  },\n  import: function _import(data) {\n    return axiosApi(_objectSpread(_objectSpread({}, apiList.import), {}, {\n      data: data\n    }));\n  },\n  initConnect: function initConnect(data) {\n    return axiosApi(_objectSpread(_objectSpread({}, apiList.initConnect), {}, {\n      custom: {\n        timeout: 60000\n      },\n      data: data\n    }));\n  }\n};",null]}