{"remainingRequest":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js!E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web1(原版)\\lamp-web-master\\src\\views\\lamp\\tenant\\datasourceConfig\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\src\\views\\lamp\\tenant\\datasourceConfig\\edit.vue","mtime":1679380940000},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\babel.config.js","mtime":1679380940000},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"E:/project/lamp-web1(\\u539F\\u7248)/lamp-web-master/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"E:/project/lamp-web1(\\u539F\\u7248)/lamp-web-master/node_modules/@babel/runtime/helpers/defineProperty.js\"));\nvar _DatasourceConfig = _interopRequireDefault(require(\"@/api/DatasourceConfig.js\"));\nvar _GlobalUser = _interopRequireDefault(require(\"@/api/GlobalUser\"));\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'DatasourceConfigEdit',\n  props: {\n    dialogVisible: {\n      type: Boolean,\n      default: false\n    },\n    title: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      type: 'add',\n      datasourceConfig: this.initDatasourceConfig(),\n      screenWidth: 0,\n      width: this.initWidth(),\n      roles: [],\n      rules: {\n        name: [{\n          required: true,\n          message: this.$t('rules.require'),\n          trigger: 'blur'\n        }],\n        username: [{\n          required: true,\n          message: this.$t('rules.require'),\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: this.$t('rules.require'),\n          trigger: 'blur'\n        }],\n        url: [{\n          required: true,\n          message: this.$t('rules.require'),\n          trigger: 'blur'\n        }, {\n          validator: function validator(rule, value, callback) {\n            if (value.indexOf('lamp_base_') > 0 || value.indexOf('lamp_extend_') > 0) {\n              callback();\n            } else {\n              callback('数据库必须包含 lamp_base 或者 lamp_extend ');\n            }\n          },\n          trigger: 'blur'\n        }],\n        driverClassName: [{\n          required: true,\n          message: this.$t('rules.require'),\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    isVisible: {\n      get: function get() {\n        return this.dialogVisible;\n      },\n      set: function set() {\n        this.close();\n        this.reset();\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n    window.onresize = function () {\n      return function () {\n        _this.width = _this.initWidth();\n      }();\n    };\n  },\n  methods: {\n    initDatasourceConfig: function initDatasourceConfig() {\n      return {\n        id: '',\n        name: '1111-基础服务',\n        username: '',\n        password: '',\n        driverClassName: 'com.mysql.cj.jdbc.Driver',\n        url: 'jdbc:mysql://127.0.0.1:3306/lamp_base_1111?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true'\n      };\n    },\n    initWidth: function initWidth() {\n      this.screenWidth = document.body.clientWidth;\n      if (this.screenWidth < 991) {\n        return '90%';\n      } else if (this.screenWidth < 1400) {\n        return '45%';\n      } else {\n        return '800px';\n      }\n    },\n    setDatasourceConfig: function setDatasourceConfig(val) {\n      this.datasourceConfig = _objectSpread({}, val);\n      if (this.type === 'copy') {\n        this.datasourceConfig.id = null;\n      }\n    },\n    close: function close() {\n      this.$emit('close');\n    },\n    submitForm: function submitForm() {\n      var _this2 = this;\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          if (_this2.type === 'edit') {\n            _this2.update();\n          } else {\n            _this2.save();\n          }\n        } else {\n          return false;\n        }\n      });\n    },\n    save: function save() {\n      var _this3 = this;\n      _DatasourceConfig.default.save(this.datasourceConfig).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess) {\n          _this3.isVisible = false;\n          _this3.$message({\n            message: _this3.$t('tips.createSuccess'),\n            type: 'success'\n          });\n          _this3.$emit('success');\n        }\n      }).finally(function () {\n        return true;\n      });\n    },\n    update: function update() {\n      var _this4 = this;\n      _DatasourceConfig.default.update(this.datasourceConfig).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess) {\n          _this4.isVisible = false;\n          _this4.$message({\n            message: _this4.$t('tips.updateSuccess'),\n            type: 'success'\n          });\n          _this4.$emit('success');\n        }\n      }).finally(function () {\n        return true;\n      });\n    },\n    reset: function reset() {\n      // 先清除校验，再清除表单，不然有奇怪的bug\n      this.$refs.form.clearValidate();\n      this.$refs.form.resetFields();\n      this.datasourceConfig = this.initDatasourceConfig();\n    }\n  }\n};\nexports.default = _default;",null]}