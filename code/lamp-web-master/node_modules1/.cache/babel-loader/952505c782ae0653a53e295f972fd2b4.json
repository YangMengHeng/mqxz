{"remainingRequest":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js!E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web-master(finish\\lamp-web-master\\src\\views\\lamp\\org\\station\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\src\\views\\lamp\\org\\station\\edit.vue","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\babel.config.js","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"E:/project/lamp-web-master(finish/lamp-web-master/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"E:/project/lamp-web-master(finish/lamp-web-master/node_modules/@babel/runtime/helpers/defineProperty.js\"));\nvar _vueTreeselect = _interopRequireDefault(require(\"@riophae/vue-treeselect\"));\nrequire(\"@riophae/vue-treeselect/dist/vue-treeselect.css\");\nvar _Station = _interopRequireDefault(require(\"@/api/Station.js\"));\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: \"StationEdit\",\n  components: {\n    Treeselect: _vueTreeselect.default\n  },\n  props: {\n    dialogVisible: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: \"add\"\n    }\n  },\n  data: function data() {\n    var _this = this;\n    return {\n      remoteStationLoading: false,\n      station: this.initStation(),\n      screenWidth: 0,\n      width: this.initWidth(),\n      orgList: [],\n      stationList: [],\n      rules: {\n        name: [{\n          required: true,\n          message: this.$t(\"rules.require\"),\n          trigger: \"blur\"\n        }, {\n          min: 1,\n          max: 255,\n          message: this.$t(\"rules.range4to10\"),\n          trigger: \"blur\"\n        }, {\n          validator: function validator(rule, value, callback) {\n            if (!_this.station.id) {\n              // this.$get(`system/user/check/${value}`).then((r) => {\n              //   if (!r.data) {\n              //     callback(this.$t('rules.usernameExist'))\n              //   } else {\n              //     callback()\n              //   }\n              // })\n            } else {\n              // callback()\n            }\n            callback();\n          },\n          trigger: \"blur\"\n        }],\n        state: {\n          required: true,\n          message: this.$t(\"rules.require\"),\n          trigger: \"blur\"\n        }\n      }\n    };\n  },\n  computed: {\n    isVisible: {\n      get: function get() {\n        return this.dialogVisible;\n      },\n      set: function set() {\n        this.close();\n        this.reset();\n      }\n    },\n    title: function title() {\n      return this.type === \"add\" ? this.$t(\"common.add\") : this.$t(\"common.edit\");\n    }\n  },\n  watch: {},\n  mounted: function mounted() {\n    var _this2 = this;\n    window.onresize = function () {\n      return function () {\n        _this2.width = _this2.initWidth();\n      }();\n    };\n  },\n  methods: {\n    initStation: function initStation() {\n      return {\n        id: \"\",\n        name: \"\",\n        org: {\n          key: null,\n          data: null\n        },\n        state: true,\n        describe: \"\"\n      };\n    },\n    initWidth: function initWidth() {\n      this.screenWidth = document.body.clientWidth;\n      if (this.screenWidth < 991) {\n        return \"90%\";\n      } else if (this.screenWidth < 1400) {\n        return \"45%\";\n      } else {\n        return \"800px\";\n      }\n    },\n    loadListOptions: function loadListOptions(_ref) {\n      var callback = _ref.callback;\n      callback();\n    },\n    setStation: function setStation(val, orgs) {\n      var vm = this;\n      vm.orgList = orgs;\n      if (val) {\n        vm.station = _objectSpread({}, val);\n      }\n    },\n    close: function close() {\n      this.$emit(\"close\");\n    },\n    reset: function reset() {\n      // 先清除校验，再清除表单，不然有奇怪的bug\n      this.$refs.form.clearValidate();\n      this.$refs.form.resetFields();\n      this.station = this.initStation();\n    },\n    submitForm: function submitForm() {\n      var vm = this;\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          vm.editSubmit();\n        } else {\n          return false;\n        }\n      });\n    },\n    editSubmit: function editSubmit() {\n      var vm = this;\n      if (vm.type === \"add\") {\n        vm.save();\n      } else {\n        vm.update();\n      }\n    },\n    save: function save() {\n      var vm = this;\n      _Station.default.save(this.station).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess) {\n          vm.isVisible = false;\n          vm.$message({\n            message: vm.$t(\"tips.createSuccess\"),\n            type: \"success\"\n          });\n          vm.$emit(\"success\");\n        }\n      });\n    },\n    update: function update() {\n      var _this3 = this;\n      _Station.default.update(this.station).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess) {\n          _this3.isVisible = false;\n          _this3.$message({\n            message: _this3.$t(\"tips.updateSuccess\"),\n            type: \"success\"\n          });\n          _this3.$emit(\"success\");\n        }\n      });\n    }\n  }\n};\nexports.default = _default;",{"version":3,"names":["_vueTreeselect","_interopRequireDefault","require","_Station","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","name","components","Treeselect","props","dialogVisible","type","Boolean","String","data","_this","remoteStationLoading","station","initStation","screenWidth","width","initWidth","orgList","stationList","rules","required","message","$t","trigger","min","max","validator","rule","value","callback","id","state","computed","isVisible","get","set","close","reset","title","watch","mounted","_this2","window","onresize","methods","org","describe","document","body","clientWidth","loadListOptions","_ref","setStation","val","orgs","vm","$emit","$refs","form","clearValidate","resetFields","submitForm","validate","valid","editSubmit","save","update","stationApi","then","response","res","isSuccess","$message","_this3","exports","_default"],"sources":["src/views/lamp/org/station/edit.vue"],"sourcesContent":["<template>\n  <el-dialog\n    :close-on-click-modal=\"false\"\n    :close-on-press-escape=\"true\"\n    :title=\"title\"\n    :type=\"type\"\n    :visible.sync=\"isVisible\"\n    :width=\"width\"\n    top=\"50px\"\n  >\n    <el-form\n      :model=\"station\"\n      :rules=\"rules\"\n      label-position=\"right\"\n      label-width=\"100px\"\n      ref=\"form\"\n    >\n      <el-form-item :label=\"$t('table.station.name')\" prop=\"name\">\n        <el-input v-model=\"station.name\" />\n      </el-form-item>\n      <el-form-item :label=\"$t('table.station.orgId')\" prop=\"orgId\">\n        <treeselect\n          :clear-value-text=\"$t('common.clear')\"\n          :load-options=\"loadListOptions\"\n          :multiple=\"false\"\n          :options=\"orgList\"\n          :searchable=\"true\"\n          placeholder=\" \"\n          style=\"width:100%\"\n          v-model=\"station.orgId\"\n        />\n      </el-form-item>\n      <el-form-item :label=\"$t('table.station.state')\" prop=\"state\">\n        <el-radio-group v-model=\"station.state\">\n          <el-radio :label=\"true\">{{ $t(\"common.state.valid\") }}</el-radio>\n          <el-radio :label=\"false\">{{ $t(\"common.state.invalid\") }}</el-radio>\n        </el-radio-group>\n      </el-form-item>\n      <el-form-item :label=\"$t('table.station.describe')\" prop=\"describe\">\n        <el-input v-model=\"station.describe\" />\n      </el-form-item>\n    </el-form>\n    <div class=\"dialog-footer\" slot=\"footer\">\n      <el-button @click=\"isVisible = false\" plain type=\"warning\">{{\n        $t(\"common.cancel\")\n      }}</el-button>\n      <el-button @click=\"submitForm\" plain type=\"primary\">{{\n        $t(\"common.confirm\")\n      }}</el-button>\n    </div>\n  </el-dialog>\n</template>\n<script>\nimport Treeselect from \"@riophae/vue-treeselect\";\nimport \"@riophae/vue-treeselect/dist/vue-treeselect.css\";\nimport stationApi from \"@/api/Station.js\";\n\nexport default {\n  name: \"StationEdit\",\n  components: { Treeselect },\n  props: {\n    dialogVisible: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: \"add\"\n    }\n  },\n  data() {\n    return {\n      remoteStationLoading: false,\n      station: this.initStation(),\n      screenWidth: 0,\n      width: this.initWidth(),\n      orgList: [],\n      stationList: [],\n      rules: {\n        name: [\n          {\n            required: true,\n            message: this.$t(\"rules.require\"),\n            trigger: \"blur\"\n          },\n          {\n            min: 1,\n            max: 255,\n            message: this.$t(\"rules.range4to10\"),\n            trigger: \"blur\"\n          },\n          {\n            validator: (rule, value, callback) => {\n              if (!this.station.id) {\n                // this.$get(`system/user/check/${value}`).then((r) => {\n                //   if (!r.data) {\n                //     callback(this.$t('rules.usernameExist'))\n                //   } else {\n                //     callback()\n                //   }\n                // })\n              } else {\n                // callback()\n              }\n              callback();\n            },\n            trigger: \"blur\"\n          }\n        ],\n        state: {\n          required: true,\n          message: this.$t(\"rules.require\"),\n          trigger: \"blur\"\n        }\n      }\n    };\n  },\n  computed: {\n    isVisible: {\n      get() {\n        return this.dialogVisible;\n      },\n      set() {\n        this.close();\n        this.reset();\n      }\n    },\n    title() {\n      return this.type === \"add\"\n        ? this.$t(\"common.add\")\n        : this.$t(\"common.edit\");\n    }\n  },\n  watch: {},\n  mounted() {\n    window.onresize = () => {\n      return (() => {\n        this.width = this.initWidth();\n      })();\n    };\n  },\n  methods: {\n    initStation() {\n      return {\n        id: \"\",\n        name: \"\",\n        org: {\n          key: null,\n          data: null\n        },\n        state: true,\n        describe: \"\"\n      };\n    },\n    initWidth() {\n      this.screenWidth = document.body.clientWidth;\n      if (this.screenWidth < 991) {\n        return \"90%\";\n      } else if (this.screenWidth < 1400) {\n        return \"45%\";\n      } else {\n        return \"800px\";\n      }\n    },\n    loadListOptions({ callback }) {\n      callback();\n    },\n    setStation(val, orgs) {\n      const vm = this;\n      vm.orgList = orgs;\n      if (val) {\n        vm.station = { ...val };\n      }\n    },\n    close() {\n      this.$emit(\"close\");\n    },\n    reset() {\n      // 先清除校验，再清除表单，不然有奇怪的bug\n      this.$refs.form.clearValidate();\n      this.$refs.form.resetFields();\n      this.station = this.initStation();\n    },\n    submitForm() {\n      const vm = this;\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          vm.editSubmit();\n        } else {\n          return false;\n        }\n      });\n    },\n    editSubmit() {\n      const vm = this;\n      if (vm.type === \"add\") {\n        vm.save();\n      } else {\n        vm.update();\n      }\n    },\n    save() {\n      const vm = this;\n      stationApi.save(this.station).then(response => {\n        const res = response.data;\n        if (res.isSuccess) {\n          vm.isVisible = false;\n          vm.$message({\n            message: vm.$t(\"tips.createSuccess\"),\n            type: \"success\"\n          });\n          vm.$emit(\"success\");\n        }\n      });\n    },\n    update() {\n      stationApi.update(this.station).then(response => {\n        const res = response.data;\n        if (res.isSuccess) {\n          this.isVisible = false;\n          this.$message({\n            message: this.$t(\"tips.updateSuccess\"),\n            type: \"success\"\n          });\n          this.$emit(\"success\");\n        }\n      });\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped></style>\n"],"mappings":"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"}]}