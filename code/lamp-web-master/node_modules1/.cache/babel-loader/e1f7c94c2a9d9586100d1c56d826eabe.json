{"remainingRequest":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js!E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js!E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web-master(finish\\lamp-web-master\\src\\views\\lamp\\system\\online\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\src\\views\\lamp\\system\\online\\index.vue","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\babel.config.js","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1686711135008},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.search\";\nimport _defineProperty from \"E:/project/lamp-web-master(finish/lamp-web-master/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport onlineApi from '@/api/Online.js';\nexport default {\n  name: 'OnlineList',\n  directives: {},\n  components: {},\n  filters: {},\n  data: function data() {\n    return {\n      tableKey: 0,\n      loading: false,\n      selection: [],\n      queryParams: {\n        name: ''\n      },\n      tableData: []\n    };\n  },\n  computed: {},\n  mounted: function mounted() {\n    this.fetch();\n  },\n  methods: {\n    onSelectChange: function onSelectChange(selection) {\n      this.selection = selection;\n    },\n    fetch: function fetch() {\n      var _this = this;\n      this.loading = true;\n      onlineApi.list(this.queryParams).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess) {\n          _this.tableData = res.data;\n        }\n      }).finally(function () {\n        return _this.loading = false;\n      });\n    },\n    clearSelections: function clearSelections() {\n      this.$refs.table.clearSelection();\n    },\n    search: function search() {\n      this.fetch(_objectSpread({}, this.queryParams));\n    },\n    reset: function reset() {\n      this.queryParams = {\n        name: ''\n      };\n      this.$refs.table.clearSort();\n      this.$refs.table.clearFilter();\n      this.search();\n    },\n    sortChange: function sortChange(val) {\n      this.search();\n    },\n    filterChange: function filterChange(filters) {\n      // for (const key in filters) {\n      //   if (key.includes('.')) {\n      //     const val = {};\n      //     val[key.split('.')[1]] = filters[key][0];\n      //     this.queryParams.model[key.split('.')[0]] = val;\n      //   } else {\n      //     this.queryParams.model[key] = filters[key][0]\n      //   }\n      // }\n      this.search();\n    },\n    cellClick: function cellClick(row, column) {\n      var _this2 = this;\n      if (column['columnKey'] !== \"selectionId\") {\n        return;\n      }\n      var flag = false;\n      this.selection.forEach(function (item) {\n        if (item.id === row.id) {\n          flag = true;\n          _this2.$refs.table.toggleRowSelection(row);\n        }\n      });\n      if (!flag) {\n        this.$refs.table.toggleRowSelection(row, true);\n      }\n    },\n    onDelete: function onDelete(row) {\n      var _this3 = this;\n      var param = {\n        userId: row.userId,\n        userToken: row.token,\n        clientId: row.clientId\n      };\n      onlineApi.t(param).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess) {\n          _this3.$message({\n            message: \"操作成功\",\n            type: 'success'\n          });\n          _this3.search();\n        } else {\n          _this3.$message({\n            message: response.msg,\n            type: 'error'\n          });\n        }\n      });\n    }\n  }\n};",{"version":3,"names":["onlineApi","name","directives","components","filters","data","tableKey","loading","selection","queryParams","tableData","computed","mounted","fetch","methods","onSelectChange","_this","list","then","response","res","isSuccess","finally","clearSelections","$refs","table","clearSelection","search","_objectSpread","reset","clearSort","clearFilter","sortChange","val","filterChange","cellClick","row","column","_this2","flag","forEach","item","id","toggleRowSelection","onDelete","_this3","param","userId","userToken","token","clientId","t","$message","message","type","msg"],"sources":["src/views/lamp/system/online/index.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-input :placeholder=\"$t('table.online.name')\" class=\"filter-item search-item\"\n                v-model=\"queryParams.name\"/>\n      <el-button @click=\"search\" class=\"filter-item\" plain type=\"primary\">{{ $t('table.search') }}</el-button>\n      <el-button @click=\"reset\" class=\"filter-item\" plain type=\"warning\">{{ $t('table.reset') }}</el-button>\n    </div>\n    <el-table\n      :data=\"tableData\"\n      :key=\"tableKey\"\n      @filter-change=\"filterChange\"\n      @selection-change=\"onSelectChange\"\n      @sort-change=\"sortChange\"\n      @cell-click=\"cellClick\"\n      border fit row-key=\"id\"\n      ref=\"table\"\n      style=\"width: 100%;\"\n      v-loading=\"loading\"\n    >\n      <el-table-column align=\"center\" type=\"selection\" column-key=\"selectionId\" width=\"40px\" :reserve-selection=\"true\"/>\n      <el-table-column :label=\"$t('table.online.account')\" :show-overflow-tooltip=\"true\" align=\"center\" prop=\"account\"\n                       width=\"100px\">\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.account }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('table.online.name')\" :show-overflow-tooltip=\"true\" align=\"left\"\n                       width=\"100px\" prop=\"name\">\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.name }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('table.online.token')\" :show-overflow-tooltip=\"true\" align=\"center\"\n                       prop=\"token\">\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.token }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('table.online.clientId')\" :show-overflow-tooltip=\"true\" align=\"center\"\n                       width=\"100px\" prop=\"clientId\">\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.clientId }}</span>\n        </template>\n      </el-table-column>\n\n      <el-table-column :label=\"$t('table.online.location')\" :show-overflow-tooltip=\"true\" align=\"center\"\n                       width=\"170px\" prop=\"location\">\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.location }}</span>\n        </template>\n      </el-table-column>\n\n      <el-table-column :label=\"$t('table.online.loginIp')\" :show-overflow-tooltip=\"true\" align=\"center\"\n                       prop=\"loginIp\" sortable=\"custom\" width=\"100px\">\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.loginIp }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('table.online.loginTime')\" :show-overflow-tooltip=\"true\" align=\"center\"\n                       prop=\"consumingTime\" width=\"170px\">\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.loginTime }}</span>\n        </template>\n      </el-table-column>\n\n      <el-table-column :label=\"$t('table.operation')\" column-key=\"operation\" align=\"center\"\n                       class-name=\"small-padding fixed-width\"\n                       width=\"110px\">\n        <template slot-scope=\"{row}\">\n          <i @click=\"onDelete(row)\" class=\"el-icon-delete table-operation\" style=\"color: #87d068;\"\n             v-has-permission=\"['authority:online:delete']\"/>\n          <el-link class=\"no-perm\" v-has-no-permission=\"['authority:online:delete']\">\n            {{ $t('tips.noPermission') }}\n          </el-link>\n        </template>\n      </el-table-column>\n    </el-table>\n\n  </div>\n</template>\n<script>\nimport onlineApi from '@/api/Online.js'\n\nexport default {\n  name: 'OnlineList',\n  directives: {},\n  components: {},\n  filters: {},\n  data() {\n    return {\n      tableKey: 0,\n      loading: false,\n      selection: [],\n      queryParams: {\n        name: ''\n      },\n      tableData: [],\n    }\n  },\n  computed: {},\n  mounted() {\n    this.fetch()\n  },\n  methods: {\n    onSelectChange(selection) {\n      this.selection = selection\n    },\n    fetch() {\n      this.loading = true;\n      onlineApi.list(this.queryParams).then(response => {\n        const res = response.data;\n        if (res.isSuccess) {\n          this.tableData = res.data;\n        }\n      }).finally(() => this.loading = false);\n    },\n    clearSelections() {\n      this.$refs.table.clearSelection()\n    },\n    search() {\n      this.fetch({\n        ...this.queryParams\n      })\n    },\n    reset() {\n      this.queryParams = { name: ''}\n      this.$refs.table.clearSort()\n      this.$refs.table.clearFilter()\n      this.search()\n    },\n    sortChange(val) {\n      this.search();\n    },\n    filterChange(filters) {\n      // for (const key in filters) {\n      //   if (key.includes('.')) {\n      //     const val = {};\n      //     val[key.split('.')[1]] = filters[key][0];\n      //     this.queryParams.model[key.split('.')[0]] = val;\n      //   } else {\n      //     this.queryParams.model[key] = filters[key][0]\n      //   }\n      // }\n      this.search()\n    },\n    cellClick(row, column) {\n      if (column['columnKey'] !== \"selectionId\") {\n        return;\n      }\n      let flag = false;\n      this.selection.forEach((item) => {\n        if (item.id === row.id) {\n          flag = true;\n          this.$refs.table.toggleRowSelection(row);\n        }\n      })\n\n      if (!flag) {\n        this.$refs.table.toggleRowSelection(row, true);\n      }\n    },\n    onDelete(row) {\n      const param = {\n        userId: row.userId,\n        userToken: row.token,\n        clientId: row.clientId,\n      }\n      onlineApi.t(param).then(response => {\n        const res = response.data;\n        if (res.isSuccess) {\n          this.$message({\n            message: \"操作成功\",\n            type: 'success'\n          });\n          this.search();\n        } else {\n          this.$message({\n            message: response.msg,\n            type: 'error'\n          });\n        }\n      })\n    },\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n</style>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA,OAAAA,SAAA;AAEA;EACAC,IAAA;EACAC,UAAA;EACAC,UAAA;EACAC,OAAA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,QAAA;MACAC,OAAA;MACAC,SAAA;MACAC,WAAA;QACAR,IAAA;MACA;MACAS,SAAA;IACA;EACA;EACAC,QAAA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAC,KAAA;EACA;EACAC,OAAA;IACAC,cAAA,WAAAA,eAAAP,SAAA;MACA,KAAAA,SAAA,GAAAA,SAAA;IACA;IACAK,KAAA,WAAAA,MAAA;MAAA,IAAAG,KAAA;MACA,KAAAT,OAAA;MACAP,SAAA,CAAAiB,IAAA,MAAAR,WAAA,EAAAS,IAAA,WAAAC,QAAA;QACA,IAAAC,GAAA,GAAAD,QAAA,CAAAd,IAAA;QACA,IAAAe,GAAA,CAAAC,SAAA;UACAL,KAAA,CAAAN,SAAA,GAAAU,GAAA,CAAAf,IAAA;QACA;MACA,GAAAiB,OAAA;QAAA,OAAAN,KAAA,CAAAT,OAAA;MAAA;IACA;IACAgB,eAAA,WAAAA,gBAAA;MACA,KAAAC,KAAA,CAAAC,KAAA,CAAAC,cAAA;IACA;IACAC,MAAA,WAAAA,OAAA;MACA,KAAAd,KAAA,CAAAe,aAAA,KACA,KAAAnB,WAAA,CACA;IACA;IACAoB,KAAA,WAAAA,MAAA;MACA,KAAApB,WAAA;QAAAR,IAAA;MAAA;MACA,KAAAuB,KAAA,CAAAC,KAAA,CAAAK,SAAA;MACA,KAAAN,KAAA,CAAAC,KAAA,CAAAM,WAAA;MACA,KAAAJ,MAAA;IACA;IACAK,UAAA,WAAAA,WAAAC,GAAA;MACA,KAAAN,MAAA;IACA;IACAO,YAAA,WAAAA,aAAA9B,OAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,KAAAuB,MAAA;IACA;IACAQ,SAAA,WAAAA,UAAAC,GAAA,EAAAC,MAAA;MAAA,IAAAC,MAAA;MACA,IAAAD,MAAA;QACA;MACA;MACA,IAAAE,IAAA;MACA,KAAA/B,SAAA,CAAAgC,OAAA,WAAAC,IAAA;QACA,IAAAA,IAAA,CAAAC,EAAA,KAAAN,GAAA,CAAAM,EAAA;UACAH,IAAA;UACAD,MAAA,CAAAd,KAAA,CAAAC,KAAA,CAAAkB,kBAAA,CAAAP,GAAA;QACA;MACA;MAEA,KAAAG,IAAA;QACA,KAAAf,KAAA,CAAAC,KAAA,CAAAkB,kBAAA,CAAAP,GAAA;MACA;IACA;IACAQ,QAAA,WAAAA,SAAAR,GAAA;MAAA,IAAAS,MAAA;MACA,IAAAC,KAAA;QACAC,MAAA,EAAAX,GAAA,CAAAW,MAAA;QACAC,SAAA,EAAAZ,GAAA,CAAAa,KAAA;QACAC,QAAA,EAAAd,GAAA,CAAAc;MACA;MACAlD,SAAA,CAAAmD,CAAA,CAAAL,KAAA,EAAA5B,IAAA,WAAAC,QAAA;QACA,IAAAC,GAAA,GAAAD,QAAA,CAAAd,IAAA;QACA,IAAAe,GAAA,CAAAC,SAAA;UACAwB,MAAA,CAAAO,QAAA;YACAC,OAAA;YACAC,IAAA;UACA;UACAT,MAAA,CAAAlB,MAAA;QACA;UACAkB,MAAA,CAAAO,QAAA;YACAC,OAAA,EAAAlC,QAAA,CAAAoC,GAAA;YACAD,IAAA;UACA;QACA;MACA;IACA;EACA;AACA"}]}