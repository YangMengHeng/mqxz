{"remainingRequest":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js!E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web-master(finish\\lamp-web-master\\src\\components\\ThemePicker\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\src\\components\\ThemePicker\\index.vue","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\babel.config.js","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"E:/project/lamp-web-master(finish/lamp-web-master/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.number.constructor\");\nrequire(\"core-js/modules/es6.regexp.to-string\");\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.regexp.constructor\");\nrequire(\"core-js/modules/es6.regexp.replace\");\nrequire(\"regenerator-runtime/runtime\");\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"E:/project/lamp-web-master(finish/lamp-web-master/node_modules/@babel/runtime/helpers/asyncToGenerator.js\"));\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar version = require('element-ui/package.json').version; // element-ui version from node_modules\nvar ORIGINAL_THEME = '#409EFF'; // default color\nvar _default = {\n  data: function data() {\n    return {\n      chalk: '',\n      // content of theme-chalk css\n      theme: ''\n    };\n  },\n  computed: {\n    defaultTheme: function defaultTheme() {\n      return this.$store.state.setting.theme;\n    }\n  },\n  watch: {\n    defaultTheme: {\n      handler: function handler(val, oldVal) {\n        this.theme = val;\n      },\n      immediate: true\n    },\n    theme: function () {\n      var _theme = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee(val) {\n        var _this = this;\n        var oldVal, themeCluster, originalCluster, $message, getHandler, url, chalkHandler, styles;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              oldVal = this.chalk ? this.theme : ORIGINAL_THEME;\n              if (!(typeof val !== 'string')) {\n                _context.next = 3;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 3:\n              themeCluster = this.getThemeCluster(val.replace('#', ''));\n              originalCluster = this.getThemeCluster(oldVal.replace('#', ''));\n              console.log(themeCluster, originalCluster);\n              $message = this.$message({\n                message: '  Compiling the theme',\n                customClass: 'theme-message',\n                type: 'success',\n                duration: 0,\n                iconClass: 'el-icon-loading'\n              });\n              getHandler = function getHandler(variable, id) {\n                return function () {\n                  var originalCluster = _this.getThemeCluster(ORIGINAL_THEME.replace('#', ''));\n                  var newStyle = _this.updateStyle(_this[variable], originalCluster, themeCluster);\n                  var styleTag = document.getElementById(id);\n                  if (!styleTag) {\n                    styleTag = document.createElement('style');\n                    styleTag.setAttribute('id', id);\n                    document.head.appendChild(styleTag);\n                  }\n                  styleTag.innerText = newStyle;\n                };\n              };\n              if (this.chalk) {\n                _context.next = 12;\n                break;\n              }\n              url = \"https://unpkg.com/element-ui@\".concat(version, \"/lib/theme-chalk/index.css\");\n              _context.next = 12;\n              return this.getCSSString(url, 'chalk');\n            case 12:\n              chalkHandler = getHandler('chalk', 'chalk-style');\n              chalkHandler();\n              styles = [].slice.call(document.querySelectorAll('style')).filter(function (style) {\n                var text = style.innerText;\n                return new RegExp(oldVal, 'i').test(text) && !/Chalk Variables/.test(text);\n              });\n              styles.forEach(function (style) {\n                var innerText = style.innerText;\n                if (typeof innerText !== 'string') return;\n                style.innerText = _this.updateStyle(innerText, originalCluster, themeCluster);\n              });\n              this.$emit('change', val);\n              $message.close();\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function theme(_x) {\n        return _theme.apply(this, arguments);\n      }\n      return theme;\n    }()\n  },\n  methods: {\n    updateStyle: function updateStyle(style, oldCluster, newCluster) {\n      var newStyle = style;\n      oldCluster.forEach(function (color, index) {\n        newStyle = newStyle.replace(new RegExp(color, 'ig'), newCluster[index]);\n      });\n      return newStyle;\n    },\n    getCSSString: function getCSSString(url, variable) {\n      var _this2 = this;\n      return new Promise(function (resolve) {\n        var xhr = new XMLHttpRequest();\n        xhr.onreadystatechange = function () {\n          if (xhr.readyState === 4 && xhr.status === 200) {\n            _this2[variable] = xhr.responseText.replace(/@font-face{[^}]+}/, '');\n            resolve();\n          }\n        };\n        xhr.open('GET', url);\n        xhr.send();\n      });\n    },\n    getThemeCluster: function getThemeCluster(theme) {\n      var tintColor = function tintColor(color, tint) {\n        var red = parseInt(color.slice(0, 2), 16);\n        var green = parseInt(color.slice(2, 4), 16);\n        var blue = parseInt(color.slice(4, 6), 16);\n        if (tint === 0) {\n          // when primary color is in its rgb space\n          return [red, green, blue].join(',');\n        } else {\n          red += Math.round(tint * (255 - red));\n          green += Math.round(tint * (255 - green));\n          blue += Math.round(tint * (255 - blue));\n          red = red.toString(16);\n          green = green.toString(16);\n          blue = blue.toString(16);\n          return \"#\".concat(red).concat(green).concat(blue);\n        }\n      };\n      var shadeColor = function shadeColor(color, shade) {\n        var red = parseInt(color.slice(0, 2), 16);\n        var green = parseInt(color.slice(2, 4), 16);\n        var blue = parseInt(color.slice(4, 6), 16);\n        red = Math.round((1 - shade) * red);\n        green = Math.round((1 - shade) * green);\n        blue = Math.round((1 - shade) * blue);\n        red = red.toString(16);\n        green = green.toString(16);\n        blue = blue.toString(16);\n        return \"#\".concat(red).concat(green).concat(blue);\n      };\n      var clusters = [theme];\n      for (var i = 0; i <= 9; i++) {\n        clusters.push(tintColor(theme, Number((i / 10).toFixed(2))));\n      }\n      clusters.push(shadeColor(theme, 0.1));\n      return clusters;\n    }\n  }\n};\nexports.default = _default;",{"version":3,"names":["version","require","ORIGINAL_THEME","_default","data","chalk","theme","computed","defaultTheme","$store","state","setting","watch","handler","val","oldVal","immediate","_theme","_asyncToGenerator2","default","regeneratorRuntime","mark","_callee","_this","themeCluster","originalCluster","$message","getHandler","url","chalkHandler","styles","wrap","_callee$","_context","prev","next","abrupt","getThemeCluster","replace","console","log","message","customClass","type","duration","iconClass","variable","id","newStyle","updateStyle","styleTag","document","getElementById","createElement","setAttribute","head","appendChild","innerText","concat","getCSSString","slice","call","querySelectorAll","filter","style","text","RegExp","test","forEach","$emit","close","stop","_x","apply","arguments","methods","oldCluster","newCluster","color","index","_this2","Promise","resolve","xhr","XMLHttpRequest","onreadystatechange","readyState","status","responseText","open","send","tintColor","tint","red","parseInt","green","blue","join","Math","round","toString","shadeColor","shade","clusters","i","push","Number","toFixed","exports"],"sources":["src/components/ThemePicker/index.vue"],"sourcesContent":["<template>\n  <el-color-picker\n    v-model=\"theme\"\n    :predefine=\"['#409EFF', '#1890ff', '#304156','#212121','#11a983', '#13c2c2', '#6959CD', '#f5222d', ]\"\n    class=\"theme-picker\"\n    popper-class=\"theme-picker-dropdown\"\n  />\n</template>\n\n<script>\nconst version = require('element-ui/package.json').version // element-ui version from node_modules\nconst ORIGINAL_THEME = '#409EFF' // default color\n\nexport default {\n  data() {\n    return {\n      chalk: '', // content of theme-chalk css\n      theme: ''\n    }\n  },\n  computed: {\n    defaultTheme() {\n      return this.$store.state.setting.theme\n    }\n  },\n  watch: {\n    defaultTheme: {\n      handler: function(val, oldVal) {\n        this.theme = val\n      },\n      immediate: true\n    },\n    async theme(val) {\n      const oldVal = this.chalk ? this.theme : ORIGINAL_THEME\n      if (typeof val !== 'string') return\n      const themeCluster = this.getThemeCluster(val.replace('#', ''))\n      const originalCluster = this.getThemeCluster(oldVal.replace('#', ''))\n      console.log(themeCluster, originalCluster)\n\n      const $message = this.$message({\n        message: '  Compiling the theme',\n        customClass: 'theme-message',\n        type: 'success',\n        duration: 0,\n        iconClass: 'el-icon-loading'\n      })\n\n      const getHandler = (variable, id) => {\n        return () => {\n          const originalCluster = this.getThemeCluster(ORIGINAL_THEME.replace('#', ''))\n          const newStyle = this.updateStyle(this[variable], originalCluster, themeCluster)\n\n          let styleTag = document.getElementById(id)\n          if (!styleTag) {\n            styleTag = document.createElement('style')\n            styleTag.setAttribute('id', id)\n            document.head.appendChild(styleTag)\n          }\n          styleTag.innerText = newStyle\n        }\n      }\n\n      if (!this.chalk) {\n        const url = `https://unpkg.com/element-ui@${version}/lib/theme-chalk/index.css`\n        await this.getCSSString(url, 'chalk')\n      }\n\n      const chalkHandler = getHandler('chalk', 'chalk-style')\n\n      chalkHandler()\n\n      const styles = [].slice.call(document.querySelectorAll('style'))\n        .filter(style => {\n          const text = style.innerText\n          return new RegExp(oldVal, 'i').test(text) && !/Chalk Variables/.test(text)\n        })\n      styles.forEach(style => {\n        const { innerText } = style\n        if (typeof innerText !== 'string') return\n        style.innerText = this.updateStyle(innerText, originalCluster, themeCluster)\n      })\n\n      this.$emit('change', val)\n\n      $message.close()\n    }\n  },\n\n  methods: {\n    updateStyle(style, oldCluster, newCluster) {\n      let newStyle = style\n      oldCluster.forEach((color, index) => {\n        newStyle = newStyle.replace(new RegExp(color, 'ig'), newCluster[index])\n      })\n      return newStyle\n    },\n\n    getCSSString(url, variable) {\n      return new Promise(resolve => {\n        const xhr = new XMLHttpRequest()\n        xhr.onreadystatechange = () => {\n          if (xhr.readyState === 4 && xhr.status === 200) {\n            this[variable] = xhr.responseText.replace(/@font-face{[^}]+}/, '')\n            resolve()\n          }\n        }\n        xhr.open('GET', url)\n        xhr.send()\n      })\n    },\n\n    getThemeCluster(theme) {\n      const tintColor = (color, tint) => {\n        let red = parseInt(color.slice(0, 2), 16)\n        let green = parseInt(color.slice(2, 4), 16)\n        let blue = parseInt(color.slice(4, 6), 16)\n\n        if (tint === 0) { // when primary color is in its rgb space\n          return [red, green, blue].join(',')\n        } else {\n          red += Math.round(tint * (255 - red))\n          green += Math.round(tint * (255 - green))\n          blue += Math.round(tint * (255 - blue))\n\n          red = red.toString(16)\n          green = green.toString(16)\n          blue = blue.toString(16)\n\n          return `#${red}${green}${blue}`\n        }\n      }\n\n      const shadeColor = (color, shade) => {\n        let red = parseInt(color.slice(0, 2), 16)\n        let green = parseInt(color.slice(2, 4), 16)\n        let blue = parseInt(color.slice(4, 6), 16)\n\n        red = Math.round((1 - shade) * red)\n        green = Math.round((1 - shade) * green)\n        blue = Math.round((1 - shade) * blue)\n\n        red = red.toString(16)\n        green = green.toString(16)\n        blue = blue.toString(16)\n\n        return `#${red}${green}${blue}`\n      }\n\n      const clusters = [theme]\n      for (let i = 0; i <= 9; i++) {\n        clusters.push(tintColor(theme, Number((i / 10).toFixed(2))))\n      }\n      clusters.push(shadeColor(theme, 0.1))\n      return clusters\n    }\n  }\n}\n</script>\n\n<style>\n.theme-message,\n.theme-picker-dropdown {\n  z-index: 99999 !important;\n}\n\n.theme-picker .el-color-picker__trigger {\n  height: 26px !important;\n  width: 26px !important;\n  padding: 2px;\n}\n\n.theme-picker-dropdown .el-color-dropdown__link-btn {\n  display: none;\n}\n</style>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAUA,IAAAA,OAAA,GAAAC,OAAA,4BAAAD,OAAA;AACA,IAAAE,cAAA;AAAA,IAAAC,QAAA,GAEA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,KAAA;MAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACAC,YAAA,WAAAA,aAAA;MACA,YAAAC,MAAA,CAAAC,KAAA,CAAAC,OAAA,CAAAL,KAAA;IACA;EACA;EACAM,KAAA;IACAJ,YAAA;MACAK,OAAA,WAAAA,QAAAC,GAAA,EAAAC,MAAA;QACA,KAAAT,KAAA,GAAAQ,GAAA;MACA;MACAE,SAAA;IACA;IACAV,KAAA;MAAA,IAAAW,MAAA,OAAAC,kBAAA,CAAAC,OAAA,gBAAAC,kBAAA,CAAAC,IAAA,UAAAC,QAAAR,GAAA;QAAA,IAAAS,KAAA;QAAA,IAAAR,MAAA,EAAAS,YAAA,EAAAC,eAAA,EAAAC,QAAA,EAAAC,UAAA,EAAAC,GAAA,EAAAC,YAAA,EAAAC,MAAA;QAAA,OAAAV,kBAAA,CAAAW,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACApB,MAAA,QAAAV,KAAA,QAAAC,KAAA,GAAAJ,cAAA;cAAA,MACA,OAAAY,GAAA;gBAAAmB,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAA,OAAAF,QAAA,CAAAG,MAAA;YAAA;cACAZ,YAAA,QAAAa,eAAA,CAAAvB,GAAA,CAAAwB,OAAA;cACAb,eAAA,QAAAY,eAAA,CAAAtB,MAAA,CAAAuB,OAAA;cACAC,OAAA,CAAAC,GAAA,CAAAhB,YAAA,EAAAC,eAAA;cAEAC,QAAA,QAAAA,QAAA;gBACAe,OAAA;gBACAC,WAAA;gBACAC,IAAA;gBACAC,QAAA;gBACAC,SAAA;cACA;cAEAlB,UAAA,YAAAA,WAAAmB,QAAA,EAAAC,EAAA;gBACA;kBACA,IAAAtB,eAAA,GAAAF,KAAA,CAAAc,eAAA,CAAAnC,cAAA,CAAAoC,OAAA;kBACA,IAAAU,QAAA,GAAAzB,KAAA,CAAA0B,WAAA,CAAA1B,KAAA,CAAAuB,QAAA,GAAArB,eAAA,EAAAD,YAAA;kBAEA,IAAA0B,QAAA,GAAAC,QAAA,CAAAC,cAAA,CAAAL,EAAA;kBACA,KAAAG,QAAA;oBACAA,QAAA,GAAAC,QAAA,CAAAE,aAAA;oBACAH,QAAA,CAAAI,YAAA,OAAAP,EAAA;oBACAI,QAAA,CAAAI,IAAA,CAAAC,WAAA,CAAAN,QAAA;kBACA;kBACAA,QAAA,CAAAO,SAAA,GAAAT,QAAA;gBACA;cACA;cAAA,IAEA,KAAA3C,KAAA;gBAAA4B,QAAA,CAAAE,IAAA;gBAAA;cAAA;cACAP,GAAA,mCAAA8B,MAAA,CAAA1D,OAAA;cAAAiC,QAAA,CAAAE,IAAA;cAAA,OACA,KAAAwB,YAAA,CAAA/B,GAAA;YAAA;cAGAC,YAAA,GAAAF,UAAA;cAEAE,YAAA;cAEAC,MAAA,MAAA8B,KAAA,CAAAC,IAAA,CAAAV,QAAA,CAAAW,gBAAA,WACAC,MAAA,WAAAC,KAAA;gBACA,IAAAC,IAAA,GAAAD,KAAA,CAAAP,SAAA;gBACA,WAAAS,MAAA,CAAAnD,MAAA,OAAAoD,IAAA,CAAAF,IAAA,wBAAAE,IAAA,CAAAF,IAAA;cACA;cACAnC,MAAA,CAAAsC,OAAA,WAAAJ,KAAA;gBACA,IAAAP,SAAA,GAAAO,KAAA,CAAAP,SAAA;gBACA,WAAAA,SAAA;gBACAO,KAAA,CAAAP,SAAA,GAAAlC,KAAA,CAAA0B,WAAA,CAAAQ,SAAA,EAAAhC,eAAA,EAAAD,YAAA;cACA;cAEA,KAAA6C,KAAA,WAAAvD,GAAA;cAEAY,QAAA,CAAA4C,KAAA;YAAA;YAAA;cAAA,OAAArC,QAAA,CAAAsC,IAAA;UAAA;QAAA,GAAAjD,OAAA;MAAA;MAAA,SAAAhB,MAAAkE,EAAA;QAAA,OAAAvD,MAAA,CAAAwD,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAApE,KAAA;IAAA;EAEA;EAEAqE,OAAA;IACA1B,WAAA,WAAAA,YAAAe,KAAA,EAAAY,UAAA,EAAAC,UAAA;MACA,IAAA7B,QAAA,GAAAgB,KAAA;MACAY,UAAA,CAAAR,OAAA,WAAAU,KAAA,EAAAC,KAAA;QACA/B,QAAA,GAAAA,QAAA,CAAAV,OAAA,KAAA4B,MAAA,CAAAY,KAAA,SAAAD,UAAA,CAAAE,KAAA;MACA;MACA,OAAA/B,QAAA;IACA;IAEAW,YAAA,WAAAA,aAAA/B,GAAA,EAAAkB,QAAA;MAAA,IAAAkC,MAAA;MACA,WAAAC,OAAA,WAAAC,OAAA;QACA,IAAAC,GAAA,OAAAC,cAAA;QACAD,GAAA,CAAAE,kBAAA;UACA,IAAAF,GAAA,CAAAG,UAAA,UAAAH,GAAA,CAAAI,MAAA;YACAP,MAAA,CAAAlC,QAAA,IAAAqC,GAAA,CAAAK,YAAA,CAAAlD,OAAA;YACA4C,OAAA;UACA;QACA;QACAC,GAAA,CAAAM,IAAA,QAAA7D,GAAA;QACAuD,GAAA,CAAAO,IAAA;MACA;IACA;IAEArD,eAAA,WAAAA,gBAAA/B,KAAA;MACA,IAAAqF,SAAA,YAAAA,UAAAb,KAAA,EAAAc,IAAA;QACA,IAAAC,GAAA,GAAAC,QAAA,CAAAhB,KAAA,CAAAlB,KAAA;QACA,IAAAmC,KAAA,GAAAD,QAAA,CAAAhB,KAAA,CAAAlB,KAAA;QACA,IAAAoC,IAAA,GAAAF,QAAA,CAAAhB,KAAA,CAAAlB,KAAA;QAEA,IAAAgC,IAAA;UAAA;UACA,QAAAC,GAAA,EAAAE,KAAA,EAAAC,IAAA,EAAAC,IAAA;QACA;UACAJ,GAAA,IAAAK,IAAA,CAAAC,KAAA,CAAAP,IAAA,UAAAC,GAAA;UACAE,KAAA,IAAAG,IAAA,CAAAC,KAAA,CAAAP,IAAA,UAAAG,KAAA;UACAC,IAAA,IAAAE,IAAA,CAAAC,KAAA,CAAAP,IAAA,UAAAI,IAAA;UAEAH,GAAA,GAAAA,GAAA,CAAAO,QAAA;UACAL,KAAA,GAAAA,KAAA,CAAAK,QAAA;UACAJ,IAAA,GAAAA,IAAA,CAAAI,QAAA;UAEA,WAAA1C,MAAA,CAAAmC,GAAA,EAAAnC,MAAA,CAAAqC,KAAA,EAAArC,MAAA,CAAAsC,IAAA;QACA;MACA;MAEA,IAAAK,UAAA,YAAAA,WAAAvB,KAAA,EAAAwB,KAAA;QACA,IAAAT,GAAA,GAAAC,QAAA,CAAAhB,KAAA,CAAAlB,KAAA;QACA,IAAAmC,KAAA,GAAAD,QAAA,CAAAhB,KAAA,CAAAlB,KAAA;QACA,IAAAoC,IAAA,GAAAF,QAAA,CAAAhB,KAAA,CAAAlB,KAAA;QAEAiC,GAAA,GAAAK,IAAA,CAAAC,KAAA,MAAAG,KAAA,IAAAT,GAAA;QACAE,KAAA,GAAAG,IAAA,CAAAC,KAAA,MAAAG,KAAA,IAAAP,KAAA;QACAC,IAAA,GAAAE,IAAA,CAAAC,KAAA,MAAAG,KAAA,IAAAN,IAAA;QAEAH,GAAA,GAAAA,GAAA,CAAAO,QAAA;QACAL,KAAA,GAAAA,KAAA,CAAAK,QAAA;QACAJ,IAAA,GAAAA,IAAA,CAAAI,QAAA;QAEA,WAAA1C,MAAA,CAAAmC,GAAA,EAAAnC,MAAA,CAAAqC,KAAA,EAAArC,MAAA,CAAAsC,IAAA;MACA;MAEA,IAAAO,QAAA,IAAAjG,KAAA;MACA,SAAAkG,CAAA,MAAAA,CAAA,OAAAA,CAAA;QACAD,QAAA,CAAAE,IAAA,CAAAd,SAAA,CAAArF,KAAA,EAAAoG,MAAA,EAAAF,CAAA,OAAAG,OAAA;MACA;MACAJ,QAAA,CAAAE,IAAA,CAAAJ,UAAA,CAAA/F,KAAA;MACA,OAAAiG,QAAA;IACA;EACA;AACA;AAAAK,OAAA,CAAAzF,OAAA,GAAAhB,QAAA"}]}