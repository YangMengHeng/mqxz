{"remainingRequest":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js!E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web-master(finish\\lamp-web-master\\src\\views\\lamp\\museum\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\src\\views\\lamp\\museum\\edit.vue","mtime":1690192904359},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\babel.config.js","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"E:/project/lamp-web-master(finish/lamp-web-master/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"E:/project/lamp-web-master(finish/lamp-web-master/node_modules/@babel/runtime/helpers/defineProperty.js\"));\nvar _task = _interopRequireDefault(require(\"@/api/task.js\"));\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: \"taskEdit\",\n  components: {},\n  props: {\n    dialogVisible: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: \"add\"\n    }\n  },\n  data: function data() {\n    return {\n      task: this.inittask(),\n      screenWidth: 0,\n      width: this.initWidth(),\n      rules: {\n        createBy: [{\n          required: true,\n          message: this.$t(\"rules.require\"),\n          trigger: \"blur\"\n        }, {\n          min: 1,\n          max: 255,\n          message: '最多不能超过255字符',\n          trigger: \"blur\"\n        }],\n        dataUrl: [{\n          required: true,\n          message: this.$t(\"rules.require\"),\n          trigger: \"blur\"\n        }, {\n          min: 1,\n          max: 255,\n          message: '最多不能超过255字符',\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  computed: {\n    isVisible: {\n      get: function get() {\n        return this.dialogVisible;\n      },\n      set: function set() {\n        this.close();\n        this.reset();\n      }\n    },\n    title: function title() {\n      return this.$t(\"common.\" + this.type);\n    }\n  },\n  watch: {},\n  mounted: function mounted() {\n    var _this = this;\n    window.onresize = function () {\n      return function () {\n        _this.width = _this.initWidth();\n      }();\n    };\n  },\n  methods: {\n    inittask: function inittask() {\n      return {\n        createBy: \"\",\n        dataUrl: \"\",\n        ecnSelection: \"\",\n        endTime: \"\",\n        modelParameter: '',\n        modelSelection: '',\n        startTime: '',\n        taskName: false\n      };\n    },\n    initWidth: function initWidth() {\n      this.screenWidth = document.body.clientWidth;\n      if (this.screenWidth < 991) {\n        return \"90%\";\n      } else if (this.screenWidth < 1400) {\n        return \"45%\";\n      } else {\n        return \"800px\";\n      }\n    },\n    settask: function settask(val) {\n      var vm = this;\n      if (val) {\n        vm.task = _objectSpread(_objectSpread({}, vm.task), val);\n      }\n    },\n    close: function close() {\n      this.$emit(\"close\");\n    },\n    reset: function reset() {\n      // 先清除校验，再清除表单，不然有奇怪的bug\n      this.$refs.form.clearValidate();\n      this.$refs.form.resetFields();\n      this.task = this.inittask();\n    },\n    submitForm: function submitForm() {\n      var vm = this;\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          vm.editSubmit();\n        } else {\n          return false;\n        }\n      });\n    },\n    editSubmit: function editSubmit() {\n      var vm = this;\n      if (vm.type === \"edit\") {\n        vm.update();\n      } else {\n        vm.save();\n      }\n    },\n    save: function save() {\n      var vm = this;\n      _task.default.save(this.task).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess) {\n          vm.isVisible = false;\n          vm.$message({\n            message: vm.$t(\"tips.createSuccess\"),\n            type: \"success\"\n          });\n          vm.$emit(\"success\");\n        }\n      });\n    },\n    update: function update() {\n      var _this2 = this;\n      _task.default.update(this.task).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess) {\n          _this2.isVisible = false;\n          _this2.$message({\n            message: _this2.$t(\"tips.updateSuccess\"),\n            type: \"success\"\n          });\n          _this2.$emit(\"success\");\n        }\n      });\n    }\n  }\n};\nexports.default = _default;",{"version":3,"names":["_task","_interopRequireDefault","require","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","name","components","props","dialogVisible","type","Boolean","String","data","task","inittask","screenWidth","width","initWidth","rules","createBy","required","message","$t","trigger","min","max","dataUrl","computed","isVisible","get","set","close","reset","title","watch","mounted","_this","window","onresize","methods","ecnSelection","endTime","modelParameter","modelSelection","startTime","taskName","document","body","clientWidth","settask","val","vm","$emit","$refs","form","clearValidate","resetFields","submitForm","validate","valid","editSubmit","update","save","taskApi","then","response","res","isSuccess","$message","_this2","exports","_default"],"sources":["src/views/lamp/system/task/edit.vue"],"sourcesContent":["<!-- springfox-swagger2 -->\n<dependency>\n    <groupId>io.springfox</groupId>\n    <artifactId>springfox-swagger2</artifactId>\n    <version>2.9.2</version>\n</dependency>\n<!-- springfox-swagger-ui -->\n<dependency>\n    <groupId>io.springfox</groupId>\n    <artifactId>springfox-swagger-ui</artifactId>\n    <version>2.9.2</version>\n</dependency>\n\n\n@Configuration\n@EnableSwagger2\npublic class SwaggerConfig {\n\n    //配置文档属性\n    private ApiInfo getApiInfo(){\n      return   new ApiInfoBuilder().title(\"XX微服务接口文档\")\n                .description(\"描述，给前端妹子看的\")\n                .version(\"版本1.0\")\n                .termsOfServiceUrl(\"http://www.xxx.com\")\n                .build();\n    }\n    //创建文档配置对象\n    @Bean\n    public Docket docket(){\n      return   new Docket(DocumentationType.SWAGGER_2).apiInfo(getApiInfo())\n                .groupName(\"group1\")\n                .select()\n                .build();\n    }\n}\n\n\n\n<template>\n  <el-dialog\n    :close-on-click-modal=\"false\"\n    :close-on-press-escape=\"true\"\n    :title=\"title\"\n    :type=\"type\"\n    :visible.sync=\"isVisible\"\n    :width=\"width\"\n    top=\"50px\">\n    <div class=\"dialog-footer\" slot=\"footer\">\n      <el-button @click=\"isVisible = false\" plain type=\"warning\">\n        {{ $t(\"common.cancel\") }}\n      </el-button>\n      <el-button @click=\"submitForm\" plain type=\"primary\">\n        {{ $t(\"common.confirm\") }}\n      </el-button>\n    </div>\n    <el-form :model=\"task\" :rules=\"rules\" label-position=\"right\" label-width=\"100px\" ref=\"form\">\n      <el-form-item :label=\"$t('table.task.createBy')\"   label=\"创建人\"  prop=\"createBy\">\n        <el-input :disabled=\"type==='edit'\" type=\"\" v-model=\"task.createBy\" placeholder=\"创建人\"/> \n      </el-form-item>\n\n      <el-form-item :label=\"$t('table.task.dataUrl')\" label=\"推理数据url\" prop=\"dataUrl\">\n        <el-input type=\"\" v-model=\"task.dataUrl\" placeholder=\"推理数据url\"/>\n      </el-form-item>\n\n      <el-form-item :label=\"$t('table.task.ecnSelection')\" label='推理机选择' prop=\"ecnSelection\">\n        <el-input type=\"\" v-model=\"task.ecnSelection\" placeholder=\"推理机选择\"/>\n      </el-form-item>\n\n      <el-form-item :label=\"$t('table.task.endTime')\" label='结束时间' prop=\"endTime\" >\n        <el-input type=\"date\" v-model=\"task.endTime\" placeholder=\"结束时间\"/>\n      </el-form-item>\n\n      <el-form-item :label=\"$t('table.task.modelParameter')\" label='模型参数' prop=\"modelParameter\" >\n        <el-input type=\"textarea\" v-model=\"task.modelParameter\" placeholder=\"模型参数\"/>\n      </el-form-item>\n\n      <el-form-item :label=\"$t('table.task.modelSelection')\" label='模型选择' prop=\"modelSelection\">\n        <el-input type=\"textarea\" v-model=\"task.modelSelection\" placeholder=\"模型选择\"/>\n      </el-form-item>\n\n      <el-form-item :label=\"$t('table.task.startTime')\" label='开始时间' prop=\"startTime\" >\n        <el-input type=\"date\" v-model=\"task.startTime\" placeholder=\"开始时间\"/>\n      </el-form-item>\n\n      <el-form-item :label=\"$t('table.task.taskName')\" label='任务名称' prop=\"taskName\">\n        <el-input type=\"textarea\" v-model=\"task.taskName\" placeholder=\"任务名称\"/>\n\n\n      </el-form-item>\n      \n    </el-form>\n  </el-dialog>\n</template>\n<script>\nimport taskApi from \"@/api/task.js\";\n\nexport default {\n  name: \"taskEdit\",\n  components: {  },\n  props: {\n    dialogVisible: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: \"add\"\n    }\n  },\n  data() {\n    return {\n      task: this.inittask(),\n      screenWidth: 0,\n      width: this.initWidth(),\n      rules: {\n        createBy: [\n          {required: true, message: this.$t(\"rules.require\"), trigger: \"blur\"},\n          { min: 1, max: 255, message: '最多不能超过255字符', trigger: \"blur\"}\n        ],\n        dataUrl: [\n          {required: true, message: this.$t(\"rules.require\"), trigger: \"blur\"},\n          { min: 1, max: 255, message: '最多不能超过255字符', trigger: \"blur\"}\n        ],\n       \n      }\n    };\n  },\n  computed: {\n    isVisible: {\n      get() {\n        return this.dialogVisible;\n      },\n      set() {\n        this.close();\n        this.reset();\n      }\n    },\n    title() {\n      return this.$t(\"common.\" + this.type);\n    }\n  },\n  watch: {},\n  mounted() {\n    window.onresize = () => {\n      return (() => {\n        this.width = this.initWidth();\n      })();\n    };\n  },\n  methods: {\n    inittask() {\n      return {\n        createBy:\"\",\n        dataUrl:\"\",\n        ecnSelection:\"\",\n        endTime: \"\",\n        modelParameter: '',\n        modelSelection: '',\n        startTime: '',\n        taskName: false\n      };\n    },\n    initWidth() {\n      this.screenWidth = document.body.clientWidth;\n      if (this.screenWidth < 991) {\n        return \"90%\";\n      } else if (this.screenWidth < 1400) {\n        return \"45%\";\n      } else {\n        return \"800px\";\n      }\n    },\n    settask(val) {\n      const vm = this;\n      if (val) {\n        vm.task = { ...vm.task, ...val };\n      }\n    },\n    close() {\n      this.$emit(\"close\");\n    },\n    reset() {\n      // 先清除校验，再清除表单，不然有奇怪的bug\n      this.$refs.form.clearValidate();\n      this.$refs.form.resetFields();\n      this.task = this.inittask();\n    },\n    submitForm() {\n      const vm = this;\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          vm.editSubmit();\n        } else {\n          return false;\n        }\n      });\n    },\n    editSubmit() {\n      const vm = this;\n      if (vm.type === \"edit\") {\n          vm.update();\n  \n      } else {\n          vm.save();\n      }\n    },\n    save() {\n      const vm = this;\n      taskApi.save(this.task).then(response => {\n        const res = response.data;\n        if (res.isSuccess) {\n          vm.isVisible = false;\n          vm.$message({\n            message: vm.$t(\"tips.createSuccess\"),\n            type: \"success\"\n          });\n          vm.$emit(\"success\");\n        }\n      });\n    },\n    update() {\n      taskApi.update(this.task).then(response => {\n        const res = response.data;\n        if (res.isSuccess) {\n          this.isVisible = false;\n          this.$message({\n            message: this.$t(\"tips.updateSuccess\"),\n            type: \"success\"\n          });\n          this.$emit(\"success\");\n        }\n      });\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped></style>\n"],"mappings":";;;;;;;;;;;AA8FA,IAAAA,KAAA,GAAAC,sBAAA,CAAAC,OAAA;AAAA,SAAAC,QAAAC,MAAA,EAAAC,cAAA,QAAAC,IAAA,GAAAC,MAAA,CAAAD,IAAA,CAAAF,MAAA,OAAAG,MAAA,CAAAC,qBAAA,QAAAC,OAAA,GAAAF,MAAA,CAAAC,qBAAA,CAAAJ,MAAA,GAAAC,cAAA,KAAAI,OAAA,GAAAA,OAAA,CAAAC,MAAA,WAAAC,GAAA,WAAAJ,MAAA,CAAAK,wBAAA,CAAAR,MAAA,EAAAO,GAAA,EAAAE,UAAA,OAAAP,IAAA,CAAAQ,IAAA,CAAAC,KAAA,CAAAT,IAAA,EAAAG,OAAA,YAAAH,IAAA;AAAA,SAAAU,cAAAC,MAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAF,CAAA,UAAAG,MAAA,WAAAF,SAAA,CAAAD,CAAA,IAAAC,SAAA,CAAAD,CAAA,QAAAA,CAAA,OAAAf,OAAA,CAAAI,MAAA,CAAAc,MAAA,OAAAC,OAAA,WAAAC,GAAA,QAAAC,gBAAA,CAAAC,OAAA,EAAAR,MAAA,EAAAM,GAAA,EAAAF,MAAA,CAAAE,GAAA,SAAAhB,MAAA,CAAAmB,yBAAA,GAAAnB,MAAA,CAAAoB,gBAAA,CAAAV,MAAA,EAAAV,MAAA,CAAAmB,yBAAA,CAAAL,MAAA,KAAAlB,OAAA,CAAAI,MAAA,CAAAc,MAAA,GAAAC,OAAA,WAAAC,GAAA,IAAAhB,MAAA,CAAAqB,cAAA,CAAAX,MAAA,EAAAM,GAAA,EAAAhB,MAAA,CAAAK,wBAAA,CAAAS,MAAA,EAAAE,GAAA,iBAAAN,MAAA,I;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAEA;EACAY,IAAA;EACAC,UAAA;EACAC,KAAA;IACAC,aAAA;MACAC,IAAA,EAAAC,OAAA;MACAT,OAAA;IACA;IACAQ,IAAA;MACAA,IAAA,EAAAE,MAAA;MACAV,OAAA;IACA;EACA;EACAW,IAAA,WAAAA,KAAA;IACA;MACAC,IAAA,OAAAC,QAAA;MACAC,WAAA;MACAC,KAAA,OAAAC,SAAA;MACAC,KAAA;QACAC,QAAA,GACA;UAAAC,QAAA;UAAAC,OAAA,OAAAC,EAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAJ,OAAA;UAAAE,OAAA;QAAA,EACA;QACAG,OAAA,GACA;UAAAN,QAAA;UAAAC,OAAA,OAAAC,EAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAJ,OAAA;UAAAE,OAAA;QAAA;MAGA;IACA;EACA;EACAI,QAAA;IACAC,SAAA;MACAC,GAAA,WAAAA,IAAA;QACA,YAAArB,aAAA;MACA;MACAsB,GAAA,WAAAA,IAAA;QACA,KAAAC,KAAA;QACA,KAAAC,KAAA;MACA;IACA;IACAC,KAAA,WAAAA,MAAA;MACA,YAAAX,EAAA,kBAAAb,IAAA;IACA;EACA;EACAyB,KAAA;EACAC,OAAA,WAAAA,QAAA;IAAA,IAAAC,KAAA;IACAC,MAAA,CAAAC,QAAA;MACA;QACAF,KAAA,CAAApB,KAAA,GAAAoB,KAAA,CAAAnB,SAAA;MACA;IACA;EACA;EACAsB,OAAA;IACAzB,QAAA,WAAAA,SAAA;MACA;QACAK,QAAA;QACAO,OAAA;QACAc,YAAA;QACAC,OAAA;QACAC,cAAA;QACAC,cAAA;QACAC,SAAA;QACAC,QAAA;MACA;IACA;IACA5B,SAAA,WAAAA,UAAA;MACA,KAAAF,WAAA,GAAA+B,QAAA,CAAAC,IAAA,CAAAC,WAAA;MACA,SAAAjC,WAAA;QACA;MACA,gBAAAA,WAAA;QACA;MACA;QACA;MACA;IACA;IACAkC,OAAA,WAAAA,QAAAC,GAAA;MACA,IAAAC,EAAA;MACA,IAAAD,GAAA;QACAC,EAAA,CAAAtC,IAAA,GAAArB,aAAA,CAAAA,aAAA,KAAA2D,EAAA,CAAAtC,IAAA,GAAAqC,GAAA;MACA;IACA;IACAnB,KAAA,WAAAA,MAAA;MACA,KAAAqB,KAAA;IACA;IACApB,KAAA,WAAAA,MAAA;MACA;MACA,KAAAqB,KAAA,CAAAC,IAAA,CAAAC,aAAA;MACA,KAAAF,KAAA,CAAAC,IAAA,CAAAE,WAAA;MACA,KAAA3C,IAAA,QAAAC,QAAA;IACA;IACA2C,UAAA,WAAAA,WAAA;MACA,IAAAN,EAAA;MACA,KAAAE,KAAA,CAAAC,IAAA,CAAAI,QAAA,WAAAC,KAAA;QACA,IAAAA,KAAA;UACAR,EAAA,CAAAS,UAAA;QACA;UACA;QACA;MACA;IACA;IACAA,UAAA,WAAAA,WAAA;MACA,IAAAT,EAAA;MACA,IAAAA,EAAA,CAAA1C,IAAA;QACA0C,EAAA,CAAAU,MAAA;MAEA;QACAV,EAAA,CAAAW,IAAA;MACA;IACA;IACAA,IAAA,WAAAA,KAAA;MACA,IAAAX,EAAA;MACAY,aAAA,CAAAD,IAAA,MAAAjD,IAAA,EAAAmD,IAAA,WAAAC,QAAA;QACA,IAAAC,GAAA,GAAAD,QAAA,CAAArD,IAAA;QACA,IAAAsD,GAAA,CAAAC,SAAA;UACAhB,EAAA,CAAAvB,SAAA;UACAuB,EAAA,CAAAiB,QAAA;YACA/C,OAAA,EAAA8B,EAAA,CAAA7B,EAAA;YACAb,IAAA;UACA;UACA0C,EAAA,CAAAC,KAAA;QACA;MACA;IACA;IACAS,MAAA,WAAAA,OAAA;MAAA,IAAAQ,MAAA;MACAN,aAAA,CAAAF,MAAA,MAAAhD,IAAA,EAAAmD,IAAA,WAAAC,QAAA;QACA,IAAAC,GAAA,GAAAD,QAAA,CAAArD,IAAA;QACA,IAAAsD,GAAA,CAAAC,SAAA;UACAE,MAAA,CAAAzC,SAAA;UACAyC,MAAA,CAAAD,QAAA;YACA/C,OAAA,EAAAgD,MAAA,CAAA/C,EAAA;YACAb,IAAA;UACA;UACA4D,MAAA,CAAAjB,KAAA;QACA;MACA;IACA;EACA;AACA;AAAAkB,OAAA,CAAArE,OAAA,GAAAsE,QAAA"}]}