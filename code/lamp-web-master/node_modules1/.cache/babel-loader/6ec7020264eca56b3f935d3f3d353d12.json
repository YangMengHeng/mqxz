{"remainingRequest":"E:\\project\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js!E:\\project\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js!E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web-master\\src\\views\\profile\\components\\Account.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\project\\lamp-web-master\\src\\views\\profile\\components\\Account.vue","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master\\babel.config.js","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1686711135008},{"path":"E:\\project\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"E:/project/lamp-web-master/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { validMobile } from '@/utils/my-validate';\nimport userApi from '@/api/User.js';\nimport { initEnums } from '@/utils/commons.js';\nexport default {\n  components: {},\n  props: {\n    user: {\n      type: Object,\n      default: function _default() {\n        return {\n          name: '',\n          email: '',\n          sex: {\n            code: 'M'\n          }\n        };\n      }\n    }\n  },\n  data: function data() {\n    var _this = this;\n    return {\n      enums: {\n        Sex: {}\n      },\n      rules: {\n        email: {\n          type: 'email',\n          message: this.$t('rules.email'),\n          trigger: 'blur'\n        },\n        mobile: {\n          validator: function validator(rule, value, callback) {\n            if (value !== '' && !validMobile(value)) {\n              callback(_this.$t('rules.mobile'));\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        },\n        sex: {\n          required: true,\n          message: this.$t('rules.require'),\n          trigger: 'change'\n        },\n        workDescribe: {\n          max: 255,\n          message: '内容超过255字符',\n          trigger: 'blur'\n        }\n      }\n    };\n  },\n  computed: {},\n  mounted: function mounted() {\n    initEnums([\"Sex\"], this.enums);\n  },\n  methods: {\n    submit: function submit() {\n      var _this2 = this;\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          var temp = _objectSpread({}, _this2.user);\n          temp.account = temp.status = temp.avatar = temp.avatar = null;\n          userApi.updateBaseInfo(_objectSpread({}, temp)).then(function (response) {\n            var res = response.data;\n            if (res.isSuccess) {\n              _this2.$message({\n                message: _this2.$t('tips.updateSuccess'),\n                type: 'success'\n              });\n            }\n            _this2.$store.commit('account/setUser', _this2.user);\n          });\n        } else {\n          return false;\n        }\n      });\n    }\n  }\n};",null]}