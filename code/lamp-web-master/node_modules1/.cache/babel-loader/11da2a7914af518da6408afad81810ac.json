{"remainingRequest":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\src\\views\\lamp\\tenant\\user\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\src\\views\\lamp\\tenant\\user\\edit.vue","mtime":1679380940000},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\babel.config.js","mtime":1679380940000},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1686711135008},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"C:/Users/Planck/Desktop/mycode/lamp/lamp-web-master/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport globalUserApi from '@/api/GlobalUser.js';\nimport tenantApi from '@/api/Tenant.js';\nexport default {\n  name: 'GlobalUserEdit',\n  props: {\n    dialogVisible: {\n      type: Boolean,\n      default: false\n    },\n    title: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    var _this = this;\n    return {\n      tenantList: [],\n      type: 'add',\n      user: this.initUser(),\n      screenWidth: 0,\n      width: this.initWidth(),\n      rules: {\n        account: [{\n          required: true,\n          message: this.$t('rules.require'),\n          trigger: 'blur'\n        }, {\n          min: 4,\n          max: 30,\n          message: this.$t('rules.range4to10'),\n          trigger: 'blur'\n        }, {\n          validator: function validator(rule, value, callback) {\n            if (!_this.user.id && _this.user.tenantCode) {\n              var checkData = {\n                tenantCode: _this.user.tenantCode,\n                account: value\n              };\n              globalUserApi.check(checkData).then(function (response) {\n                var res = response.data;\n                if (res.data) {\n                  callback(_this.$t('rules.usernameExist'));\n                } else {\n                  callback();\n                }\n              });\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        }],\n        tenantCode: [{\n          required: true,\n          message: this.$t('rules.require'),\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    isVisible: {\n      get: function get() {\n        return this.dialogVisible;\n      },\n      set: function set() {\n        this.close();\n        this.reset();\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n    this.initTenantList();\n    window.onresize = function () {\n      return function () {\n        _this2.width = _this2.initWidth();\n      }();\n    };\n  },\n  methods: {\n    initTenantList: function initTenantList() {\n      var _this3 = this;\n      tenantApi.list({\n        status: {\n          code: 'NORMAL'\n        }\n      }).then(function (response) {\n        var res = response.data;\n        _this3.tenantList = res.data;\n      });\n    },\n    initUser: function initUser() {\n      return {\n        id: '',\n        tenantCode: '0000',\n        name: '',\n        account: '',\n        mobile: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      };\n    },\n    initWidth: function initWidth() {\n      this.screenWidth = document.body.clientWidth;\n      if (this.screenWidth < 991) {\n        return '90%';\n      } else if (this.screenWidth < 1400) {\n        return '45%';\n      } else {\n        return '800px';\n      }\n    },\n    setUser: function setUser(val) {\n      this.user = _objectSpread({}, val);\n    },\n    close: function close() {\n      this.$emit('close');\n    },\n    submitForm: function submitForm() {\n      var _this4 = this;\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          if (_this4.type === 'add') {\n            _this4.save();\n          } else {\n            _this4.update();\n          }\n        } else {\n          return false;\n        }\n      });\n    },\n    save: function save() {\n      var _this5 = this;\n      globalUserApi.save(this.user).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess) {\n          _this5.isVisible = false;\n          _this5.$message({\n            message: _this5.$t('tips.createSuccess'),\n            type: 'success'\n          });\n          _this5.$emit('success');\n        }\n      });\n    },\n    update: function update() {\n      var _this6 = this;\n      globalUserApi.update(this.user).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess) {\n          _this6.isVisible = false;\n          _this6.$message({\n            message: _this6.$t('tips.updateSuccess'),\n            type: 'success'\n          });\n          _this6.$emit('success');\n        }\n      });\n    },\n    reset: function reset() {\n      // 先清除校验，再清除表单，不然有奇怪的bug\n      this.$refs.form.clearValidate();\n      this.$refs.form.resetFields();\n      this.user = this.initUser();\n    }\n  }\n};",null]}