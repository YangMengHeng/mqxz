{"remainingRequest":"E:\\project\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js!E:\\project\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js!E:\\project\\lamp-web-master\\src\\utils\\localstorage.js","dependencies":[{"path":"E:\\project\\lamp-web-master\\src\\utils\\localstorage.js","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master\\babel.config.js","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1686711135008},{"path":"E:\\project\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609}],"contextDependencies":[],"result":["var db = {\n  save: function save(key, value) {\n    // if (value) {\n    var projectName = process.env.VUE_APP_PROJECT_NAME;\n    localStorage.setItem(projectName + \"_\" + key, JSON.stringify(value));\n    // } else {\n    //   console.log(\"set 出错： key=\" + key + ',value=' + value)\n    // }\n  },\n  get: function get(key) {\n    var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var projectName = process.env.VUE_APP_PROJECT_NAME;\n    try {\n      return JSON.parse(localStorage.getItem(projectName + \"_\" + key)) || defaultValue;\n    } catch (err) {\n      return defaultValue;\n    }\n  },\n  remove: function remove(key) {\n    var projectName = process.env.VUE_APP_PROJECT_NAME;\n    localStorage.removeItem(projectName + \"_\" + key);\n  },\n  clear: function clear() {\n    // localStorage.clear()\n\n    // 为了不同路径能在同一个域下 独立使用， 清除缓存时，需要区分来\n\n    var projectName = process.env.VUE_APP_PROJECT_NAME;\n    for (var key in localStorage) {\n      if (key.indexOf(projectName) !== -1) {\n        console.log(key);\n        localStorage.removeItem(key);\n      }\n    }\n  }\n};\nexport default db;",null]}