{"remainingRequest":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\src\\views\\login\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\src\\views\\login\\index.vue","mtime":1688694199974},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\babel.config.js","mtime":1679380940000},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1686711135008},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"C:/Users/Planck/Desktop/mycode/lamp/lamp-web-master/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.typed.uint8-array\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport LangSelect from \"@/components/LangSelect\";\nimport db from \"@/utils/localstorage\";\nimport { randomNum } from \"@/utils\";\nimport { socialLoginUrl } from \"@/settings\";\nimport loginApi from \"@/api/Login.js\";\nimport { Base64 } from \"js-base64\";\nexport default {\n  name: \"Login\",\n  components: {\n    LangSelect: LangSelect\n  },\n  data: function data() {\n    var _this = this;\n    return {\n      //是否启用多租户\n      isMultiTenant: process.env.VUE_APP_IS_MULTI_TENANT_TYPE !== \"NONE\",\n      isCaptcha: process.env.VUE_APP_IS_CAPTCHA === \"true\",\n      tabActiveName: \"bindLogin\",\n      login: {\n        type: \"up\"\n      },\n      // 第三方登陆的选择\n      logo: [{\n        img: \"gitee.png\",\n        name: \"gitee\",\n        radius: true\n      }, {\n        img: \"github.png\",\n        name: \"github\",\n        radius: true\n      }, {\n        img: \"tencent_cloud.png\",\n        name: \"tencent_cloud\",\n        radius: true\n      }, {\n        img: \"qq.png\",\n        name: \"qq\",\n        radius: false\n      }, {\n        img: \"dingtalk.png\",\n        name: \"dingtalk\",\n        radius: true\n      }, {\n        img: \"microsoft.png\",\n        name: \"microsoft\",\n        radius: false\n      }],\n      loginForm: {\n        account: \"lamp\",\n        password: \"lamp\",\n        tenantView: \"0000\",\n        //显示用的\n        tenant: \"\",\n        //传递给后端的\n        key: randomNum(24, 16),\n        code: \"\",\n        grantType: process.env.VUE_APP_IS_CAPTCHA === \"true\" ? \"captcha\" : \"password\",\n        bindAccount: \"\",\n        bindPassword: \"\",\n        signAccount: \"\",\n        signPassword: \"\"\n      },\n      rules: {\n        account: {\n          required: true,\n          message: this.$t(\"rules.require\"),\n          trigger: \"blur\"\n        },\n        tenantView: {\n          required: true,\n          message: this.$t(\"rules.require\"),\n          trigger: \"blur\"\n        },\n        password: {\n          required: true,\n          message: this.$t(\"rules.require\"),\n          trigger: \"blur\"\n        },\n        code: {\n          validator: function validator(rule, value, callback) {\n            if (_this.isCaptcha && value === \"\") {\n              callback(\"验证码不能为空\");\n            } else {\n              callback();\n            }\n            callback();\n          },\n          trigger: \"blur\"\n        },\n        bindAccount: {\n          required: true,\n          message: this.$t(\"rules.require\"),\n          trigger: \"blur\"\n        },\n        bindPassword: {\n          required: true,\n          message: this.$t(\"rules.require\"),\n          trigger: \"blur\"\n        },\n        signAccount: [{\n          required: true,\n          message: this.$t(\"rules.require\"),\n          trigger: \"blur\"\n        }, {\n          min: 4,\n          max: 10,\n          message: this.$t(\"rules.range4to10\"),\n          trigger: \"blur\"\n        }],\n        signPassword: [{\n          required: true,\n          message: this.$t(\"rules.require\"),\n          trigger: \"blur\"\n        }, {\n          min: 6,\n          max: 20,\n          message: this.$t(\"rules.range6to20\"),\n          trigger: \"blur\"\n        }]\n      },\n      authUser: null,\n      loading: false,\n      showDialog: false,\n      redirect: undefined,\n      otherQuery: {},\n      imageCode: \"\",\n      page: {\n        width: window.screen.width * 0.5,\n        height: window.screen.height * 0.5\n      }\n    };\n  },\n  created: function created() {},\n  mounted: function mounted() {\n    db.clear();\n    this.getCodeImage();\n  },\n  destroyed: function destroyed() {\n    window.removeEventListener(\"message\", this.resolveSocialLogin);\n  },\n  methods: {\n    getCodeImage: function getCodeImage() {\n      var _this2 = this;\n      if (this.isCaptcha) {\n        loginApi.getCaptcha(this.loginForm.key).then(function (response) {\n          var res = response.data;\n          if (res.byteLength <= 100) {\n            _this2.$message({\n              message: _this2.$t(\"tips.systemError\"),\n              type: \"error\"\n            });\n          }\n          return \"data:image/png;base64,\" + btoa(new Uint8Array(res).reduce(function (data, byte) {\n            return data + String.fromCharCode(byte);\n          }, \"\"));\n        }).then(function (res) {\n          _this2.imageCode = res;\n        }).catch(function (e) {\n          if (e.toString().indexOf(\"429\") !== -1) {\n            _this2.$message({\n              message: _this2.$t(\"tips.tooManyRequest\"),\n              type: \"error\"\n            });\n          } else {\n            _this2.$message({\n              message: _this2.$t(\"tips.getCodeImageFailed\"),\n              type: \"error\"\n            });\n          }\n        });\n      }\n    },\n    handleTabClick: function handleTabClick(tab) {\n      this.tabActiveName = tab.name;\n    },\n    resolveLogo: function resolveLogo(logo) {\n      return require(\"@/assets/logo/\".concat(logo));\n    },\n    socialLogin: function socialLogin(oauthType) {\n      var url = \"\".concat(socialLoginUrl, \"/\").concat(oauthType, \"/login\");\n      window.open(url, \"newWindow\", \"resizable=yes, height=\".concat(this.page.height, \", width=\").concat(this.page.width, \", top=10%, left=10%, toolbar=no, menubar=no, scrollbars=no, resizable=no,location=no, status=no\"));\n      window.addEventListener(\"message\", this.resolveSocialLogin, false);\n    },\n    resolveSocialLogin: function resolveSocialLogin(e) {\n      var data = e.data;\n      var that = this;\n      if (data.message === \"not_bind\") {\n        that.login.type = \"bind\";\n        var authUser = data.data;\n        that.authUser = authUser;\n        that.$confirm(that.$t(\"common.current\") + authUser.source + that.$t(\"common.socialAccount\") + authUser.nickname + that.$t(\"common.socialTips\"), that.$t(\"common.tips\"), {\n          confirmButtonText: that.$t(\"common.signLogin\"),\n          cancelButtonText: that.$t(\"common.bindLogin\"),\n          type: \"warning\"\n        }).then(function () {\n          that.tabActiveName = \"signLogin\";\n        }).catch(function () {\n          that.tabActiveName = \"bindLogin\";\n        });\n      } else if (data.message === \"social_login_success\") {\n        that.saveLoginData(data.data);\n        that.getUserDetailInfo();\n        that.loginSuccessCallback(data.account);\n      } else {\n        // do nothing\n      }\n    },\n    bindLogin: function bindLogin() {\n      var _this3 = this;\n      var account_c = false;\n      var password_c = false;\n      this.$refs.loginForm.validateField(\"bindAccount\", function (e) {\n        if (!e) {\n          account_c = true;\n        }\n      });\n      this.$refs.loginForm.validateField(\"bindPassword\", function (e) {\n        if (!e) {\n          password_c = true;\n        }\n      });\n      if (account_c && password_c) {\n        this.loading = true;\n        var that = this;\n        var params = _objectSpread({\n          bindAccount: that.loginForm.bindAccount,\n          bindPassword: that.loginForm.bindPassword\n        }, that.authUser);\n        params.token = null;\n        that.$post(\"auth/social/bind/login\", params).then(function (r) {\n          var data = r.data.data;\n          _this3.saveLoginData(data);\n          _this3.getUserDetailInfo();\n          _this3.loginSuccessCallback(that.loginForm.bindAccount);\n        }).catch(function (error) {\n          console.error(error);\n          that.loading = false;\n        });\n      }\n    },\n    signLogin: function signLogin() {\n      var _this4 = this;\n      var account_c = false;\n      var password_c = false;\n      this.$refs.loginForm.validateField(\"signAccount\", function (e) {\n        if (!e) {\n          account_c = true;\n        }\n      });\n      this.$refs.loginForm.validateField(\"signPassword\", function (e) {\n        if (!e) {\n          password_c = true;\n        }\n      });\n      if (account_c && password_c) {\n        this.loading = true;\n        var that = this;\n        var params = _objectSpread({\n          bindAccount: that.loginForm.signAccount,\n          bindPassword: that.loginForm.signPassword\n        }, that.authUser);\n        params.token = null;\n        that.$post(\"auth/social/sign/login\", params).then(function (r) {\n          var data = r.data.data;\n          _this4.saveLoginData(data);\n          _this4.getUserDetailInfo();\n          _this4.loginSuccessCallback(that.loginForm.signAccount);\n        }).catch(function (error) {\n          console.error(error);\n          that.loading = false;\n        });\n      }\n    },\n    handleLogin: function handleLogin() {\n      var _this5 = this;\n      this.loginForm.tenant = \"\".concat(Base64.encode(this.loginForm.tenantView));\n      this.$refs.loginForm.validate(function (valid) {\n        if (valid) {\n          _this5.loginSubmit();\n        } else {\n          return false;\n        }\n      });\n    },\n    loginSubmit: function loginSubmit() {\n      this.loading = true;\n      var that = this;\n      this.$store.commit(\"account/setTenant\", this.loginForm.tenant);\n      loginApi.login(this.loginForm, {\n        tenant: this.loginForm.tenant,\n        \"X-isTenant\": false\n      }).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess) {\n          that.saveLoginData(res.data[\"token\"], res.data[\"refreshToken\"], res.data[\"expiration\"]);\n          that.saveUserInfo(res.data);\n          that.getResource();\n        } else {\n          that.getCodeImage();\n        }\n      }).catch(function () {\n        // if(error.response.data){\n        //   this.$message({\n        //     message: error.response.data.msg,\n        //     type: \"error\"\n        //   });\n        // }\n        that.getCodeImage();\n      }).finally(function () {\n        return that.loading = false;\n      });\n    },\n    saveLoginData: function saveLoginData(token, refreshToken, expiration) {\n      this.$store.commit(\"account/setToken\", token);\n      this.$store.commit(\"account/setRefreshToken\", refreshToken);\n      this.$store.commit(\"account/setExpireTime\", expiration);\n    },\n    saveUserInfo: function saveUserInfo(user) {\n      this.$store.commit(\"account/setUser\", {\n        id: user.userId,\n        account: user.account,\n        name: user.name,\n        avatar: user.avatar,\n        workDescribe: user.workDescribe\n      });\n    },\n    getResource: function getResource() {\n      var _this6 = this;\n      loginApi.getResource().then(function (response) {\n        var res = response.data;\n        if (res.isSuccess) {\n          var authorityResource = res.data;\n          var permissionsList = authorityResource.resourceList || [];\n          _this6.$store.commit(\"account/setPermissions\", permissionsList);\n          _this6.$store.commit(\"account/setAuthorityResource\", authorityResource);\n          _this6.loginSuccess();\n        } else {\n          _this6.getCodeImage();\n        }\n      });\n    },\n    loginSuccess: function loginSuccess() {\n      this.$message({\n        message: this.$t(\"tips.loginSuccess\"),\n        type: \"success\"\n      });\n      this.$router.push(\"/\");\n    },\n    loginSuccessCallback: function loginSuccessCallback(user) {\n      console.log(user);\n    }\n  }\n};",null]}