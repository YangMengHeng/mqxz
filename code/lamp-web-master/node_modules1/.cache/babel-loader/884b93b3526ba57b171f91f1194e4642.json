{"remainingRequest":"E:\\项目\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js!E:\\项目\\lamp-web-master\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\项目\\lamp-web-master\\src\\store\\modules\\account.js","dependencies":[{"path":"E:\\项目\\lamp-web-master\\src\\store\\modules\\account.js","mtime":1679380940000},{"path":"E:\\项目\\lamp-web-master\\babel.config.js","mtime":1679380940000},{"path":"E:\\项目\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\项目\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\项目\\lamp-web-master\\node_modules\\eslint-loader\\index.js","mtime":1686711135831}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"E:/\\u9879\\u76EE/lamp-web-master/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _localstorage = _interopRequireDefault(require(\"@/utils/localstorage\"));\nvar _default = {\n  namespaced: true,\n  state: {\n    refreshToken: _localstorage.default.get('REFRESH_TOKEN'),\n    token: _localstorage.default.get('TOKEN', ''),\n    tenant: _localstorage.default.get('TENANT', ''),\n    expireTime: _localstorage.default.get('EXPIRE_TIME', 0),\n    user: _localstorage.default.get('USER') || {},\n    permissions: _localstorage.default.get('PERMISSIONS') || [],\n    authorityResource: _localstorage.default.get('AUTHORITY_RESOURCE') || {\n      \"enabled\": true,\n      \"caseSensitive\": false,\n      \"resourceList\": [],\n      \"roleList\": []\n    },\n    routes: _localstorage.default.get('USER_ROUTER') || []\n  },\n  mutations: {\n    setTenant: function setTenant(state, val) {\n      _localstorage.default.save('TENANT', val);\n      state.accessToken = val;\n    },\n    setRefreshToken: function setRefreshToken(state, val) {\n      _localstorage.default.save('REFRESH_TOKEN', val);\n      state.refreshToken = val;\n    },\n    setToken: function setToken(state, val) {\n      _localstorage.default.save('TOKEN', val);\n      state.token = val;\n    },\n    setExpireTime: function setExpireTime(state, val) {\n      _localstorage.default.save('EXPIRE_TIME', val);\n      state.expireTime = val;\n    },\n    setUser: function setUser(state, val) {\n      _localstorage.default.save('USER', val);\n      state.user = val;\n    },\n    setPermissions: function setPermissions(state, val) {\n      _localstorage.default.save('PERMISSIONS', val);\n      state.permissions = val;\n    },\n    setAuthorityResource: function setAuthorityResource(state, val) {\n      _localstorage.default.save('AUTHORITY_RESOURCE', val);\n      state.authorityResource = val;\n    },\n    setRoutes: function setRoutes(state, val) {\n      _localstorage.default.save('USER_ROUTER', val);\n      state.routes = val;\n    }\n  }\n};\nexports.default = _default;",null]}