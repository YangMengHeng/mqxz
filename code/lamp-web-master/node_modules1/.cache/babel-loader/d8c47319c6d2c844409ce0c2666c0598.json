{"remainingRequest":"E:\\project\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js!E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web-master\\src\\views\\lamp\\tenant\\datasourceConfig\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\project\\lamp-web-master\\src\\views\\lamp\\tenant\\datasourceConfig\\index.vue","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master\\babel.config.js","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"E:/project/lamp-web-master/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.regexp.split\");\nrequire(\"core-js/modules/es7.array.includes\");\nrequire(\"core-js/modules/es6.string.includes\");\nrequire(\"core-js/modules/es6.array.sort\");\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.array.find-index\");\nvar _defineProperty2 = _interopRequireDefault(require(\"E:/project/lamp-web-master/node_modules/@babel/runtime/helpers/defineProperty.js\"));\nrequire(\"core-js/modules/es6.regexp.search\");\nvar _Pagination = _interopRequireDefault(require(\"@/components/Pagination\"));\nvar _edit = _interopRequireDefault(require(\"./edit\"));\nvar _DatasourceConfig = _interopRequireDefault(require(\"@/api/DatasourceConfig.js\"));\nvar _elDragDialog = _interopRequireDefault(require(\"@/directive/el-drag-dialog\"));\nvar _commons = require(\"@/utils/commons\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: \"DatasourceConfigManage\",\n  directives: {\n    elDragDialog: _elDragDialog.default\n  },\n  components: {\n    Pagination: _Pagination.default,\n    DatasourceConfigEdit: _edit.default\n  },\n  filters: {},\n  data: function data() {\n    return {\n      dialog: {\n        isVisible: false,\n        title: \"\"\n      },\n      isTestConnect: false,\n      preview: {\n        isVisible: false,\n        context: ''\n      },\n      tableKey: 0,\n      queryParams: (0, _commons.initQueryParams)({}),\n      selection: [],\n      loading: false,\n      tableData: {\n        total: 0\n      },\n      enums: {}\n    };\n  },\n  computed: {},\n  mounted: function mounted() {\n    this.fetch();\n  },\n  methods: {\n    editClose: function editClose() {\n      this.dialog.isVisible = false;\n    },\n    editSuccess: function editSuccess() {\n      this.search();\n    },\n    onSelectChange: function onSelectChange(selection) {\n      this.selection = selection;\n    },\n    search: function search() {\n      this.fetch(_objectSpread({}, this.queryParams));\n    },\n    reset: function reset() {\n      this.queryParams = (0, _commons.initQueryParams)({});\n      this.$refs.table.clearSort();\n      this.$refs.table.clearFilter();\n      this.search();\n    },\n    exportExcelPreview: function exportExcelPreview() {\n      var _this = this;\n      if (this.queryParams.timeRange) {\n        this.queryParams.extra.createTime_st = this.queryParams.timeRange[0];\n        this.queryParams.extra.createTime_ed = this.queryParams.timeRange[1];\n      }\n      this.queryParams.extra.fileName = '导出数据源数据';\n      _DatasourceConfig.default.preview(this.queryParams).then(function (response) {\n        var res = response.data;\n        _this.preview.isVisible = true;\n        _this.preview.context = res.data;\n      });\n    },\n    exportExcel: function exportExcel() {\n      if (this.queryParams.timeRange) {\n        this.queryParams.extra.createTime_st = this.queryParams.timeRange[0];\n        this.queryParams.extra.createTime_ed = this.queryParams.timeRange[1];\n      }\n      this.queryParams.extra.fileName = '导出数据源数据';\n      _DatasourceConfig.default.export(this.queryParams).then(function (response) {\n        (0, _commons.downloadFile)(response);\n      });\n    },\n    add: function add() {\n      this.$refs.edit.type = \"add\";\n      this.dialog.title = this.$t(\"common.add\");\n      this.dialog.isVisible = true;\n    },\n    singleDelete: function singleDelete(row) {\n      this.$refs.table.clearSelection();\n      this.$refs.table.toggleRowSelection(row, true);\n      this.batchDelete();\n    },\n    batchDelete: function batchDelete() {\n      var _this2 = this;\n      if (!this.selection.length) {\n        this.$message({\n          message: this.$t(\"tips.noDataSelected\"),\n          type: \"warning\"\n        });\n        return;\n      }\n      var readonlyIndex = this.selection.findIndex(function (item) {\n        return item.readonly;\n      });\n      if (readonlyIndex > -1) {\n        this.$message({\n          message: this.$t(\"tips.readonly\"),\n          type: \"warning\"\n        });\n        return;\n      }\n      this.$confirm(\"删除数据源数据后，会导致运行中的租户无法正常运行，请谨慎删除\", this.$t(\"common.tips\"), {\n        confirmButtonText: \"坚决删除\",\n        cancelButtonText: \"取消\",\n        type: \"warning\",\n        closeOnClickModal: false,\n        closeOnPressEscape: false,\n        distinguishCancelAndClose: true\n      }).then(function () {\n        var ids = [];\n        var contain = false;\n        _this2.selection.forEach(function (item) {\n          if (item.readonly) {\n            contain = true;\n            return;\n          }\n          ids.push(item.id);\n        });\n        if (contain) {\n          _this2.$message({\n            message: _this2.$t(\"tips.readonly\"),\n            type: \"warning\"\n          });\n        } else {\n          _this2.delete(ids);\n        }\n      });\n    },\n    clearSelections: function clearSelections() {\n      this.$refs.table.clearSelection();\n    },\n    delete: function _delete(ids) {\n      var _this3 = this;\n      _DatasourceConfig.default.delete(ids).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess) {\n          _this3.$message({\n            message: _this3.$t(\"tips.deleteSuccess\"),\n            type: \"success\"\n          });\n          _this3.search();\n        }\n      });\n    },\n    testConnect: function testConnect(row) {\n      var _this4 = this;\n      row.poolName = 'test';\n      if (this.isTestConnect) {\n        this.$message({\n          message: '正在测试连接，请稍后',\n          type: 'warn'\n        });\n        return;\n      }\n      var loading = this.$loading({\n        lock: true,\n        text: 'Loading',\n        spinner: 'el-icon-loading',\n        background: 'rgba(0, 0, 0, 0.7)'\n      });\n      this.isTestConnect = true;\n      _DatasourceConfig.default.testConnect(row).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess && res.data) {\n          _this4.$message({\n            message: '连接成功',\n            type: 'success'\n          });\n        } else {\n          _this4.$message({\n            message: '连接失败',\n            type: 'error'\n          });\n        }\n      }).catch(function (error) {\n        console.log(error);\n      }).finally(function () {\n        _this4.isTestConnect = false;\n        loading.close();\n      });\n    },\n    copy: function copy(row) {\n      this.$refs.edit.setDatasourceConfig(row);\n      this.$refs.edit.type = \"copy\";\n      this.dialog.title = this.$t(\"common.copy\");\n      this.dialog.isVisible = true;\n    },\n    edit: function edit(row) {\n      this.$refs.edit.setDatasourceConfig(row);\n      this.$refs.edit.type = \"edit\";\n      this.dialog.title = this.$t(\"common.edit\");\n      this.dialog.isVisible = true;\n    },\n    fetch: function fetch() {\n      var _this5 = this;\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.loading = true;\n      if (this.queryParams.timeRange) {\n        this.queryParams.extra.createTime_st = this.queryParams.timeRange[0];\n        this.queryParams.extra.createTime_ed = this.queryParams.timeRange[1];\n      }\n      this.queryParams.current = params.current ? params.current : this.queryParams.current;\n      this.queryParams.size = params.size ? params.size : this.queryParams.size;\n      _DatasourceConfig.default.page(this.queryParams).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess) {\n          _this5.tableData = res.data;\n        }\n        // eslint-disable-next-line no-return-assign\n      }).finally(function () {\n        return _this5.loading = false;\n      });\n    },\n    sortChange: function sortChange(val) {\n      this.queryParams.sort = val.prop;\n      this.queryParams.order = val.order;\n      if (this.queryParams.sort) {\n        this.search();\n      }\n    },\n    filterChange: function filterChange(filters) {\n      for (var key in filters) {\n        if (key.includes('.')) {\n          var val = {};\n          val[key.split('.')[1]] = filters[key][0];\n          this.queryParams.model[key.split('.')[0]] = val;\n        } else {\n          this.queryParams.model[key] = filters[key][0];\n        }\n      }\n      this.search();\n    },\n    cellClick: function cellClick(row, column) {\n      var _this6 = this;\n      if (column['columnKey'] !== \"selectionId\") {\n        return;\n      }\n      var flag = false;\n      this.selection.forEach(function (item) {\n        if (item.id === row.id) {\n          flag = true;\n          _this6.$refs.table.toggleRowSelection(row);\n        }\n      });\n      if (!flag) {\n        this.$refs.table.toggleRowSelection(row, true);\n      }\n    }\n  }\n};\nexports.default = _default;",{"version":3,"names":["_Pagination","_interopRequireDefault","require","_edit","_DatasourceConfig","_elDragDialog","_commons","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","name","directives","elDragDialog","components","Pagination","DatasourceConfigEdit","filters","data","dialog","isVisible","title","isTestConnect","preview","context","tableKey","queryParams","initQueryParams","selection","loading","tableData","total","enums","computed","mounted","fetch","methods","editClose","editSuccess","search","onSelectChange","reset","$refs","table","clearSort","clearFilter","exportExcelPreview","_this","timeRange","extra","createTime_st","createTime_ed","fileName","datasourceConfigApi","then","response","res","exportExcel","export","downloadFile","add","edit","type","$t","singleDelete","row","clearSelection","toggleRowSelection","batchDelete","_this2","$message","message","readonlyIndex","findIndex","item","readonly","$confirm","confirmButtonText","cancelButtonText","closeOnClickModal","closeOnPressEscape","distinguishCancelAndClose","ids","contain","id","delete","clearSelections","_delete","_this3","isSuccess","testConnect","_this4","poolName","$loading","lock","text","spinner","background","catch","error","console","log","finally","close","copy","setDatasourceConfig","_this5","params","undefined","current","size","page","sortChange","val","sort","prop","order","filterChange","includes","split","model","cellClick","column","_this6","flag","exports","_default"],"sources":["src/views/lamp/tenant/datasourceConfig/index.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-input\n        v-model=\"queryParams.model.name\"\n        :placeholder=\"$t('table.datasourceConfig.name')\"\n        class=\"filter-item search-item\"\n      />\n      <el-input\n        v-model=\"queryParams.model.username\"\n        :placeholder=\"$t('table.datasourceConfig.username')\"\n        class=\"filter-item search-item\"\n      />\n      <el-date-picker\n        v-model=\"queryParams.timeRange\"\n        :range-separator=\"null\"\n        :start-placeholder=\"$t('table.createTime')\"\n        class=\"filter-item search-item date-range-item\"\n        format=\"yyyy-MM-dd HH:mm:ss\"\n        type=\"daterange\"\n        value-format=\"yyyy-MM-dd HH:mm:ss\"\n      />\n      <el-button class=\"filter-item\" plain type=\"primary\" @click=\"search\">\n        {{ $t(\"table.search\") }}\n      </el-button>\n      <el-button class=\"filter-item\" plain type=\"warning\" @click=\"reset\">\n        {{ $t(\"table.reset\") }}\n      </el-button>\n      <el-button class=\"filter-item\" plain type=\"danger\" @click=\"add\">\n        {{ $t(\"table.add\") }}\n      </el-button>\n      <el-dropdown class=\"filter-item\" trigger=\"click\">\n        <el-button>\n          {{ $t(\"table.more\") }}\n          <i class=\"el-icon-arrow-down el-icon--right\" />\n        </el-button>\n        <el-dropdown-menu slot=\"dropdown\">\n          <el-dropdown-item icon=\"el-icon-delete\" @click.native=\"batchDelete\">{{ $t(\"table.delete\") }}</el-dropdown-item>\n          <el-dropdown-item @click.native=\"exportExcel\">{{ $t(\"table.export\") }}</el-dropdown-item>\n          <el-dropdown-item @click.native=\"exportExcelPreview\">{{ $t(\"table.exportPreview\") }}</el-dropdown-item>\n        </el-dropdown-menu>\n      </el-dropdown>\n    </div>\n\n    <el-table\n      :key=\"tableKey\"\n      ref=\"table\"\n      v-loading=\"loading\"\n      :data=\"tableData.records\"\n      border\n      fit\n      row-key=\"id\"\n      style=\"width: 100%;\"\n      @filter-change=\"filterChange\"\n      @selection-change=\"onSelectChange\"\n      @sort-change=\"sortChange\"\n      @cell-click=\"cellClick\"\n    >\n      <el-table-column align=\"center\" type=\"selection\" width=\"40px\" column-key=\"selectionId\" :reserve-selection=\"true\" />\n      <el-table-column\n        :label=\"$t('table.datasourceConfig.name')\"\n        align=\"center\"\n        prop=\"code\"\n        width=\"150px\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.name }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('table.datasourceConfig.username')\"\n        class-name=\"status-col\"\n        prop=\"name\"\n        width=\"100px\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.username }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('table.datasourceConfig.password')\"\n        class-name=\"status-col\"\n        width=\"100px\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.password }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('table.datasourceConfig.url')\"\n        class-name=\"status-col\"\n        :show-overflow-tooltip=\"true\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.url }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('table.datasourceConfig.driverClassName')\"\n        class-name=\"status-col\"\n        :show-overflow-tooltip=\"true\"\n        width=\"200px\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.driverClassName }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('table.createTime')\"\n        align=\"center\"\n        prop=\"createTime\"\n        sortable=\"custom\"\n        width=\"170px\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.createTime }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('table.operation')\"\n        align=\"center\"\n        column-key=\"operation\"\n        class-name=\"small-padding fixed-width\"\n        width=\"150px\"\n      >\n        <template slot-scope=\"{ row }\">\n          <i\n            class=\"el-icon-copy-document table-operation\"\n            style=\"color: #87d068;\"\n            @click=\"copy(row)\"\n          />\n          <i\n            class=\"el-icon-connection table-operation\"\n            style=\"color: #87d068;\"\n            @click=\"testConnect(row)\"\n          />\n          <i\n            class=\"el-icon-edit table-operation\"\n            style=\"color: #2db7f5;\"\n            @click=\"edit(row)\"\n          />\n          <i\n            class=\"el-icon-delete table-operation\"\n            style=\"color: #f50;\"\n            @click=\"singleDelete(row)\"\n          />\n        </template>\n      </el-table-column>\n    </el-table>\n    <pagination\n      v-show=\"tableData.total > 0\"\n      :limit.sync=\"queryParams.size\"\n      :page.sync=\"queryParams.current\"\n      :total=\"Number(tableData.total)\"\n      @pagination=\"fetch\"\n    />\n    <datasourceConfig-edit\n      ref=\"edit\"\n      :dialog-visible=\"dialog.isVisible\"\n      :title=\"dialog.title\"\n      @close=\"editClose\"\n      @success=\"editSuccess\"\n    />\n    <el-dialog\n      v-el-drag-dialog\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"true\"\n      title=\"预览\"\n      width=\"80%\"\n      top=\"50px\"\n      :visible.sync=\"preview.isVisible\"\n    >\n      <el-scrollbar>\n        <div v-html=\"preview.context\" />\n      </el-scrollbar>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport Pagination from \"@/components/Pagination\"\nimport DatasourceConfigEdit from \"./edit\"\nimport datasourceConfigApi from \"@/api/DatasourceConfig.js\"\nimport elDragDialog from '@/directive/el-drag-dialog'\nimport { downloadFile, initQueryParams } from '@/utils/commons'\nexport default {\n  name: \"DatasourceConfigManage\",\n  directives: { elDragDialog },\n  components: { Pagination, DatasourceConfigEdit },\n  filters: {\n  },\n  data () {\n    return {\n      dialog: {\n        isVisible: false,\n        title: \"\"\n      },\n      isTestConnect: false,\n      preview: {\n        isVisible: false,\n        context: ''\n      },\n      tableKey: 0,\n      queryParams: initQueryParams({}),\n      selection: [],\n      loading: false,\n      tableData: {\n        total: 0\n      },\n      enums: {\n      }\n    }\n  },\n  computed: {\n  },\n  mounted () {\n    this.fetch()\n  },\n  methods: {\n    editClose () {\n      this.dialog.isVisible = false\n    },\n    editSuccess () {\n      this.search()\n    },\n    onSelectChange (selection) {\n      this.selection = selection\n    },\n    search () {\n      this.fetch({\n        ...this.queryParams\n      })\n    },\n    reset () {\n      this.queryParams = initQueryParams({})\n      this.$refs.table.clearSort()\n      this.$refs.table.clearFilter()\n      this.search()\n    },\n    exportExcelPreview () {\n      if (this.queryParams.timeRange) {\n        this.queryParams.extra.createTime_st = this.queryParams.timeRange[0]\n        this.queryParams.extra.createTime_ed = this.queryParams.timeRange[1]\n      }\n      this.queryParams.extra.fileName = '导出数据源数据'\n      datasourceConfigApi.preview(this.queryParams).then(response => {\n        const res = response.data\n        this.preview.isVisible = true\n        this.preview.context = res.data\n      })\n    },\n    exportExcel () {\n      if (this.queryParams.timeRange) {\n        this.queryParams.extra.createTime_st = this.queryParams.timeRange[0]\n        this.queryParams.extra.createTime_ed = this.queryParams.timeRange[1]\n      }\n      this.queryParams.extra.fileName = '导出数据源数据'\n      datasourceConfigApi.export(this.queryParams).then(response => {\n        downloadFile(response)\n      })\n    },\n    add () {\n      this.$refs.edit.type = \"add\"\n      this.dialog.title = this.$t(\"common.add\")\n      this.dialog.isVisible = true\n    },\n    singleDelete (row) {\n      this.$refs.table.clearSelection()\n      this.$refs.table.toggleRowSelection(row, true)\n      this.batchDelete()\n    },\n    batchDelete () {\n      if (!this.selection.length) {\n        this.$message({\n          message: this.$t(\"tips.noDataSelected\"),\n          type: \"warning\"\n        })\n        return\n      }\n\n      const readonlyIndex = this.selection.findIndex(item => item.readonly)\n\n      if (readonlyIndex > -1) {\n        this.$message({\n          message: this.$t(\"tips.readonly\"),\n          type: \"warning\"\n        })\n        return\n      }\n\n      this.$confirm(\"删除数据源数据后，会导致运行中的租户无法正常运行，请谨慎删除\", this.$t(\"common.tips\"), {\n        confirmButtonText: \"坚决删除\",\n        cancelButtonText: \"取消\",\n        type: \"warning\",\n        closeOnClickModal: false,\n        closeOnPressEscape: false,\n        distinguishCancelAndClose: true\n      })\n        .then(() => {\n          const ids = []\n          let contain = false\n          this.selection.forEach(item => {\n            if (item.readonly) {\n              contain = true\n              return\n            }\n            ids.push(item.id)\n          })\n          if (contain) {\n            this.$message({\n              message: this.$t(\"tips.readonly\"),\n              type: \"warning\"\n            })\n          } else {\n            this.delete(ids)\n          }\n        })\n    },\n    clearSelections () {\n      this.$refs.table.clearSelection()\n    },\n    delete (ids) {\n      datasourceConfigApi.delete(ids).then(response => {\n        const res = response.data\n        if (res.isSuccess) {\n          this.$message({\n            message: this.$t(\"tips.deleteSuccess\"),\n            type: \"success\"\n          })\n          this.search()\n        }\n      })\n    },\n    testConnect (row) {\n      row.poolName = 'test'\n      if (this.isTestConnect) {\n        this.$message({\n          message: '正在测试连接，请稍后',\n          type: 'warn'\n        })\n        return\n      }\n\n      const loading = this.$loading({\n        lock: true,\n        text: 'Loading',\n        spinner: 'el-icon-loading',\n        background: 'rgba(0, 0, 0, 0.7)'\n      });\n      this.isTestConnect = true\n      datasourceConfigApi.testConnect(row).then((response) => {\n        const res = response.data\n        if (res.isSuccess && res.data) {\n          this.$message({\n            message: '连接成功',\n            type: 'success'\n          })\n        } else {\n          this.$message({\n            message: '连接失败',\n            type: 'error'\n          })\n        }\n      }).catch((error) => {\n        console.log(error)\n      }).finally(() => {\n        this.isTestConnect = false;\n        loading.close();\n      })\n    },\n    copy (row) {\n      this.$refs.edit.setDatasourceConfig(row)\n      this.$refs.edit.type = \"copy\"\n      this.dialog.title = this.$t(\"common.copy\")\n      this.dialog.isVisible = true\n    },\n    edit (row) {\n      this.$refs.edit.setDatasourceConfig(row)\n      this.$refs.edit.type = \"edit\"\n      this.dialog.title = this.$t(\"common.edit\")\n      this.dialog.isVisible = true\n    },\n    fetch (params = {}) {\n      this.loading = true\n      if (this.queryParams.timeRange) {\n        this.queryParams.extra.createTime_st = this.queryParams.timeRange[0]\n        this.queryParams.extra.createTime_ed = this.queryParams.timeRange[1]\n      }\n\n      this.queryParams.current = params.current ? params.current : this.queryParams.current\n      this.queryParams.size = params.size ? params.size : this.queryParams.size\n\n      datasourceConfigApi.page(this.queryParams).then(response => {\n        const res = response.data\n        if (res.isSuccess) {\n          this.tableData = res.data\n        }\n        // eslint-disable-next-line no-return-assign\n      }).finally(() => this.loading = false)\n    },\n    sortChange (val) {\n      this.queryParams.sort = val.prop\n      this.queryParams.order = val.order\n      if (this.queryParams.sort) {\n        this.search()\n      }\n    },\n    filterChange (filters) {\n      for (const key in filters) {\n        if (key.includes('.')) {\n          const val = {}\n          val[key.split('.')[1]] = filters[key][0]\n          this.queryParams.model[key.split('.')[0]] = val\n        } else {\n          this.queryParams.model[key] = filters[key][0]\n        }\n      }\n      this.search()\n    },\n    cellClick (row, column) {\n      if (column['columnKey'] !== \"selectionId\") {\n        return\n      }\n      let flag = false\n      this.selection.forEach((item) => {\n        if (item.id === row.id) {\n          flag = true\n          this.$refs.table.toggleRowSelection(row)\n        }\n      })\n\n      if (!flag) {\n        this.$refs.table.toggleRowSelection(row, true)\n      }\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scoped></style>\n"],"mappings":"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"}]}