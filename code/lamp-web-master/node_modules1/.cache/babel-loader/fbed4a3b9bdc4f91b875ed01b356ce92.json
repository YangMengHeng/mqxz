{"remainingRequest":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\src\\views\\lamp\\system\\area\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\src\\views\\lamp\\system\\area\\index.vue","mtime":1679380940000},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\babel.config.js","mtime":1679380940000},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"C:/Users/Planck/Desktop/mycode/lamp/lamp-web-master/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"C:/Users/Planck/Desktop/mycode/lamp/lamp-web-master/node_modules/@babel/runtime/helpers/defineProperty.js\"));\nvar _Area = _interopRequireDefault(require(\"@/api/Area.js\"));\nvar _commons = require(\"@/utils/commons\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: \"AreaManager\",\n  data: function data() {\n    var _this = this;\n    return {\n      label: \"\",\n      areaTree: [],\n      dicts: {\n        AREA_LEVEL: []\n      },\n      area: this.initArea(),\n      rules: {\n        label: [{\n          required: true,\n          message: this.$t(\"rules.require\"),\n          trigger: \"blur\"\n        }, {\n          min: 1,\n          max: 255,\n          message: this.$t(\"rules.range3to10\"),\n          trigger: \"blur\"\n        }],\n        code: [{\n          required: true,\n          message: this.$t(\"rules.require\"),\n          trigger: \"blur\"\n        }, {\n          min: 1,\n          max: 255,\n          message: this.$t(\"rules.range3to10\"),\n          trigger: \"blur\"\n        }, {\n          validator: function validator(rule, value, callback) {\n            _Area.default.check(value, _this.area.id).then(function (response) {\n              var res = response.data;\n              if (res.data) {\n                callback('编码重复');\n              } else {\n                callback();\n              }\n            }).catch(function () {\n              return callback();\n            });\n          },\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  mounted: function mounted() {\n    (0, _commons.initDicts)('AREA_LEVEL', this.dicts);\n  },\n  methods: {\n    initArea: function initArea() {\n      return {\n        id: \"\",\n        code: \"\",\n        label: \"\",\n        parentId: 0,\n        parentLabel: \"\",\n        fullName: \"\",\n        longitude: \"\",\n        latitude: \"\",\n        source: \"\",\n        level: \"PROVINCE\",\n        sortValue: 0\n      };\n    },\n    initAreaTree: function initAreaTree() {\n      var _this2 = this;\n      var parentId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      _Area.default.linkage({\n        parentId: parentId\n      }).then(function (response) {\n        var res = response.data;\n        _this2.areaTree = res.data;\n      });\n    },\n    loadTree: function loadTree(node, resolve) {\n      _Area.default.linkage({\n        parentId: node.data.id\n      }).then(function (response) {\n        var res = response.data;\n        resolve(res.data);\n      });\n    },\n    handleNumChange: function handleNumChange(val) {\n      this.area.sortValue = val;\n    },\n    filterNode: function filterNode(value, data) {\n      if (!value) return true;\n      return data.label.indexOf(value) !== -1;\n    },\n    nodeClick: function nodeClick(data) {\n      this.area = _objectSpread({}, data);\n      var parent = this.$refs.areaTree.getNode(data.parentId);\n      if (parent) {\n        this.area.parentLabel = parent.label;\n      }\n      this.$refs.form.clearValidate();\n    },\n    add: function add() {\n      this.resetForm();\n      var checked = this.$refs.areaTree.getCheckedNodes();\n      if (checked.length > 1) {\n        this.$message({\n          message: this.$t(\"tips.onlyChooseOne\"),\n          type: \"warning\"\n        });\n      } else if (checked.length > 0) {\n        this.area.parentId = checked[0].id;\n        this.area.parentLabel = checked[0].label;\n      } else {\n        this.area.parentId = 0;\n        this.area.parentLabel = \"\";\n      }\n    },\n    deleteArea: function deleteArea() {\n      var _this3 = this;\n      var checked = this.$refs.areaTree.getCheckedKeys();\n      if (checked.length === 0) {\n        this.$message({\n          message: this.$t(\"tips.noNodeSelected\"),\n          type: \"warning\"\n        });\n      } else {\n        this.$confirm(this.$t(\"tips.confirmDeleteNode\"), this.$t(\"common.tips\"), {\n          confirmButtonText: this.$t(\"common.confirm\"),\n          cancelButtonText: this.$t(\"common.cancel\"),\n          type: \"warning\"\n        }).then(function () {\n          _Area.default.delete(checked).then(function (response) {\n            var res = response.data;\n            if (res.isSuccess) {\n              _this3.$message({\n                message: _this3.$t(\"tips.deleteSuccess\"),\n                type: \"success\"\n              });\n            }\n            _this3.reset();\n          });\n        }).catch(function () {\n          _this3.$refs.areaTree.setCheckedKeys([]);\n        });\n      }\n    },\n    search: function search() {\n      this.$refs.areaTree.filter(this.label);\n    },\n    reset: function reset() {\n      this.initAreaTree();\n      this.label = \"\";\n      this.resetForm();\n    },\n    submit: function submit() {\n      var _this4 = this;\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          if (_this4.area.id) {\n            _this4.update();\n          } else {\n            _this4.save();\n          }\n        } else {\n          return false;\n        }\n      });\n    },\n    save: function save() {\n      var _this5 = this;\n      _Area.default.save(_objectSpread({}, this.area)).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess) {\n          _this5.$message({\n            message: _this5.$t(\"tips.createSuccess\"),\n            type: \"success\"\n          });\n        }\n        _this5.reset();\n      });\n    },\n    update: function update() {\n      var _this6 = this;\n      _Area.default.update(_objectSpread({}, this.area)).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess) {\n          _this6.$message({\n            message: _this6.$t(\"tips.updateSuccess\"),\n            type: \"success\"\n          });\n        }\n        _this6.reset();\n      });\n    },\n    resetForm: function resetForm() {\n      this.$refs.form.clearValidate();\n      this.$refs.form.resetFields();\n      this.area = this.initArea();\n    }\n  }\n};\nexports.default = _default;",null]}