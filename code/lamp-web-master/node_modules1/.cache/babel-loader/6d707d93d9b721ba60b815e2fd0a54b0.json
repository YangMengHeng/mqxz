{"remainingRequest":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js!E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js!E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web-master(finish\\lamp-web-master\\src\\views\\lamp\\tenant\\user\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\src\\views\\lamp\\tenant\\user\\edit.vue","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\babel.config.js","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1686711135008},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"E:/project/lamp-web-master(finish/lamp-web-master/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport globalUserApi from '@/api/GlobalUser.js';\nimport tenantApi from '@/api/Tenant.js';\nexport default {\n  name: 'GlobalUserEdit',\n  props: {\n    dialogVisible: {\n      type: Boolean,\n      default: false\n    },\n    title: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    var _this = this;\n    return {\n      tenantList: [],\n      type: 'add',\n      user: this.initUser(),\n      screenWidth: 0,\n      width: this.initWidth(),\n      rules: {\n        account: [{\n          required: true,\n          message: this.$t('rules.require'),\n          trigger: 'blur'\n        }, {\n          min: 4,\n          max: 30,\n          message: this.$t('rules.range4to10'),\n          trigger: 'blur'\n        }, {\n          validator: function validator(rule, value, callback) {\n            if (!_this.user.id && _this.user.tenantCode) {\n              var checkData = {\n                tenantCode: _this.user.tenantCode,\n                account: value\n              };\n              globalUserApi.check(checkData).then(function (response) {\n                var res = response.data;\n                if (res.data) {\n                  callback(_this.$t('rules.usernameExist'));\n                } else {\n                  callback();\n                }\n              });\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        }],\n        tenantCode: [{\n          required: true,\n          message: this.$t('rules.require'),\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    isVisible: {\n      get: function get() {\n        return this.dialogVisible;\n      },\n      set: function set() {\n        this.close();\n        this.reset();\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n    this.initTenantList();\n    window.onresize = function () {\n      return function () {\n        _this2.width = _this2.initWidth();\n      }();\n    };\n  },\n  methods: {\n    initTenantList: function initTenantList() {\n      var _this3 = this;\n      tenantApi.list({\n        status: {\n          code: 'NORMAL'\n        }\n      }).then(function (response) {\n        var res = response.data;\n        _this3.tenantList = res.data;\n      });\n    },\n    initUser: function initUser() {\n      return {\n        id: '',\n        tenantCode: '0000',\n        name: '',\n        account: '',\n        mobile: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      };\n    },\n    initWidth: function initWidth() {\n      this.screenWidth = document.body.clientWidth;\n      if (this.screenWidth < 991) {\n        return '90%';\n      } else if (this.screenWidth < 1400) {\n        return '45%';\n      } else {\n        return '800px';\n      }\n    },\n    setUser: function setUser(val) {\n      this.user = _objectSpread({}, val);\n    },\n    close: function close() {\n      this.$emit('close');\n    },\n    submitForm: function submitForm() {\n      var _this4 = this;\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          if (_this4.type === 'add') {\n            _this4.save();\n          } else {\n            _this4.update();\n          }\n        } else {\n          return false;\n        }\n      });\n    },\n    save: function save() {\n      var _this5 = this;\n      globalUserApi.save(this.user).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess) {\n          _this5.isVisible = false;\n          _this5.$message({\n            message: _this5.$t('tips.createSuccess'),\n            type: 'success'\n          });\n          _this5.$emit('success');\n        }\n      });\n    },\n    update: function update() {\n      var _this6 = this;\n      globalUserApi.update(this.user).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess) {\n          _this6.isVisible = false;\n          _this6.$message({\n            message: _this6.$t('tips.updateSuccess'),\n            type: 'success'\n          });\n          _this6.$emit('success');\n        }\n      });\n    },\n    reset: function reset() {\n      // 先清除校验，再清除表单，不然有奇怪的bug\n      this.$refs.form.clearValidate();\n      this.$refs.form.resetFields();\n      this.user = this.initUser();\n    }\n  }\n};",{"version":3,"names":["globalUserApi","tenantApi","name","props","dialogVisible","type","Boolean","default","title","String","data","_this","tenantList","user","initUser","screenWidth","width","initWidth","rules","account","required","message","$t","trigger","min","max","validator","rule","value","callback","id","tenantCode","checkData","check","then","response","res","computed","isVisible","get","set","close","reset","mounted","_this2","initTenantList","window","onresize","methods","_this3","list","status","code","mobile","email","password","confirmPassword","document","body","clientWidth","setUser","val","_objectSpread","$emit","submitForm","_this4","$refs","form","validate","valid","save","update","_this5","isSuccess","$message","_this6","clearValidate","resetFields"],"sources":["src/views/lamp/tenant/user/edit.vue"],"sourcesContent":["<template>\n  <el-dialog :close-on-click-modal=\"false\" :close-on-press-escape=\"false\" :title=\"title\" :visible.sync=\"isVisible\" :width=\"width\" top=\"50px\">\n    <el-form ref=\"form\" :model=\"user\" :rules=\"rules\" label-position=\"right\" label-width=\"130px\">\n      <el-form-item label=\"租户\" prop=\"tenantCode\">\n        <el-select v-model=\"user.tenantCode\" :disabled=\"type === 'edit'\" placeholder=\"企业\">\n          <el-option v-for=\"item in tenantList\" :key=\"item.code\" :label=\"item.name + '(' + item.code + ')'\" :value=\"item.code\" />\n        </el-select>\n      </el-form-item>\n      <el-form-item :label=\"$t('table.user.account')\" prop=\"account\">\n        <el-input v-model=\"user.account\" :disabled=\"type === 'edit'\" />\n      </el-form-item>\n      <el-form-item v-show=\"type === 'add'\" :label=\"$t('table.user.password')\" prop=\"password\">\n        <el-input v-model=\"user.password\" maxlength=\"64\" type=\"password\" />\n      </el-form-item>\n      <el-form-item v-show=\"type === 'add'\" :label=\"$t('table.user.confirmPassword')\" prop=\"confirmPassword\">\n        <el-input v-model=\"user.confirmPassword\" maxlength=\"64\" type=\"password\" />\n      </el-form-item>\n      <el-form-item :label=\"$t('table.user.name')\" prop=\"name\">\n        <el-input v-model=\"user.name\" maxlength=\"50\" />\n      </el-form-item>\n      <el-form-item :label=\"$t('table.user.mobile')\" prop=\"mobile\">\n        <el-input v-model=\"user.mobile\" maxlength=\"20\" />\n      </el-form-item>\n      <el-form-item :label=\"$t('table.user.email')\" prop=\"email\">\n        <el-input v-model=\"user.email\" maxlength=\"255\" />\n      </el-form-item>\n    </el-form>\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button plain type=\"warning\" @click=\"isVisible = false\">{{ $t('common.cancel') }}</el-button>\n      <el-button plain type=\"primary\" @click=\"submitForm\">{{ $t('common.confirm') }}</el-button>\n    </div>\n  </el-dialog>\n</template>\n<script>\nimport globalUserApi from '@/api/GlobalUser.js'\nimport tenantApi from '@/api/Tenant.js'\n\nexport default {\n  name: 'GlobalUserEdit',\n  props: {\n    dialogVisible: {\n      type: Boolean,\n      default: false\n    },\n    title: {\n      type: String,\n      default: ''\n    }\n  },\n  data () {\n    return {\n      tenantList: [],\n      type: 'add',\n      user: this.initUser(),\n      screenWidth: 0,\n      width: this.initWidth(),\n      rules: {\n        account: [\n          { required: true, message: this.$t('rules.require'), trigger: 'blur' },\n          { min: 4, max: 30, message: this.$t('rules.range4to10'), trigger: 'blur' },\n          {\n            validator: (rule, value, callback) => {\n              if (!this.user.id && this.user.tenantCode) {\n                const checkData = {\n                  tenantCode: this.user.tenantCode,\n                  account: value\n                }\n                globalUserApi.check(checkData)\n                  .then((response) => {\n                    const res = response.data\n                    if (res.data) {\n                      callback(this.$t('rules.usernameExist'))\n                    } else {\n                      callback()\n                    }\n                  })\n              } else {\n                callback()\n              }\n            }, trigger: 'blur'\n          }\n        ],\n        tenantCode: [{ required: true, message: this.$t('rules.require'), trigger: 'blur' }]\n      }\n    }\n  },\n  computed: {\n    isVisible: {\n      get () {\n        return this.dialogVisible\n      },\n      set () {\n        this.close()\n        this.reset()\n      }\n    }\n  },\n  mounted () {\n    this.initTenantList()\n    window.onresize = () => {\n      return (() => {\n        this.width = this.initWidth()\n      })()\n    }\n  },\n  methods: {\n    initTenantList () {\n      tenantApi.list({status: {code: 'NORMAL'}})\n        .then((response) => {\n          const res = response.data\n          this.tenantList = res.data\n        })\n    },\n    initUser () {\n      return {\n        id: '',\n        tenantCode: '0000',\n        name: '',\n        account: '',\n        mobile: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      }\n    },\n    initWidth () {\n      this.screenWidth = document.body.clientWidth\n      if (this.screenWidth < 991) {\n        return '90%'\n      } else if (this.screenWidth < 1400) {\n        return '45%'\n      } else {\n        return '800px'\n      }\n    },\n    setUser (val) {\n      this.user = { ...val }\n    },\n    close () {\n      this.$emit('close')\n    },\n    submitForm () {\n      this.$refs.form.validate((valid) => {\n        if (valid) {\n          if (this.type === 'add') {\n            this.save()\n          } else {\n            this.update()\n          }\n        } else {\n          return false\n        }\n      })\n    },\n    save () {\n      globalUserApi.save(this.user)\n        .then((response) => {\n          const res = response.data\n          if (res.isSuccess) {\n            this.isVisible = false\n            this.$message({\n              message: this.$t('tips.createSuccess'),\n              type: 'success'\n            })\n            this.$emit('success')\n          }\n        })\n    },\n    update () {\n      globalUserApi.update(this.user)\n        .then((response) => {\n          const res = response.data\n          if (res.isSuccess) {\n            this.isVisible = false\n            this.$message({\n              message: this.$t('tips.updateSuccess'),\n              type: 'success'\n            })\n            this.$emit('success')\n          }\n        })\n    },\n    reset () {\n      // 先清除校验，再清除表单，不然有奇怪的bug\n      this.$refs.form.clearValidate()\n      this.$refs.form.resetFields()\n      this.user = this.initUser()\n    }\n  }\n}\n</script>\n<style lang=\"scss\" >\n.avatar-uploader .el-upload {\n  border: 1px dashed #d9d9d9;\n  border-radius: 6px;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n}\n.avatar-uploader .el-upload:hover {\n  border-color: #409eff;\n}\n.avatar-uploader-icon {\n  font-size: 28px;\n  color: #8c939d;\n  width: 100px;\n  height: 100px;\n  line-height: 100px;\n  text-align: center;\n}\n.avatar {\n  width: 100px;\n  height: 100px;\n  display: block;\n}\n</style>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,OAAAA,aAAA;AACA,OAAAC,SAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACAC,aAAA;MACAC,IAAA,EAAAC,OAAA;MACAC,OAAA;IACA;IACAC,KAAA;MACAH,IAAA,EAAAI,MAAA;MACAF,OAAA;IACA;EACA;EACAG,IAAA,WAAAA,KAAA;IAAA,IAAAC,KAAA;IACA;MACAC,UAAA;MACAP,IAAA;MACAQ,IAAA,OAAAC,QAAA;MACAC,WAAA;MACAC,KAAA,OAAAC,SAAA;MACAC,KAAA;QACAC,OAAA,GACA;UAAAC,QAAA;UAAAC,OAAA,OAAAC,EAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAJ,OAAA,OAAAC,EAAA;UAAAC,OAAA;QAAA,GACA;UACAG,SAAA,WAAAA,UAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;YACA,KAAAlB,KAAA,CAAAE,IAAA,CAAAiB,EAAA,IAAAnB,KAAA,CAAAE,IAAA,CAAAkB,UAAA;cACA,IAAAC,SAAA;gBACAD,UAAA,EAAApB,KAAA,CAAAE,IAAA,CAAAkB,UAAA;gBACAZ,OAAA,EAAAS;cACA;cACA5B,aAAA,CAAAiC,KAAA,CAAAD,SAAA,EACAE,IAAA,WAAAC,QAAA;gBACA,IAAAC,GAAA,GAAAD,QAAA,CAAAzB,IAAA;gBACA,IAAA0B,GAAA,CAAA1B,IAAA;kBACAmB,QAAA,CAAAlB,KAAA,CAAAW,EAAA;gBACA;kBACAO,QAAA;gBACA;cACA;YACA;cACAA,QAAA;YACA;UACA;UAAAN,OAAA;QACA,EACA;QACAQ,UAAA;UAAAX,QAAA;UAAAC,OAAA,OAAAC,EAAA;UAAAC,OAAA;QAAA;MACA;IACA;EACA;EACAc,QAAA;IACAC,SAAA;MACAC,GAAA,WAAAA,IAAA;QACA,YAAAnC,aAAA;MACA;MACAoC,GAAA,WAAAA,IAAA;QACA,KAAAC,KAAA;QACA,KAAAC,KAAA;MACA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IAAA,IAAAC,MAAA;IACA,KAAAC,cAAA;IACAC,MAAA,CAAAC,QAAA;MACA;QACAH,MAAA,CAAA5B,KAAA,GAAA4B,MAAA,CAAA3B,SAAA;MACA;IACA;EACA;EACA+B,OAAA;IACAH,cAAA,WAAAA,eAAA;MAAA,IAAAI,MAAA;MACAhD,SAAA,CAAAiD,IAAA;QAAAC,MAAA;UAAAC,IAAA;QAAA;MAAA,GACAlB,IAAA,WAAAC,QAAA;QACA,IAAAC,GAAA,GAAAD,QAAA,CAAAzB,IAAA;QACAuC,MAAA,CAAArC,UAAA,GAAAwB,GAAA,CAAA1B,IAAA;MACA;IACA;IACAI,QAAA,WAAAA,SAAA;MACA;QACAgB,EAAA;QACAC,UAAA;QACA7B,IAAA;QACAiB,OAAA;QACAkC,MAAA;QACAC,KAAA;QACAC,QAAA;QACAC,eAAA;MACA;IACA;IACAvC,SAAA,WAAAA,UAAA;MACA,KAAAF,WAAA,GAAA0C,QAAA,CAAAC,IAAA,CAAAC,WAAA;MACA,SAAA5C,WAAA;QACA;MACA,gBAAAA,WAAA;QACA;MACA;QACA;MACA;IACA;IACA6C,OAAA,WAAAA,QAAAC,GAAA;MACA,KAAAhD,IAAA,GAAAiD,aAAA,KAAAD,GAAA;IACA;IACApB,KAAA,WAAAA,MAAA;MACA,KAAAsB,KAAA;IACA;IACAC,UAAA,WAAAA,WAAA;MAAA,IAAAC,MAAA;MACA,KAAAC,KAAA,CAAAC,IAAA,CAAAC,QAAA,WAAAC,KAAA;QACA,IAAAA,KAAA;UACA,IAAAJ,MAAA,CAAA5D,IAAA;YACA4D,MAAA,CAAAK,IAAA;UACA;YACAL,MAAA,CAAAM,MAAA;UACA;QACA;UACA;QACA;MACA;IACA;IACAD,IAAA,WAAAA,KAAA;MAAA,IAAAE,MAAA;MACAxE,aAAA,CAAAsE,IAAA,MAAAzD,IAAA,EACAqB,IAAA,WAAAC,QAAA;QACA,IAAAC,GAAA,GAAAD,QAAA,CAAAzB,IAAA;QACA,IAAA0B,GAAA,CAAAqC,SAAA;UACAD,MAAA,CAAAlC,SAAA;UACAkC,MAAA,CAAAE,QAAA;YACArD,OAAA,EAAAmD,MAAA,CAAAlD,EAAA;YACAjB,IAAA;UACA;UACAmE,MAAA,CAAAT,KAAA;QACA;MACA;IACA;IACAQ,MAAA,WAAAA,OAAA;MAAA,IAAAI,MAAA;MACA3E,aAAA,CAAAuE,MAAA,MAAA1D,IAAA,EACAqB,IAAA,WAAAC,QAAA;QACA,IAAAC,GAAA,GAAAD,QAAA,CAAAzB,IAAA;QACA,IAAA0B,GAAA,CAAAqC,SAAA;UACAE,MAAA,CAAArC,SAAA;UACAqC,MAAA,CAAAD,QAAA;YACArD,OAAA,EAAAsD,MAAA,CAAArD,EAAA;YACAjB,IAAA;UACA;UACAsE,MAAA,CAAAZ,KAAA;QACA;MACA;IACA;IACArB,KAAA,WAAAA,MAAA;MACA;MACA,KAAAwB,KAAA,CAAAC,IAAA,CAAAS,aAAA;MACA,KAAAV,KAAA,CAAAC,IAAA,CAAAU,WAAA;MACA,KAAAhE,IAAA,QAAAC,QAAA;IACA;EACA;AACA"}]}