{"remainingRequest":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js!E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js!E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web-master(finish\\lamp-web-master\\src\\views\\lamp\\museum\\index3.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\src\\views\\lamp\\museum\\index3.vue","mtime":1692282970926},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\babel.config.js","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1686711135008},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport echarts from 'echarts'; //引入echarts\nimport { update } from '@/api/museum'; //这个自己封装好的接口文件 tv_manage/tv_manage\nexport default {\n  name: 'TrendsSort',\n  //获取父组件的数据,（没必要获取父组件的数据可以删掉）\n  props: {\n    temps: {\n      type: Object\n    }\n  },\n  data: function data() {\n    return {\n      // 实时数据数组\n      minuteTime: [],\n      //itme改为minuteTime\n      inPerMinute: [],\n      //price改为inPerMinute    \n      outPerMinute: [],\n      //order改为outPerMinute\n      stillPerPinute: [],\n      //see改为stillPerPinute\n      // 折线图echarts初始化选项\n      echartsOption: {\n        legend: {\n          data: ['进入访客人数', '离开访客人数', '滞留访客人数']\n        },\n        xAxis: {\n          nameTextStyle: {\n            fontWeight: 600,\n            fontSize: 18\n          },\n          type: 'category',\n          boundaryGap: false,\n          data: this.minuteTime\n        },\n        yAxis: {\n          nameTextStyle: {\n            fontWeight: 600,\n            fontSize: 18\n          },\n          type: 'value',\n          scale: true,\n          // boundaryGap: ['15%', '15%'],\n          axisLabel: {\n            interval: 'auto',\n            formatter: '{value}'\n          }\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        series: [{\n          name: '进入访客人数',\n          type: 'line',\n          smooth: true,\n          data: this.inPerMinute // 绑定实时数据数组\n        }, {\n          name: '离开访客人数',\n          type: 'line',\n          smooth: true,\n          data: this.outPerMinute // 绑定实时数据数组\n        }, {\n          name: '滞留访客人数',\n          type: 'line',\n          smooth: true,\n          data: this.stillPerPinute // 绑定实时数据数组\n        }]\n      }\n    };\n  },\n\n  //监听父组件传过来的值,判断是否开启定时器，（没必要获取父组件的数据可以删掉用mounted() 周期函数）\n  watch: {\n    temps: function temps(curVal) {\n      var _this = this;\n      this.myChart = echarts.init(document.getElementById('myChart'), 'light'); // 初始化echarts, theme为light\n      this.myChart.setOption(this.echartsOption); // echarts设置初始化选项\n      if (curVal.id === 0) {\n        clearInterval(this.timer); // 关闭定时器\n      } else {\n        // 开启定时器\n        this.timer = setInterval(function () {\n          _this.addData(curVal);\n        }, 60000);\n      }\n    }\n  },\n  //不需要父组件数据的用这个\n  // mounted() {\n  //     this.myChart = echarts.init(document.getElementById('myChart'), 'light')\t// 初始化echarts, theme为light\n  //     this.myChart.setOption(this.echartsOption)\t// echarts设置初始化选项\n  //     setInterval(this.addData, 60000)\t// 每一分钟更新实时数据到折线图\n  // },\n  methods: {\n    // 获取当前时间\n    getTime: function getTime() {\n      var ts = arguments[0] || 0;\n      var t, h, i, s;\n      t = ts ? new Date(ts * 1000) : new Date();\n      h = t.getHours();\n      i = t.getMinutes();\n      s = t.getSeconds();\n      // 定义时间格式\n      return (h < 10 ? '0' + h : h) + ':' + (i < 10 ? '0' + i : i) + ':' + (s < 10 ? '0' + s : s);\n    },\n    // 添加实时数据\n    addData: function addData(curVal) {\n      var _this2 = this;\n      // 从接口获取数据并添加到数组(这是自己封装好的接口)\n      tv_update_TrendsSort(curVal).then(function (response) {\n        if (response.code === 200) {\n          _this2.inPerMinute.push(response.inPerMinute.toFixed(2));\n          _this2.outPerMinute.push(response.outPerMinute.toFixed(2));\n          _this2.stillPerPinute.push(response.stillPerPinute.toFixed(2));\n          _this2.minuteTime.push(_this2.getTime(Math.round(new Date().getTime() / 1000)));\n          // 重新将数组赋值给echarts选项\n          _this2.echartsOption.series[0].data = _this2.inPerMinute;\n          _this2.echartsOption.series[1].data = _this2.outPerMinute;\n          _this2.echartsOption.series[2].data = _this2.stillPerPinute;\n          _this2.echartsOption.xAxis.data = _this2.minuteTime;\n          _this2.myChart.setOption(_this2.echartsOption);\n        } else {\n          _this2.$message.error('出错了,折线图获取失败');\n        }\n      });\n    }\n  }\n};",{"version":3,"names":["echarts","update","name","props","temps","type","Object","data","minuteTime","inPerMinute","outPerMinute","stillPerPinute","echartsOption","legend","xAxis","nameTextStyle","fontWeight","fontSize","boundaryGap","yAxis","scale","axisLabel","interval","formatter","tooltip","trigger","series","smooth","watch","curVal","_this","myChart","init","document","getElementById","setOption","id","clearInterval","timer","setInterval","addData","methods","getTime","ts","arguments","t","h","i","s","Date","getHours","getMinutes","getSeconds","_this2","tv_update_TrendsSort","then","response","code","push","toFixed","Math","round","$message","error"],"sources":["src/views/lamp/museum/index3.vue"],"sourcesContent":["<template>\r\n<div id=\"myChart\" />\r\n  <span text-align:center; style=\"color:red; text-align:center; position:relative\"> 欢迎参观博物馆</span>\r\n   <span text-align:center; style=\"color:red; text-align:center; position:relative\"> 今日访客{{}}\r\n   </span>\r\n   <span text-align:center; style=\"color:red; text-align:center; position:relative\"> 馆内人数{{}}                  本月访客{{}}</span>\r\n  <span text-align:center; style=\"color:red; text-align:center; position:relative\"> 今年访客{{}}        </span>\r\n  \r\n  </div>\r\n</template>\r\n \r\n<script>\r\nimport echarts from 'echarts'//引入echarts\r\nimport { update} from '@/api/museum'//这个自己封装好的接口文件 tv_manage/tv_manage\r\nexport default {\r\n  name: 'TrendsSort',\r\n  //获取父组件的数据,（没必要获取父组件的数据可以删掉）\r\n  props: {\r\n    temps: {\r\n      type: Object\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      // 实时数据数组\r\n      minuteTime: [],    //itme改为minuteTime\r\n      inPerMinute: [],                //price改为inPerMinute    \r\n      outPerMinute: [],                     //order改为outPerMinute\r\n      stillPerPinute: [],                    //see改为stillPerPinute\r\n      // 折线图echarts初始化选项\r\n      echartsOption: {\r\n        legend: {\r\n          data: ['进入访客人数', '离开访客人数', '滞留访客人数']\r\n        },\r\n        xAxis: {\r\n          nameTextStyle: {\r\n            fontWeight: 600,\r\n            fontSize: 18\r\n          },\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: this.minuteTime\r\n        },\r\n        yAxis: {\r\n          nameTextStyle: {\r\n            fontWeight: 600,\r\n            fontSize: 18\r\n          },\r\n          type: 'value',\r\n          scale: true,\r\n          // boundaryGap: ['15%', '15%'],\r\n          axisLabel: {\r\n            interval: 'auto',\r\n            formatter: '{value}'\r\n          }\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        series: [\r\n          {\r\n            name: '进入访客人数',\r\n            type: 'line',\r\n            smooth: true,\r\n            data: this.inPerMinute\t// 绑定实时数据数组\r\n          },\r\n          {\r\n            name: '离开访客人数',\r\n            type: 'line',\r\n            smooth: true,\r\n            data: this.outPerMinute\t// 绑定实时数据数组\r\n          },\r\n          {\r\n            name: '滞留访客人数',\r\n            type: 'line',\r\n            smooth: true,\r\n            data: this.stillPerPinute\t// 绑定实时数据数组\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n   //监听父组件传过来的值,判断是否开启定时器，（没必要获取父组件的数据可以删掉用mounted() 周期函数）\r\n  watch: {\r\n    temps(curVal) {\r\n      this.myChart = echarts.init(document.getElementById('myChart'), 'light')\t// 初始化echarts, theme为light\r\n      this.myChart.setOption(this.echartsOption)\t// echarts设置初始化选项\r\n      if (curVal.id === 0) {\r\n        clearInterval(this.timer)// 关闭定时器\r\n      } else {\r\n        // 开启定时器\r\n        this.timer = setInterval(() => {\r\n          this.addData(curVal)\r\n        }, 60000)\r\n      }\r\n    }\r\n  },\r\n       \r\n  //不需要父组件数据的用这个\r\n  // mounted() {\r\n  //     this.myChart = echarts.init(document.getElementById('myChart'), 'light')\t// 初始化echarts, theme为light\r\n  //     this.myChart.setOption(this.echartsOption)\t// echarts设置初始化选项\r\n  //     setInterval(this.addData, 60000)\t// 每一分钟更新实时数据到折线图\r\n  // },\r\n  methods: {\r\n    // 获取当前时间\r\n    getTime: function() {\r\n      var ts = arguments[0] || 0\r\n      var t, h, i, s\r\n      t = ts ? new Date(ts * 1000) : new Date()\r\n      h = t.getHours()\r\n      i = t.getMinutes()\r\n      s = t.getSeconds()\r\n      // 定义时间格式\r\n      return (h < 10 ? '0' + h : h) + ':' + (i < 10 ? '0' + i : i) + ':' + (s < 10 ? '0' + s : s)\r\n    },\r\n    // 添加实时数据\r\n    addData: function(curVal) {\r\n \r\n       // 从接口获取数据并添加到数组(这是自己封装好的接口)\r\n      tv_update_TrendsSort(curVal).then(response => {\r\n        if (response.code === 200) {\r\n          this.inPerMinute.push((response.inPerMinute).toFixed(2))\r\n          this.outPerMinute.push((response.outPerMinute).toFixed(2))\r\n          this.stillPerPinute.push((response.stillPerPinute).toFixed(2))\r\n          this.minuteTime.push(this.getTime(Math.round(new Date().getTime() / 1000)))\r\n          // 重新将数组赋值给echarts选项\r\n          this.echartsOption.series[0].data = this.inPerMinute\r\n          this.echartsOption.series[1].data = this.outPerMinute\r\n          this.echartsOption.series[2].data = this.stillPerPinute\r\n          this.echartsOption.xAxis.data = this.minuteTime\r\n          this.myChart.setOption(this.echartsOption)\r\n        } else {\r\n          this.$message.error('出错了,折线图获取失败')\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n \r\n<style>\r\n \r\n#myChart{\r\n  width: 95%;\r\n  height: 400px;\r\n}\r\n</style>"],"mappings":"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"}]}