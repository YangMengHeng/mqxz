{"remainingRequest":"E:\\project\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js!E:\\project\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js!E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web-master\\src\\views\\lamp\\resources\\msg\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\project\\lamp-web-master\\src\\views\\lamp\\resources\\msg\\edit.vue","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master\\babel.config.js","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1686711135008},{"path":"E:\\project\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _toConsumableArray from \"E:/project/lamp-web-master/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport msgApi from '@/api/Msg.js';\nimport roleApi from '@/api/Role.js';\nimport userApi from '@/api/User.js';\nimport Tinymce from '@/components/Tinymce';\nimport { initMsgEnums } from '@/utils/commons.js';\nexport default {\n  name: 'MsgEdit',\n  components: {\n    Tinymce: Tinymce\n  },\n  filters: {},\n  props: {},\n  data: function data() {\n    var _this = this;\n    return {\n      allUserList: [],\n      allRoleList: [],\n      oldChooseUserIdList: [[]],\n      oldChooseRoleIdList: [[]],\n      dialog: {\n        isVisible: false\n      },\n      type: 'add',\n      msg: this.initMsg(),\n      disabled: false,\n      disabledReceiveType: false,\n      enums: {\n        MsgBizType: {},\n        MsgType: {}\n      },\n      rules: {\n        \"msgDTO.title\": [{\n          required: true,\n          message: this.$t('rules.require'),\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 255,\n          message: \"长度在 1 到 255 个字符\",\n          trigger: 'blur'\n        }],\n        \"msgDTO.content\": [{\n          required: true,\n          message: this.$t('rules.require'),\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 65535,\n          message: \"长度在 1 到 65535 个字符\",\n          trigger: 'blur'\n        }],\n        \"msgDTO.msgType\": {\n          required: true,\n          message: this.$t('rules.require'),\n          trigger: 'change'\n        },\n        \"roleCodeList\": {\n          validator: function validator(rule, value, callback) {\n            if (_this.msg.receiveType === 'role' && _this.msg.msgDTO.msgType.code !== 'PUBLICITY' && _this.msg.roleCodeList.length <= 0) {\n              callback('请选择角色');\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        },\n        \"userIdList\": {\n          validator: function validator(rule, value, callback) {\n            if (_this.msg.receiveType === 'user' && _this.msg.msgDTO.msgType.code !== 'PUBLICITY' && _this.msg.userIdList.length <= 0) {\n              callback('请选择用户');\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        },\n        \"msgDTO.handlerUrl\": {\n          min: 1,\n          max: 255,\n          message: \"长度在 1 到 255 个字符\",\n          trigger: 'blur'\n        }\n      }\n    };\n  },\n  computed: {},\n  watch: {\n    $route: function $route() {\n      if (this.$route.path === '/resources/msg/edit') {\n        this.loadMsg();\n        this.loadUserList();\n        this.loadRoleList();\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.loadMsg();\n    this.loadUserList();\n    this.loadRoleList();\n    initMsgEnums(['MsgType', 'MsgBizType'], this.enums);\n  },\n  methods: {\n    initMsg: function initMsg() {\n      return {\n        userIdList: [],\n        roleCodeList: [],\n        receiveType: 'user',\n        msgDTO: {\n          id: '',\n          bizId: '',\n          bizType: {\n            code: ''\n          },\n          msgType: {\n            code: ''\n          },\n          title: '',\n          content: '',\n          author: '',\n          handlerUrl: '',\n          handlerParams: '',\n          isSingleHandle: true\n        }\n      };\n    },\n    loadMsg: function loadMsg() {\n      var _this2 = this;\n      var type = this.$route.query.type;\n      var id = this.$route.query.id;\n      this.type = type;\n      if (type === 'view') {\n        msgApi.get(id).then(function (response) {\n          var res = response.data;\n          if (res.isSuccess) {\n            _this2.msg.msgDTO = res.data;\n            if (_this2.msg.msgDTO.bizType === null) {\n              _this2.msg.msgDTO.bizType = {\n                code: ''\n              };\n            }\n            if (_this2.msg.msgDTO.msgType === null) {\n              _this2.msg.msgDTO.msgType = {\n                code: ''\n              };\n            }\n          }\n        });\n      } else {\n        this.reset();\n      }\n    },\n    loadUserList: function loadUserList() {\n      var _this3 = this;\n      userApi.page({\n        current: 1,\n        size: 10000,\n        model: {\n          status: true\n        }\n      }).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess) {\n          if (res.data.records.length > 0) {\n            _this3.allUserList = [{\n              id: '-1',\n              name: '全选'\n            }].concat(_toConsumableArray(res.data.records));\n          }\n        }\n      });\n    },\n    loadRoleList: function loadRoleList() {\n      var _this4 = this;\n      roleApi.page({\n        current: 1,\n        size: 10000,\n        model: {\n          status: true\n        }\n      }).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess) {\n          if (res.data.records.length > 0) {\n            _this4.allRoleList = [{\n              code: '-1',\n              name: '全选'\n            }].concat(_toConsumableArray(res.data.records));\n          }\n        }\n      });\n    },\n    msgTypeChange: function msgTypeChange(select) {\n      if (select === 'PUBLICITY') {\n        this.disabledReceiveType = true;\n      } else {\n        this.disabledReceiveType = false;\n      }\n    },\n    userSelect: function userSelect(val) {\n      //保留所有值\n      var allValues = this.allUserList.map(function (item) {\n        return item.id;\n      });\n\n      // 用来储存上一次的值，可以进行对比\n      var oldVal = this.oldChooseUserIdList.length === 1 ? [] : this.oldChooseUserIdList[1];\n\n      // 若是全部选择\n      if (val.includes('-1')) {\n        this.msg.userIdList = allValues;\n      }\n\n      // 取消全部选中  上次有 当前没有 表示取消全选\n      if (oldVal.includes('-1') && !val.includes('-1')) {\n        this.msg.userIdList = [];\n      }\n\n      // 点击非全部选中  需要排除全部选中 以及 当前点击的选项\n      // 新老数据都有全部选中\n      if (oldVal.includes('-1') && val.includes('-1')) {\n        var index = val.indexOf('-1');\n        val.splice(index, 1); // 排除全选选项\n        this.msg.userIdList = val;\n      }\n\n      //全选未选 但是其他选项全部选上 则全选选上 上次和当前 都没有全选\n      if (!oldVal.includes('-1') && !val.includes('-1')) {\n        if (val.length === allValues.length - 1) {\n          this.msg.userIdList = ['-1'].concat(val);\n        }\n      }\n\n      //储存当前最后的结果 作为下次的老数据\n      this.oldChooseUserIdList[1] = this.msg.userIdList;\n    },\n    roleSelect: function roleSelect(val) {\n      //保留所有值\n      var allValues = this.allRoleList.map(function (item) {\n        return item.code;\n      });\n\n      // 用来储存上一次的值，可以进行对比\n      var oldVal = this.oldChooseRoleIdList.length === 1 ? [] : this.oldChooseRoleIdList[1];\n\n      // 若是全部选择\n      if (val.includes('-1')) {\n        this.msg.roleCodeList = allValues;\n      }\n\n      // 取消全部选中  上次有 当前没有 表示取消全选\n      if (oldVal.includes('-1') && !val.includes('-1')) {\n        this.msg.roleCodeList = [];\n      }\n\n      // 点击非全部选中  需要排除全部选中 以及 当前点击的选项\n      // 新老数据都有全部选中\n      if (oldVal.includes('-1') && val.includes('-1')) {\n        var index = val.indexOf('-1');\n        val.splice(index, 1); // 排除全选选项\n        this.msg.roleCodeList = val;\n      }\n\n      //全选未选 但是其他选项全部选上 则全选选上 上次和当前 都没有全选\n      if (!oldVal.includes('-1') && !val.includes('-1')) {\n        if (val.length === allValues.length - 1) {\n          this.msg.roleCodeList = ['-1'].concat(val);\n        }\n      }\n\n      //储存当前最后的结果 作为下次的老数据\n      this.oldChooseRoleIdList[1] = this.msg.roleCodeList;\n    },\n    reset: function reset() {\n      var _this5 = this;\n      // 先清除校验，再清除表单，不然有奇怪的bug\n      this.$refs.form.clearValidate();\n      this.$refs.form.resetFields();\n      this.msg = this.initMsg();\n      this.disabledReceiveType = false;\n\n      //这里报错\n      // this.$nextTick(() =>\n      //   this.$refs.content.setContent('')\n      // )\n\n      // 设置设置的时间短了 也报错\n      setTimeout(function () {\n        _this5.$refs.content.setContent('');\n      }, 1000);\n    },\n    submitForm: function submitForm(draft) {\n      var vm = this;\n      console.log(vm.msg);\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          vm.editSubmit(draft);\n        } else {\n          return false;\n        }\n      });\n    },\n    editSubmit: function editSubmit(draft) {\n      var vm = this;\n      if (vm.type === 'edit') {\n        vm.update();\n      } else {\n        vm.save();\n      }\n    },\n    save: function save() {\n      var vm = this;\n      vm.disabled = true;\n      msgApi.save(vm.msg).then(function (response) {\n        vm.disabled = false;\n        var res = response.data;\n        if (res.isSuccess) {\n          vm.$message({\n            message: vm.$t('tips.createSuccess'),\n            type: 'success'\n          });\n          vm.reset();\n          vm.$router.push('/resources/msg');\n        }\n      });\n    },\n    update: function update() {\n      var vm = this;\n      vm.disabled = true;\n      msgApi.update(vm.msg).then(function (response) {\n        vm.disabled = false;\n        var res = response.data;\n        if (res.isSuccess) {\n          vm.$message({\n            message: vm.$t('tips.createSuccess'),\n            type: 'success'\n          });\n          vm.reset();\n          vm.$router.push('/resources/msg');\n        }\n      });\n    }\n  }\n};",{"version":3,"names":["msgApi","roleApi","userApi","Tinymce","initMsgEnums","name","components","filters","props","data","_this","allUserList","allRoleList","oldChooseUserIdList","oldChooseRoleIdList","dialog","isVisible","type","msg","initMsg","disabled","disabledReceiveType","enums","MsgBizType","MsgType","rules","required","message","$t","trigger","min","max","validator","rule","value","callback","receiveType","msgDTO","msgType","code","roleCodeList","length","userIdList","computed","watch","$route","path","loadMsg","loadUserList","loadRoleList","mounted","methods","id","bizId","bizType","title","content","author","handlerUrl","handlerParams","isSingleHandle","_this2","query","get","then","response","res","isSuccess","reset","_this3","page","current","size","model","status","records","concat","_toConsumableArray","_this4","msgTypeChange","select","userSelect","val","allValues","map","item","oldVal","includes","index","indexOf","splice","roleSelect","_this5","$refs","form","clearValidate","resetFields","setTimeout","setContent","submitForm","draft","vm","console","log","validate","valid","editSubmit","update","save","$message","$router","push"],"sources":["src/views/lamp/resources/msg/edit.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-form :model=\"msg\" :rules=\"rules\" label-position=\"right\" label-width=\"100px\" ref=\"form\" status-icon>\n      <el-row>\n        <el-col :span=\"8\">\n          <el-form-item :label=\"$t('table.msg.title')\" prop=\"msgDTO.title\">\n            <el-input :disabled=\"type==='view'\" :maxlength=\"255\" v-model=\"msg.msgDTO.title\" />\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"8\">\n          <el-form-item :label=\"$t('table.msg.bizType')\" prop=\"msgDTO.bizType\">\n            <el-select :disabled=\"type==='view'\" clearable placeholder style=\"width:100%\" v-model=\"msg.msgDTO.bizType.code\" value>\n              <el-option :key=\"index\" :label=\"item\" :value=\"key\" v-for=\"(item, key, index) in enums.MsgBizType\" />\n            </el-select>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"8\">\n          <el-form-item :label=\"$t('table.msg.bizId')\" prop=\"msgDTO.bizId\">\n            <el-input :disabled=\"type==='view'\" :maxlength=\"255\" v-model=\"msg.msgDTO.bizId\" />\n          </el-form-item>\n        </el-col>\n      </el-row>\n      <el-row>\n        <el-col :span=\"8\">\n          <el-form-item :label=\"$t('table.msg.msgType')\" prop=\"msgDTO.msgType\">\n            <el-select :disabled=\"type==='view'\" @change=\"msgTypeChange\" placeholder style=\"width:100%\" v-model=\"msg.msgDTO.msgType.code\" value>\n              <el-option :key=\"index\" :label=\"item\" :value=\"key\" v-for=\"(item, key, index) in enums.MsgType\" />\n            </el-select>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"8\">\n          <el-form-item label=\"接收类型\" prop=\"msgDTO.receiveType\" v-show=\"type!=='view'\">\n            <el-radio-group :disabled=\"type==='view' || disabledReceiveType\" v-model=\"msg.receiveType\">\n              <el-radio-button label=\"user\">用户</el-radio-button>\n              <el-radio-button label=\"role\">角色</el-radio-button>\n            </el-radio-group>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"8\">\n          <el-form-item label=\"接收用户\" prop=\"userIdList\" v-if=\"msg.receiveType==='user'\" v-show=\"type!=='view'\">\n            <el-select :disabled=\"type==='view' || disabledReceiveType\" @change=\"userSelect\" collapse-tags multiple placeholder style=\"width:100%\" v-model=\"msg.userIdList\" value>\n              <el-option :key=\"item.id\" :label=\"item.name\" :value=\"item.id\" v-for=\"item in allUserList\" />\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"接收角色\" prop=\"roleCodeList\" v-else v-show=\"type!=='view'\">\n            <el-select :disabled=\"type==='view' || disabledReceiveType\" @change=\"roleSelect\" collapse-tags multiple placeholder style=\"width:100%\" v-model=\"msg.roleCodeList\" value>\n              <el-option :key=\"item.code\" :label=\"item.name\" :value=\"item.code\" v-for=\"item in allRoleList\" />\n            </el-select>\n          </el-form-item>\n        </el-col>\n      </el-row>\n\n      <el-row>\n        <el-col :span=\"8\">\n          <el-form-item :label=\"$t('table.msg.author')\" prop=\"msgDTO.author\">\n            <el-input :disabled=\"type==='view'\" :maxlength=\"255\" v-model=\"msg.msgDTO.author\" />\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"8\">\n          <el-form-item :label=\"$t('table.msg.handlerUrl')\" prop=\"msgDTO.handlerUrl\">\n            <el-input :disabled=\"type==='view'\" :maxlength=\"255\" v-model=\"msg.msgDTO.handlerUrl\" />\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"8\">\n          <el-form-item :label=\"$t('table.msg.isSingleHandle')\" prop=\"msgDTO.isSingleHandle\">\n            <el-radio-group :disabled=\"type==='view'\" v-model=\"msg.msgDTO.isSingleHandle\">\n              <el-radio-button :label=\"true\">{{ $t('common.yes') }}</el-radio-button>\n              <el-radio-button :label=\"false\">{{ $t('common.no') }}</el-radio-button>\n            </el-radio-group>\n          </el-form-item>\n        </el-col>\n      </el-row>\n      <el-form-item prop=\"msgDTO.content\" style=\"margin-bottom: 30px;\">\n        <Tinymce :height=\"400\" ref=\"content\" v-model=\"msg.msgDTO.content\" />\n      </el-form-item>\n    </el-form>\n    <div class=\"dialog-footer\">\n      <el-button :disabled=\"disabled\" @click=\"submitForm(false)\" plain type=\"primary\" v-show=\"type!=='view'\">发送</el-button>\n    </div>\n  </div>\n</template>\n<script>\nimport msgApi from '@/api/Msg.js'\nimport roleApi from '@/api/Role.js'\nimport userApi from '@/api/User.js'\nimport Tinymce from '@/components/Tinymce'\nimport {initMsgEnums} from '@/utils/commons.js'\n\nexport default {\n  name: 'MsgEdit',\n  components: { Tinymce },\n  filters: {\n\n  },\n  props: {\n\n  },\n  data () {\n    return {\n      allUserList: [],\n      allRoleList: [],\n      oldChooseUserIdList: [[]],\n      oldChooseRoleIdList: [[]],\n      dialog: {\n        isVisible: false\n      },\n      type: 'add',\n      msg: this.initMsg(),\n      disabled: false,\n      disabledReceiveType: false,\n      enums:{\n        MsgBizType:{},\n        MsgType:{}\n      },\n      rules: {\n        \"msgDTO.title\": [\n          { required: true, message: this.$t('rules.require'), trigger: 'blur' },\n          { min: 1, max: 255, message: \"长度在 1 到 255 个字符\", trigger: 'blur' }\n        ],\n        \"msgDTO.content\": [\n          { required: true, message: this.$t('rules.require'), trigger: 'blur' },\n          { min: 1, max: 65535, message: \"长度在 1 到 65535 个字符\", trigger: 'blur' }\n        ],\n        \"msgDTO.msgType\": { required: true, message: this.$t('rules.require'), trigger: 'change' },\n        \"roleCodeList\": {\n          validator: (rule, value, callback) => {\n            if (this.msg.receiveType === 'role' && this.msg.msgDTO.msgType.code !== 'PUBLICITY' && this.msg.roleCodeList.length <= 0) {\n              callback('请选择角色')\n            } else {\n              callback()\n            }\n          }, trigger: 'blur'\n        },\n        \"userIdList\": {\n          validator: (rule, value, callback) => {\n            if (this.msg.receiveType === 'user' && this.msg.msgDTO.msgType.code !== 'PUBLICITY' && this.msg.userIdList.length <= 0) {\n              callback('请选择用户')\n            } else {\n              callback()\n            }\n          }, trigger: 'blur'\n        },\n        \"msgDTO.handlerUrl\": { min: 1, max: 255, message: \"长度在 1 到 255 个字符\", trigger: 'blur' }\n      }\n    }\n  },\n  computed: {\n\n  },\n  watch: {\n    $route () {\n      if (this.$route.path === '/resources/msg/edit') {\n        this.loadMsg()\n        this.loadUserList()\n        this.loadRoleList()\n      }\n    }\n  },\n  mounted () {\n    this.loadMsg()\n    this.loadUserList()\n    this.loadRoleList()\n    initMsgEnums(['MsgType', 'MsgBizType'], this.enums)\n  },\n  methods: {\n    initMsg () {\n      return {\n        userIdList: [],\n        roleCodeList: [],\n        receiveType: 'user',\n        msgDTO: {\n          id: '',\n          bizId: '',\n          bizType: {\n            code: ''\n          },\n          msgType: {\n            code: ''\n          },\n          title: '',\n          content: '',\n          author: '',\n          handlerUrl: '',\n          handlerParams: '',\n          isSingleHandle: true\n        }\n      }\n    },\n    loadMsg () {\n      const type = this.$route.query.type\n      const id = this.$route.query.id\n      this.type = type\n      if (type === 'view') {\n        msgApi.get(id)\n          .then((response) => {\n            const res = response.data\n            if (res.isSuccess) {\n              this.msg.msgDTO = res.data\n              if (this.msg.msgDTO.bizType === null) {\n                this.msg.msgDTO.bizType = { code: '' }\n              }\n              if (this.msg.msgDTO.msgType === null) {\n                this.msg.msgDTO.msgType = { code: '' }\n              }\n            }\n          })\n      } else {\n        this.reset()\n      }\n    },\n    loadUserList () {\n      userApi.page({ current: 1, size: 10000, model: {status: true}  })\n        .then((response) => {\n          const res = response.data\n          if (res.isSuccess) {\n            if (res.data.records.length > 0) {\n              this.allUserList = [...[{ id: '-1', name: '全选' }], ...res.data.records]\n            }\n          }\n        })\n    },\n    loadRoleList () {\n      roleApi.page({ current: 1, size: 10000, model: {status: true}  })\n        .then((response) => {\n          const res = response.data\n          if (res.isSuccess) {\n            if (res.data.records.length > 0) {\n              this.allRoleList = [...[{ code: '-1', name: '全选' }], ...res.data.records]\n            }\n\n          }\n        })\n    },\n    msgTypeChange (select) {\n      if (select === 'PUBLICITY') {\n        this.disabledReceiveType = true\n      } else {\n        this.disabledReceiveType = false\n      }\n    },\n    userSelect (val) {\n      //保留所有值\n      let allValues = this.allUserList.map(item => item.id)\n\n      // 用来储存上一次的值，可以进行对比\n      const oldVal = this.oldChooseUserIdList.length === 1 ? [] : this.oldChooseUserIdList[1]\n\n      // 若是全部选择\n      if (val.includes('-1')) {\n        this.msg.userIdList = allValues\n      }\n\n      // 取消全部选中  上次有 当前没有 表示取消全选\n      if (oldVal.includes('-1') && !val.includes('-1')) {\n        this.msg.userIdList = []\n      }\n\n      // 点击非全部选中  需要排除全部选中 以及 当前点击的选项\n      // 新老数据都有全部选中\n      if (oldVal.includes('-1') && val.includes('-1')) {\n        const index = val.indexOf('-1')\n        val.splice(index, 1) // 排除全选选项\n        this.msg.userIdList = val\n      }\n\n      //全选未选 但是其他选项全部选上 则全选选上 上次和当前 都没有全选\n      if (!oldVal.includes('-1') && !val.includes('-1')) {\n        if (val.length === allValues.length - 1) {\n          this.msg.userIdList = ['-1'].concat(val)\n        }\n      }\n\n      //储存当前最后的结果 作为下次的老数据\n      this.oldChooseUserIdList[1] = this.msg.userIdList\n    },\n    roleSelect (val) {\n      //保留所有值\n      let allValues = this.allRoleList.map(item => item.code)\n\n      // 用来储存上一次的值，可以进行对比\n      const oldVal = this.oldChooseRoleIdList.length === 1 ? [] : this.oldChooseRoleIdList[1]\n\n      // 若是全部选择\n      if (val.includes('-1')) {\n        this.msg.roleCodeList = allValues\n      }\n\n      // 取消全部选中  上次有 当前没有 表示取消全选\n      if (oldVal.includes('-1') && !val.includes('-1')) {\n        this.msg.roleCodeList = []\n      }\n\n      // 点击非全部选中  需要排除全部选中 以及 当前点击的选项\n      // 新老数据都有全部选中\n      if (oldVal.includes('-1') && val.includes('-1')) {\n        const index = val.indexOf('-1')\n        val.splice(index, 1) // 排除全选选项\n        this.msg.roleCodeList = val\n      }\n\n      //全选未选 但是其他选项全部选上 则全选选上 上次和当前 都没有全选\n      if (!oldVal.includes('-1') && !val.includes('-1')) {\n        if (val.length === allValues.length - 1) {\n          this.msg.roleCodeList = ['-1'].concat(val)\n        }\n      }\n\n      //储存当前最后的结果 作为下次的老数据\n      this.oldChooseRoleIdList[1] = this.msg.roleCodeList\n    },\n    reset () {\n      // 先清除校验，再清除表单，不然有奇怪的bug\n      this.$refs.form.clearValidate()\n      this.$refs.form.resetFields()\n      this.msg = this.initMsg()\n      this.disabledReceiveType = false;\n\n      //这里报错\n      // this.$nextTick(() =>\n      //   this.$refs.content.setContent('')\n      // )\n\n      // 设置设置的时间短了 也报错\n      setTimeout(() => {\n        this.$refs.content.setContent('')\n      }, 1000)\n    },\n    submitForm (draft) {\n      const vm = this\n      console.log(vm.msg)\n\n      this.$refs.form.validate((valid) => {\n        if (valid) {\n          vm.editSubmit(draft)\n        } else {\n          return false\n        }\n      })\n    },\n    editSubmit (draft) {\n      const vm = this\n      if (vm.type === 'edit') {\n        vm.update()\n      } else {\n        vm.save()\n      }\n    },\n    save () {\n      const vm = this\n      vm.disabled = true\n      msgApi.save(vm.msg)\n        .then((response) => {\n          vm.disabled = false\n          const res = response.data\n          if (res.isSuccess) {\n            vm.$message({\n              message: vm.$t('tips.createSuccess'),\n              type: 'success'\n            })\n            vm.reset()\n            vm.$router.push('/resources/msg')\n          }\n        })\n    },\n    update () {\n      const vm = this\n      vm.disabled = true\n      msgApi.update(vm.msg)\n        .then((response) => {\n          vm.disabled = false\n          const res = response.data\n          if (res.isSuccess) {\n            vm.$message({\n              message: vm.$t('tips.createSuccess'),\n              type: 'success'\n            })\n            vm.reset()\n            vm.$router.push('/resources/msg')\n          }\n        })\n    }\n\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n</style>\n"],"mappings":"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"}]}