{"remainingRequest":"E:\\项目\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js!E:\\项目\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\项目\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\项目\\lamp-web-master\\src\\views\\lamp\\system\\role\\userRole.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\项目\\lamp-web-master\\src\\views\\lamp\\system\\role\\userRole.vue","mtime":1679380940000},{"path":"E:\\项目\\lamp-web-master\\babel.config.js","mtime":1679380940000},{"path":"E:\\项目\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\项目\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\项目\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\项目\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"E:/\\u9879\\u76EE/lamp-web-master/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.function.name\");\nvar _Role = _interopRequireDefault(require(\"@/api/Role.js\"));\nvar _User = _interopRequireDefault(require(\"@/api/User.js\"));\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'UserRoleEdit',\n  components: {},\n  props: {\n    dialogVisible: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      userRole: this.initUserRole(),\n      screenWidth: 0,\n      width: this.initWidth(),\n      userList: [],\n      userIdList: [],\n      disabled: false,\n      rules: {},\n      renderFunc: function renderFunc(h, option) {\n        // return <span title='option.account - {option.name}'>{option.account} - {option.name}</span>\n        return h(\"span\", {\n          \"attrs\": {\n            \"title\": option.account + \" - \" + option.name\n          }\n        }, [option.account, \" - \", option.name]);\n      }\n    };\n  },\n  computed: {\n    isVisible: {\n      get: function get() {\n        return this.dialogVisible;\n      },\n      set: function set() {\n        this.close();\n        this.reset();\n      }\n    },\n    title: function title() {\n      return '分配角色成员';\n    }\n  },\n  watch: {},\n  mounted: function mounted() {\n    var _this = this;\n    this.initUserList();\n    window.onresize = function () {\n      return function () {\n        _this.width = _this.initWidth();\n      }();\n    };\n  },\n  methods: {\n    initUserRole: function initUserRole() {\n      return {\n        roleId: '',\n        userIdList: []\n      };\n    },\n    initWidth: function initWidth() {\n      this.screenWidth = document.body.clientWidth;\n      if (this.screenWidth < 991) {\n        return '90%';\n      } else if (this.screenWidth < 1400) {\n        return '45%';\n      } else {\n        return '800px';\n      }\n    },\n    initUserList: function initUserList() {\n      var _this2 = this;\n      _User.default.page({\n        current: 1,\n        size: 100000,\n        model: {\n          state: true\n        }\n      }).then(function (response) {\n        var res = response.data;\n        _this2.userList = res.data.records;\n      }).catch(function () {\n        _this2.$message({\n          message: _this2.$t('tips.getDataFail'),\n          type: 'error'\n        });\n      });\n    },\n    setUserRole: function setUserRole(val) {\n      var vm = this;\n      vm.userRole.roleId = val.id;\n      // vm.disabled = val.readonly\n      _Role.default.findUserIdByRoleId(val.id).then(function (response) {\n        var res = response.data;\n        vm.userRole.userIdList = res.data;\n      });\n    },\n    close: function close() {\n      this.$emit('close');\n    },\n    reset: function reset() {\n      // 先清除校验，再清除表单，不然有奇怪的bug\n      this.$refs.form.clearValidate();\n      this.$refs.form.resetFields();\n      this.userRole = this.initUserRole();\n      this.disabled = false;\n    },\n    submitForm: function submitForm() {\n      var vm = this;\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          vm.editSubmit();\n        } else {\n          return false;\n        }\n      });\n    },\n    editSubmit: function editSubmit() {\n      var vm = this;\n      console.log(this.userRole);\n      _Role.default.saveUserRole(this.userRole).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess) {\n          vm.isVisible = false;\n          vm.$message({\n            message: vm.$t('tips.createSuccess'),\n            type: 'success'\n          });\n          vm.$emit('success');\n        }\n      });\n    },\n    filterMethod: function filterMethod(query, item) {\n      return item.name.indexOf(query) > -1 || item.account.indexOf(query) > -1;\n    }\n  }\n};\nexports.default = _default;",null]}