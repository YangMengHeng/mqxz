{"remainingRequest":"E:\\project\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js!E:\\project\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js!E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web-master\\src\\views\\lamp\\system\\role\\roleAuthority.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\project\\lamp-web-master\\src\\views\\lamp\\system\\role\\roleAuthority.vue","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master\\babel.config.js","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1686711135008},{"path":"E:\\project\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport _toConsumableArray from \"E:/project/lamp-web-master/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es6.set\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport roleApi from \"@/api/Role.js\";\nimport menuApi from \"@/api/Menu.js\";\nimport resourceApi from \"@/api/Resource.js\";\nexport default {\n  name: \"RoleAuthorityEdit\",\n  components: {},\n  props: {\n    dialogVisible: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      roleAuthority: this.initRoleAuthority(),\n      screenWidth: 0,\n      width: this.initWidth(),\n      menuTree: [],\n      resourceList: [],\n      //回显的数据\n      echoResourceIdList: [],\n      rules: {},\n      tableKey: 0,\n      loading: false,\n      tableData: {\n        total: 0\n      },\n      selection: [],\n      disabled: false,\n      isIndeterminate: false,\n      checkedMenu: false\n    };\n  },\n  computed: {\n    isVisible: {\n      get: function get() {\n        return this.dialogVisible;\n      },\n      set: function set() {\n        this.close();\n        this.reset();\n      }\n    },\n    title: function title() {\n      return \"配置菜单资源\";\n    }\n  },\n  watch: {},\n  mounted: function mounted() {\n    var _this = this;\n    this.initMenuTree();\n    window.onresize = function () {\n      return function () {\n        _this.width = _this.initWidth();\n      }();\n    };\n  },\n  methods: {\n    allMenuIdList: function allMenuIdList() {\n      var menuIdList = [];\n      this.getMenuIdList(this.menuTree, menuIdList);\n      return menuIdList;\n    },\n    getMenuIdList: function getMenuIdList(menuList, menuIdList) {\n      var _this2 = this;\n      if (menuList) {\n        menuList.forEach(function (item) {\n          menuIdList.push(item.id);\n          if (item.children && item.children.length > 0) {\n            _this2.getMenuIdList(item.children, menuIdList);\n          }\n        });\n      }\n    },\n    checkedAll: function checkedAll() {\n      if (this.checkedMenu) {\n        //全选\n        this.$refs.menuTree.setCheckedKeys(this.allMenuIdList());\n        this.isIndeterminate = false;\n      } else {\n        //取消选中\n        this.$refs.menuTree.setCheckedKeys([]);\n        this.isIndeterminate = false;\n      }\n    },\n    nodeClick: function nodeClick(data) {\n      var vm = this;\n      vm.loading = true;\n      resourceApi.page({\n        current: 1,\n        size: 10000,\n        model: {\n          menuId: data.id\n        }\n      }).then(function (response) {\n        var res = response.data;\n        vm.tableData = res.data;\n        vm.loading = false;\n        vm.displayTable();\n      });\n    },\n    displayTable: function displayTable() {\n      var vm = this;\n      vm.tableData.records.forEach(function (item) {\n        vm.roleAuthority.resourceIdList.forEach(function (resourceId) {\n          if (item.id === resourceId) {\n            vm.$refs.table.toggleRowSelection(item, true);\n          }\n        });\n      });\n    },\n    onAllSelect: function onAllSelect(selection) {\n      this.onSelect(selection);\n    },\n    onSelect: function onSelect(selection, row) {\n      var _this3 = this;\n      this.mergeResourceIdList(selection, row);\n      //this.roleAuthority.resourceIdList = selection.map(item => item.id);\n      this.selection = selection;\n\n      // 根据右侧选中的资源，强制勾选左侧的 树状层级菜单\n      var old = this.$refs.menuTree.getCheckedKeys();\n      var must = selection.map(function (item) {\n        return item.menuId;\n      });\n      var newSelected = Array.from(new Set([].concat(_toConsumableArray(old), _toConsumableArray(must))));\n      this.$refs.menuTree.setCheckedKeys(newSelected);\n      newSelected.forEach(function (item) {\n        _this3.selectedParent(item);\n      });\n    },\n    mergeResourceIdList: function mergeResourceIdList(selection, row) {\n      // true就是选中，0或者false是取消选中\n      var selected = true;\n      if (row) {\n        selected = selection.length && selection.indexOf(row) !== -1;\n      } else {\n        selected = selection.length > 0;\n      }\n\n      //本次选中的\n      var curResourceIdList = selection.map(function (item) {\n        return item.id;\n      });\n      var ridList = this.echoResourceIdList;\n      if (!selected && row) {\n        var index = ridList.findIndex(function (item) {\n          if (item == row.id) {\n            return true;\n          }\n        });\n        ridList.splice(index, 1);\n      }\n\n      // 本次选中的 + 回显的 然后去重\n      this.roleAuthority.resourceIdList = _toConsumableArray(new Set([].concat(_toConsumableArray(curResourceIdList), _toConsumableArray(ridList))));\n    },\n    initMenuTree: function initMenuTree() {\n      var _this4 = this;\n      menuApi.allTree().then(function (response) {\n        var res = response.data;\n        _this4.menuTree = res.data;\n      });\n    },\n    initRoleAuthority: function initRoleAuthority() {\n      return {\n        roleId: \"\",\n        menuIdList: [],\n        resourceIdList: []\n      };\n    },\n    initWidth: function initWidth() {\n      this.screenWidth = document.body.clientWidth;\n      if (this.screenWidth < 991) {\n        return \"90%\";\n      } else if (this.screenWidth < 1400) {\n        return \"45%\";\n      } else {\n        return \"1000px\";\n      }\n    },\n    setRoleAuthority: function setRoleAuthority(val) {\n      var vm = this;\n      vm.roleAuthority.roleId = val.id;\n      // vm.disabled = val.readonly\n      // 回显\n      roleApi.findAuthorityIdByRoleId(val.id).then(function (response) {\n        var res = response.data;\n        vm.roleAuthority.menuIdList = res.data.menuIdList;\n        vm.roleAuthority.resourceIdList = res.data.resourceIdList;\n        vm.echoResourceIdList = res.data.resourceIdList;\n        vm.$refs.menuTree.setCheckedKeys(res.data.menuIdList);\n        res.data.menuIdList.forEach(function (item) {\n          vm.selectedParent(item);\n        });\n      });\n    },\n    close: function close() {\n      this.$emit(\"close\");\n    },\n    reset: function reset() {\n      // 先清除校验，再清除表单，不然有奇怪的bug\n      this.$refs.form.clearValidate();\n      this.$refs.form.resetFields();\n      this.roleAuthority = this.initRoleAuthority();\n      this.$refs.menuTree.setCheckedKeys([]);\n      this.$refs.table.clearSelection();\n    },\n    submitForm: function submitForm() {\n      var vm = this;\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          vm.editSubmit();\n        } else {\n          return false;\n        }\n      });\n    },\n    editSubmit: function editSubmit() {\n      var vm = this;\n      this.roleAuthority.menuIdList = vm.$refs.menuTree.getHalfCheckedKeys().concat(vm.$refs.menuTree.getCheckedKeys());\n\n      //勾选时， 实时计算出来\n      //this.roleAuthority.resourceIdList = vm.selection.map(item => item.id);\n\n      roleApi.saveRoleAuthority(this.roleAuthority).then(function (response) {\n        var res = response.data;\n        if (res.isSuccess) {\n          vm.isVisible = false;\n          vm.$message({\n            message: vm.$t(\"tips.createSuccess\"),\n            type: \"success\"\n          });\n          vm.$emit(\"success\");\n        }\n      });\n    },\n    checkMenu: function checkMenu(data, node) {\n      if (node.checkedKeys.length === 0) {\n        //取消\n        this.checkedMenu = false;\n        this.isIndeterminate = false;\n      } else if (node.checkedKeys.length === this.allMenuIdList().length) {\n        //全选\n        this.checkedMenu = true;\n        this.isIndeterminate = false;\n      } else {\n        // 中立\n        this.checkedMenu = false;\n        this.isIndeterminate = true;\n      }\n\n      // 用于：父子节点严格互不关联时，父节点勾选变化时通知子节点同步变化，实现单向关联。\n      var selected = node.checkedKeys.indexOf(data.id); // -1未选中\n      // 选中\n      if (selected !== -1) {\n        // 子节点只要被选中父节点就被选中\n        this.selectedParent(data);\n        // 统一处理子节点为相同的勾选状态\n        this.uniteChildSame(data, true);\n      } else {\n        // 未选中 处理子节点全部未选中\n        if (data.children && data.children.length !== 0) {\n          this.uniteChildSame(data, false);\n        }\n      }\n    },\n    // 统一处理子节点为相同的勾选状态\n    uniteChildSame: function uniteChildSame(data, isSelected) {\n      this.$refs.menuTree.setChecked(data.id, isSelected);\n      if (data.children) {\n        for (var i = 0; i < data.children.length; i++) {\n          this.uniteChildSame(data.children[i], isSelected);\n        }\n      }\n    },\n    // 统一处理父节点为选中\n    selectedParent: function selectedParent(data) {\n      var currentNode = this.$refs.menuTree.getNode(data);\n      if (currentNode.parent.key !== undefined) {\n        this.$refs.menuTree.setChecked(currentNode.parent, true);\n        this.selectedParent(currentNode.parent);\n      }\n    }\n  }\n};",{"version":3,"names":["roleApi","menuApi","resourceApi","name","components","props","dialogVisible","type","Boolean","default","data","roleAuthority","initRoleAuthority","screenWidth","width","initWidth","menuTree","resourceList","echoResourceIdList","rules","tableKey","loading","tableData","total","selection","disabled","isIndeterminate","checkedMenu","computed","isVisible","get","set","close","reset","title","watch","mounted","_this","initMenuTree","window","onresize","methods","allMenuIdList","menuIdList","getMenuIdList","menuList","_this2","forEach","item","push","id","children","length","checkedAll","$refs","setCheckedKeys","nodeClick","vm","page","current","size","model","menuId","then","response","res","displayTable","records","resourceIdList","resourceId","table","toggleRowSelection","onAllSelect","onSelect","row","_this3","mergeResourceIdList","old","getCheckedKeys","must","map","newSelected","Array","from","Set","concat","_toConsumableArray","selectedParent","selected","indexOf","curResourceIdList","ridList","index","findIndex","splice","_this4","allTree","roleId","document","body","clientWidth","setRoleAuthority","val","findAuthorityIdByRoleId","$emit","form","clearValidate","resetFields","clearSelection","submitForm","validate","valid","editSubmit","getHalfCheckedKeys","saveRoleAuthority","isSuccess","$message","message","$t","checkMenu","node","checkedKeys","uniteChildSame","isSelected","setChecked","i","currentNode","getNode","parent","key","undefined"],"sources":["src/views/lamp/system/role/roleAuthority.vue"],"sourcesContent":["<template>\n  <el-dialog\n    :close-on-click-modal=\"false\"\n    :title=\"title\"\n    :visible.sync=\"isVisible\"\n    :width=\"width\"\n    top=\"50px\"\n  >\n    <el-form\n      :model=\"roleAuthority\"\n      :rules=\"rules\"\n      label-position=\"top\"\n      label-width=\"100px\"\n      ref=\"form\"\n    >\n      <el-scrollbar style=\"height:800px\">\n        <el-row :gutter=\"12\">\n          <el-col :span=\"8\">\n            <el-card class=\"box-card\">\n              <el-form-item label=\"菜单\" prop=\"menuIdList\">\n                <div align=\"left\" style=\"margin-left:24px;\">\n                  <el-checkbox\n                    :indeterminate=\"isIndeterminate\"\n                    @change=\"checkedAll\"\n                    v-model=\"checkedMenu\"\n                  />\n                  全选/反选\n                </div>\n                <el-tree\n                  :check-strictly=\"true\"\n                  :data=\"menuTree\"\n                  :default-checked-keys=\"roleAuthority.menuIdList\"\n                  :default-expanded-keys=\"roleAuthority.menuIdList\"\n                  :disabled=\"disabled\"\n                  :expand-on-click-node=\"false\"\n                  @check=\"checkMenu\"\n                  @node-click=\"nodeClick\"\n                  default-expand-all\n                  highlight-current\n                  node-key=\"id\"\n                  ref=\"menuTree\"\n                  show-checkbox\n                />\n              </el-form-item>\n            </el-card>\n          </el-col>\n          <el-col :span=\"16\">\n            <el-card class=\"box-card\">\n              <el-form-item label=\"资源\" prop=\"resourceIdList\">\n                <el-table\n                  :data=\"tableData.records\"\n                  :key=\"tableKey\"\n                  @select=\"onSelect\"\n                  @select-all=\"onAllSelect\"\n                  border\n                  fit\n                  ref=\"table\"\n                  row-key=\"id\"\n                  style=\"width: 100%;\"\n                  v-loading=\"loading\"\n                >\n                  <el-table-column\n                    :reserve-selection=\"true\"\n                    align=\"center\"\n                    type=\"selection\"\n                    width=\"40px\"\n                  />\n                  <el-table-column\n                    :label=\"$t('table.resource.code')\"\n                    :show-overflow-tooltip=\"true\"\n                    align=\"center\"\n                    prop=\"code\"\n                  >\n                    <template slot-scope=\"scope\">\n                      <span>{{ scope.row.code }}</span>\n                    </template>\n                  </el-table-column>\n                  <el-table-column\n                    :label=\"$t('table.resource.name')\"\n                    :show-overflow-tooltip=\"true\"\n                    align=\"center\"\n                    prop=\"name\"\n                  >\n                    <template slot-scope=\"scope\">\n                      <span>{{ scope.row.name }}</span>\n                    </template>\n                  </el-table-column>\n                </el-table>\n              </el-form-item>\n            </el-card>\n          </el-col>\n        </el-row>\n      </el-scrollbar>\n    </el-form>\n    <div class=\"dialog-footer\" slot=\"footer\">\n      <el-button @click=\"isVisible = false\" plain type=\"warning\">{{\n        $t(\"common.cancel\")\n        }}\n      </el-button>\n      <el-button\n        :disabled=\"disabled\"\n        @click=\"submitForm\"\n        plain\n        type=\"primary\"\n      >{{ $t(\"common.confirm\") }}\n      </el-button\n      >\n    </div>\n  </el-dialog>\n</template>\n<script>\n  import roleApi from \"@/api/Role.js\";\n  import menuApi from \"@/api/Menu.js\";\n  import resourceApi from \"@/api/Resource.js\";\n\n  export default {\n    name: \"RoleAuthorityEdit\",\n    components: {},\n    props: {\n      dialogVisible: {\n        type: Boolean,\n        default: false\n      }\n    },\n    data() {\n      return {\n        roleAuthority: this.initRoleAuthority(),\n        screenWidth: 0,\n        width: this.initWidth(),\n        menuTree: [],\n        resourceList: [],\n        //回显的数据\n        echoResourceIdList: [],\n        rules: {},\n        tableKey: 0,\n        loading: false,\n        tableData: {\n          total: 0\n        },\n        selection: [],\n        disabled: false,\n        isIndeterminate: false,\n        checkedMenu: false\n      };\n    },\n    computed: {\n      isVisible: {\n        get() {\n          return this.dialogVisible;\n        },\n        set() {\n          this.close();\n          this.reset();\n        }\n      },\n      title() {\n        return \"配置菜单资源\";\n      }\n    },\n    watch: {},\n    mounted() {\n      this.initMenuTree();\n      window.onresize = () => {\n        return (() => {\n          this.width = this.initWidth();\n        })();\n      };\n    },\n    methods: {\n      allMenuIdList() {\n        const menuIdList = [];\n        this.getMenuIdList(this.menuTree, menuIdList);\n        return menuIdList;\n      },\n      getMenuIdList(menuList, menuIdList) {\n        if (menuList) {\n          menuList.forEach(item => {\n            menuIdList.push(item.id);\n            if (item.children && item.children.length > 0) {\n              this.getMenuIdList(item.children, menuIdList);\n            }\n          });\n        }\n      },\n      checkedAll() {\n        if (this.checkedMenu) {\n          //全选\n          this.$refs.menuTree.setCheckedKeys(this.allMenuIdList());\n          this.isIndeterminate = false;\n        } else {\n          //取消选中\n          this.$refs.menuTree.setCheckedKeys([]);\n          this.isIndeterminate = false;\n        }\n      },\n      nodeClick(data) {\n        const vm = this;\n        vm.loading = true;\n\n        resourceApi\n          .page({\n            current: 1, size: 10000,\n            model: {menuId: data.id}\n          })\n          .then(response => {\n            const res = response.data;\n            vm.tableData = res.data;\n            vm.loading = false;\n            vm.displayTable();\n          });\n      },\n      displayTable() {\n        const vm = this;\n        vm.tableData.records.forEach(item => {\n          vm.roleAuthority.resourceIdList.forEach(resourceId => {\n            if (item.id === resourceId) {\n              vm.$refs.table.toggleRowSelection(item, true);\n            }\n          });\n        });\n      },\n      onAllSelect(selection) {\n        this.onSelect(selection);\n      },\n      onSelect(selection, row) {\n        this.mergeResourceIdList(selection, row);\n        //this.roleAuthority.resourceIdList = selection.map(item => item.id);\n        this.selection = selection;\n\n        // 根据右侧选中的资源，强制勾选左侧的 树状层级菜单\n        const old = this.$refs.menuTree.getCheckedKeys();\n        const must = selection.map(item => item.menuId);\n        const newSelected = Array.from(new Set([...old, ...must]));\n        this.$refs.menuTree.setCheckedKeys(newSelected);\n        newSelected.forEach(item => {\n          this.selectedParent(item);\n        });\n      },\n      mergeResourceIdList(selection, row) {\n        // true就是选中，0或者false是取消选中\n        let selected = true;\n        if (row) {\n          selected = selection.length && selection.indexOf(row) !== -1;\n        } else {\n          selected = selection.length > 0;\n        }\n\n        //本次选中的\n        const curResourceIdList = selection.map(item => item.id);\n\n        const ridList = this.echoResourceIdList;\n        if (!selected && row) {\n          var index = ridList.findIndex(item => {\n            if (item == row.id) {\n              return true;\n            }\n          });\n          ridList.splice(index, 1);\n        }\n\n        // 本次选中的 + 回显的 然后去重\n        this.roleAuthority.resourceIdList = [\n          ...new Set([...curResourceIdList, ...ridList])\n        ];\n      },\n\n      initMenuTree() {\n        menuApi.allTree().then(response => {\n          const res = response.data;\n          this.menuTree = res.data;\n        });\n      },\n      initRoleAuthority() {\n        return {\n          roleId: \"\",\n          menuIdList: [],\n          resourceIdList: []\n        };\n      },\n      initWidth() {\n        this.screenWidth = document.body.clientWidth;\n        if (this.screenWidth < 991) {\n          return \"90%\";\n        } else if (this.screenWidth < 1400) {\n          return \"45%\";\n        } else {\n          return \"1000px\";\n        }\n      },\n      setRoleAuthority(val) {\n        const vm = this;\n        vm.roleAuthority.roleId = val.id;\n        // vm.disabled = val.readonly\n        // 回显\n        roleApi.findAuthorityIdByRoleId(val.id).then(response => {\n          const res = response.data;\n          vm.roleAuthority.menuIdList = res.data.menuIdList;\n          vm.roleAuthority.resourceIdList = res.data.resourceIdList;\n          vm.echoResourceIdList = res.data.resourceIdList;\n          vm.$refs.menuTree.setCheckedKeys(res.data.menuIdList);\n          res.data.menuIdList.forEach(item => {\n            vm.selectedParent(item);\n          });\n        });\n      },\n      close() {\n        this.$emit(\"close\");\n      },\n      reset() {\n        // 先清除校验，再清除表单，不然有奇怪的bug\n        this.$refs.form.clearValidate();\n        this.$refs.form.resetFields();\n        this.roleAuthority = this.initRoleAuthority();\n        this.$refs.menuTree.setCheckedKeys([]);\n        this.$refs.table.clearSelection();\n      },\n      submitForm() {\n        const vm = this;\n        this.$refs.form.validate(valid => {\n          if (valid) {\n            vm.editSubmit();\n          } else {\n            return false;\n          }\n        });\n      },\n      editSubmit() {\n        const vm = this;\n\n        this.roleAuthority.menuIdList = vm.$refs.menuTree\n          .getHalfCheckedKeys()\n          .concat(vm.$refs.menuTree.getCheckedKeys());\n\n        //勾选时， 实时计算出来\n        //this.roleAuthority.resourceIdList = vm.selection.map(item => item.id);\n\n        roleApi.saveRoleAuthority(this.roleAuthority).then(response => {\n          const res = response.data;\n          if (res.isSuccess) {\n            vm.isVisible = false;\n            vm.$message({\n              message: vm.$t(\"tips.createSuccess\"),\n              type: \"success\"\n            });\n            vm.$emit(\"success\");\n          }\n        });\n      },\n      checkMenu(data, node) {\n        if (node.checkedKeys.length === 0) {\n          //取消\n          this.checkedMenu = false;\n          this.isIndeterminate = false;\n        } else if (node.checkedKeys.length === this.allMenuIdList().length) {\n          //全选\n          this.checkedMenu = true;\n          this.isIndeterminate = false;\n        } else {\n          // 中立\n          this.checkedMenu = false;\n          this.isIndeterminate = true;\n        }\n\n        // 用于：父子节点严格互不关联时，父节点勾选变化时通知子节点同步变化，实现单向关联。\n        let selected = node.checkedKeys.indexOf(data.id); // -1未选中\n        // 选中\n        if (selected !== -1) {\n          // 子节点只要被选中父节点就被选中\n          this.selectedParent(data);\n          // 统一处理子节点为相同的勾选状态\n          this.uniteChildSame(data, true);\n        } else {\n          // 未选中 处理子节点全部未选中\n          if (data.children && data.children.length !== 0) {\n            this.uniteChildSame(data, false);\n          }\n        }\n      },\n      // 统一处理子节点为相同的勾选状态\n      uniteChildSame(data, isSelected) {\n        this.$refs.menuTree.setChecked(data.id, isSelected);\n        if (data.children) {\n          for (let i = 0; i < data.children.length; i++) {\n            this.uniteChildSame(data.children[i], isSelected);\n          }\n        }\n      },\n      // 统一处理父节点为选中\n      selectedParent(data) {\n        let currentNode = this.$refs.menuTree.getNode(data);\n        if (currentNode.parent.key !== undefined) {\n          this.$refs.menuTree.setChecked(currentNode.parent, true);\n          this.selectedParent(currentNode.parent);\n        }\n      }\n    }\n  };\n</script>\n<style lang=\"scss\" scoped></style>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+GA,OAAAA,OAAA;AACA,OAAAC,OAAA;AACA,OAAAC,WAAA;AAEA;EACAC,IAAA;EACAC,UAAA;EACAC,KAAA;IACAC,aAAA;MACAC,IAAA,EAAAC,OAAA;MACAC,OAAA;IACA;EACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,aAAA,OAAAC,iBAAA;MACAC,WAAA;MACAC,KAAA,OAAAC,SAAA;MACAC,QAAA;MACAC,YAAA;MACA;MACAC,kBAAA;MACAC,KAAA;MACAC,QAAA;MACAC,OAAA;MACAC,SAAA;QACAC,KAAA;MACA;MACAC,SAAA;MACAC,QAAA;MACAC,eAAA;MACAC,WAAA;IACA;EACA;EACAC,QAAA;IACAC,SAAA;MACAC,GAAA,WAAAA,IAAA;QACA,YAAAxB,aAAA;MACA;MACAyB,GAAA,WAAAA,IAAA;QACA,KAAAC,KAAA;QACA,KAAAC,KAAA;MACA;IACA;IACAC,KAAA,WAAAA,MAAA;MACA;IACA;EACA;EACAC,KAAA;EACAC,OAAA,WAAAA,QAAA;IAAA,IAAAC,KAAA;IACA,KAAAC,YAAA;IACAC,MAAA,CAAAC,QAAA;MACA;QACAH,KAAA,CAAAvB,KAAA,GAAAuB,KAAA,CAAAtB,SAAA;MACA;IACA;EACA;EACA0B,OAAA;IACAC,aAAA,WAAAA,cAAA;MACA,IAAAC,UAAA;MACA,KAAAC,aAAA,MAAA5B,QAAA,EAAA2B,UAAA;MACA,OAAAA,UAAA;IACA;IACAC,aAAA,WAAAA,cAAAC,QAAA,EAAAF,UAAA;MAAA,IAAAG,MAAA;MACA,IAAAD,QAAA;QACAA,QAAA,CAAAE,OAAA,WAAAC,IAAA;UACAL,UAAA,CAAAM,IAAA,CAAAD,IAAA,CAAAE,EAAA;UACA,IAAAF,IAAA,CAAAG,QAAA,IAAAH,IAAA,CAAAG,QAAA,CAAAC,MAAA;YACAN,MAAA,CAAAF,aAAA,CAAAI,IAAA,CAAAG,QAAA,EAAAR,UAAA;UACA;QACA;MACA;IACA;IACAU,UAAA,WAAAA,WAAA;MACA,SAAA1B,WAAA;QACA;QACA,KAAA2B,KAAA,CAAAtC,QAAA,CAAAuC,cAAA,MAAAb,aAAA;QACA,KAAAhB,eAAA;MACA;QACA;QACA,KAAA4B,KAAA,CAAAtC,QAAA,CAAAuC,cAAA;QACA,KAAA7B,eAAA;MACA;IACA;IACA8B,SAAA,WAAAA,UAAA9C,IAAA;MACA,IAAA+C,EAAA;MACAA,EAAA,CAAApC,OAAA;MAEAnB,WAAA,CACAwD,IAAA;QACAC,OAAA;QAAAC,IAAA;QACAC,KAAA;UAAAC,MAAA,EAAApD,IAAA,CAAAwC;QAAA;MACA,GACAa,IAAA,WAAAC,QAAA;QACA,IAAAC,GAAA,GAAAD,QAAA,CAAAtD,IAAA;QACA+C,EAAA,CAAAnC,SAAA,GAAA2C,GAAA,CAAAvD,IAAA;QACA+C,EAAA,CAAApC,OAAA;QACAoC,EAAA,CAAAS,YAAA;MACA;IACA;IACAA,YAAA,WAAAA,aAAA;MACA,IAAAT,EAAA;MACAA,EAAA,CAAAnC,SAAA,CAAA6C,OAAA,CAAApB,OAAA,WAAAC,IAAA;QACAS,EAAA,CAAA9C,aAAA,CAAAyD,cAAA,CAAArB,OAAA,WAAAsB,UAAA;UACA,IAAArB,IAAA,CAAAE,EAAA,KAAAmB,UAAA;YACAZ,EAAA,CAAAH,KAAA,CAAAgB,KAAA,CAAAC,kBAAA,CAAAvB,IAAA;UACA;QACA;MACA;IACA;IACAwB,WAAA,WAAAA,YAAAhD,SAAA;MACA,KAAAiD,QAAA,CAAAjD,SAAA;IACA;IACAiD,QAAA,WAAAA,SAAAjD,SAAA,EAAAkD,GAAA;MAAA,IAAAC,MAAA;MACA,KAAAC,mBAAA,CAAApD,SAAA,EAAAkD,GAAA;MACA;MACA,KAAAlD,SAAA,GAAAA,SAAA;;MAEA;MACA,IAAAqD,GAAA,QAAAvB,KAAA,CAAAtC,QAAA,CAAA8D,cAAA;MACA,IAAAC,IAAA,GAAAvD,SAAA,CAAAwD,GAAA,WAAAhC,IAAA;QAAA,OAAAA,IAAA,CAAAc,MAAA;MAAA;MACA,IAAAmB,WAAA,GAAAC,KAAA,CAAAC,IAAA,KAAAC,GAAA,IAAAC,MAAA,CAAAC,kBAAA,CAAAT,GAAA,GAAAS,kBAAA,CAAAP,IAAA;MACA,KAAAzB,KAAA,CAAAtC,QAAA,CAAAuC,cAAA,CAAA0B,WAAA;MACAA,WAAA,CAAAlC,OAAA,WAAAC,IAAA;QACA2B,MAAA,CAAAY,cAAA,CAAAvC,IAAA;MACA;IACA;IACA4B,mBAAA,WAAAA,oBAAApD,SAAA,EAAAkD,GAAA;MACA;MACA,IAAAc,QAAA;MACA,IAAAd,GAAA;QACAc,QAAA,GAAAhE,SAAA,CAAA4B,MAAA,IAAA5B,SAAA,CAAAiE,OAAA,CAAAf,GAAA;MACA;QACAc,QAAA,GAAAhE,SAAA,CAAA4B,MAAA;MACA;;MAEA;MACA,IAAAsC,iBAAA,GAAAlE,SAAA,CAAAwD,GAAA,WAAAhC,IAAA;QAAA,OAAAA,IAAA,CAAAE,EAAA;MAAA;MAEA,IAAAyC,OAAA,QAAAzE,kBAAA;MACA,KAAAsE,QAAA,IAAAd,GAAA;QACA,IAAAkB,KAAA,GAAAD,OAAA,CAAAE,SAAA,WAAA7C,IAAA;UACA,IAAAA,IAAA,IAAA0B,GAAA,CAAAxB,EAAA;YACA;UACA;QACA;QACAyC,OAAA,CAAAG,MAAA,CAAAF,KAAA;MACA;;MAEA;MACA,KAAAjF,aAAA,CAAAyD,cAAA,GAAAkB,kBAAA,CACA,IAAAF,GAAA,IAAAC,MAAA,CAAAC,kBAAA,CAAAI,iBAAA,GAAAJ,kBAAA,CAAAK,OAAA,IACA;IACA;IAEArD,YAAA,WAAAA,aAAA;MAAA,IAAAyD,MAAA;MACA9F,OAAA,CAAA+F,OAAA,GAAAjC,IAAA,WAAAC,QAAA;QACA,IAAAC,GAAA,GAAAD,QAAA,CAAAtD,IAAA;QACAqF,MAAA,CAAA/E,QAAA,GAAAiD,GAAA,CAAAvD,IAAA;MACA;IACA;IACAE,iBAAA,WAAAA,kBAAA;MACA;QACAqF,MAAA;QACAtD,UAAA;QACAyB,cAAA;MACA;IACA;IACArD,SAAA,WAAAA,UAAA;MACA,KAAAF,WAAA,GAAAqF,QAAA,CAAAC,IAAA,CAAAC,WAAA;MACA,SAAAvF,WAAA;QACA;MACA,gBAAAA,WAAA;QACA;MACA;QACA;MACA;IACA;IACAwF,gBAAA,WAAAA,iBAAAC,GAAA;MACA,IAAA7C,EAAA;MACAA,EAAA,CAAA9C,aAAA,CAAAsF,MAAA,GAAAK,GAAA,CAAApD,EAAA;MACA;MACA;MACAlD,OAAA,CAAAuG,uBAAA,CAAAD,GAAA,CAAApD,EAAA,EAAAa,IAAA,WAAAC,QAAA;QACA,IAAAC,GAAA,GAAAD,QAAA,CAAAtD,IAAA;QACA+C,EAAA,CAAA9C,aAAA,CAAAgC,UAAA,GAAAsB,GAAA,CAAAvD,IAAA,CAAAiC,UAAA;QACAc,EAAA,CAAA9C,aAAA,CAAAyD,cAAA,GAAAH,GAAA,CAAAvD,IAAA,CAAA0D,cAAA;QACAX,EAAA,CAAAvC,kBAAA,GAAA+C,GAAA,CAAAvD,IAAA,CAAA0D,cAAA;QACAX,EAAA,CAAAH,KAAA,CAAAtC,QAAA,CAAAuC,cAAA,CAAAU,GAAA,CAAAvD,IAAA,CAAAiC,UAAA;QACAsB,GAAA,CAAAvD,IAAA,CAAAiC,UAAA,CAAAI,OAAA,WAAAC,IAAA;UACAS,EAAA,CAAA8B,cAAA,CAAAvC,IAAA;QACA;MACA;IACA;IACAhB,KAAA,WAAAA,MAAA;MACA,KAAAwE,KAAA;IACA;IACAvE,KAAA,WAAAA,MAAA;MACA;MACA,KAAAqB,KAAA,CAAAmD,IAAA,CAAAC,aAAA;MACA,KAAApD,KAAA,CAAAmD,IAAA,CAAAE,WAAA;MACA,KAAAhG,aAAA,QAAAC,iBAAA;MACA,KAAA0C,KAAA,CAAAtC,QAAA,CAAAuC,cAAA;MACA,KAAAD,KAAA,CAAAgB,KAAA,CAAAsC,cAAA;IACA;IACAC,UAAA,WAAAA,WAAA;MACA,IAAApD,EAAA;MACA,KAAAH,KAAA,CAAAmD,IAAA,CAAAK,QAAA,WAAAC,KAAA;QACA,IAAAA,KAAA;UACAtD,EAAA,CAAAuD,UAAA;QACA;UACA;QACA;MACA;IACA;IACAA,UAAA,WAAAA,WAAA;MACA,IAAAvD,EAAA;MAEA,KAAA9C,aAAA,CAAAgC,UAAA,GAAAc,EAAA,CAAAH,KAAA,CAAAtC,QAAA,CACAiG,kBAAA,GACA5B,MAAA,CAAA5B,EAAA,CAAAH,KAAA,CAAAtC,QAAA,CAAA8D,cAAA;;MAEA;MACA;;MAEA9E,OAAA,CAAAkH,iBAAA,MAAAvG,aAAA,EAAAoD,IAAA,WAAAC,QAAA;QACA,IAAAC,GAAA,GAAAD,QAAA,CAAAtD,IAAA;QACA,IAAAuD,GAAA,CAAAkD,SAAA;UACA1D,EAAA,CAAA5B,SAAA;UACA4B,EAAA,CAAA2D,QAAA;YACAC,OAAA,EAAA5D,EAAA,CAAA6D,EAAA;YACA/G,IAAA;UACA;UACAkD,EAAA,CAAA+C,KAAA;QACA;MACA;IACA;IACAe,SAAA,WAAAA,UAAA7G,IAAA,EAAA8G,IAAA;MACA,IAAAA,IAAA,CAAAC,WAAA,CAAArE,MAAA;QACA;QACA,KAAAzB,WAAA;QACA,KAAAD,eAAA;MACA,WAAA8F,IAAA,CAAAC,WAAA,CAAArE,MAAA,UAAAV,aAAA,GAAAU,MAAA;QACA;QACA,KAAAzB,WAAA;QACA,KAAAD,eAAA;MACA;QACA;QACA,KAAAC,WAAA;QACA,KAAAD,eAAA;MACA;;MAEA;MACA,IAAA8D,QAAA,GAAAgC,IAAA,CAAAC,WAAA,CAAAhC,OAAA,CAAA/E,IAAA,CAAAwC,EAAA;MACA;MACA,IAAAsC,QAAA;QACA;QACA,KAAAD,cAAA,CAAA7E,IAAA;QACA;QACA,KAAAgH,cAAA,CAAAhH,IAAA;MACA;QACA;QACA,IAAAA,IAAA,CAAAyC,QAAA,IAAAzC,IAAA,CAAAyC,QAAA,CAAAC,MAAA;UACA,KAAAsE,cAAA,CAAAhH,IAAA;QACA;MACA;IACA;IACA;IACAgH,cAAA,WAAAA,eAAAhH,IAAA,EAAAiH,UAAA;MACA,KAAArE,KAAA,CAAAtC,QAAA,CAAA4G,UAAA,CAAAlH,IAAA,CAAAwC,EAAA,EAAAyE,UAAA;MACA,IAAAjH,IAAA,CAAAyC,QAAA;QACA,SAAA0E,CAAA,MAAAA,CAAA,GAAAnH,IAAA,CAAAyC,QAAA,CAAAC,MAAA,EAAAyE,CAAA;UACA,KAAAH,cAAA,CAAAhH,IAAA,CAAAyC,QAAA,CAAA0E,CAAA,GAAAF,UAAA;QACA;MACA;IACA;IACA;IACApC,cAAA,WAAAA,eAAA7E,IAAA;MACA,IAAAoH,WAAA,QAAAxE,KAAA,CAAAtC,QAAA,CAAA+G,OAAA,CAAArH,IAAA;MACA,IAAAoH,WAAA,CAAAE,MAAA,CAAAC,GAAA,KAAAC,SAAA;QACA,KAAA5E,KAAA,CAAAtC,QAAA,CAAA4G,UAAA,CAAAE,WAAA,CAAAE,MAAA;QACA,KAAAzC,cAAA,CAAAuC,WAAA,CAAAE,MAAA;MACA;IACA;EACA;AACA"}]}