{"remainingRequest":"E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web-master\\src\\views\\lamp\\system\\role\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\project\\lamp-web-master\\src\\views\\lamp\\system\\role\\index.vue","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Pagination from \"@/components/Pagination\";\nimport elDragDialog from '@/directive/el-drag-dialog'\nimport RoleEdit from \"./edit\";\nimport UserRole from \"./userRole\";\nimport FileImport from \"@/components/lamp/Import\"\nimport RoleAuthority from \"./roleAuthority\";\nimport roleApi from \"@/api/Role.js\";\nimport {convertEnum} from '@/utils/utils'\nimport {downloadFile, initEnums, initQueryParams} from '@/utils/commons'\n\nexport default {\n  name: \"RoleManage\",\n  directives: {elDragDialog},\n  components: {Pagination, RoleEdit, UserRole, RoleAuthority, FileImport},\n  filters: {\n    stateFilter(state) {\n      const map = {\n        false: \"danger\",\n        true: \"success\"\n      };\n      return map[state] || \"success\";\n    }\n  },\n  data() {\n    return {\n      dialog: {\n        isVisible: false,\n        type: \"add\"\n      },\n      preview: {\n        isVisible: false,\n        context: ''\n      },\n      fileImport: {\n        isVisible: false,\n        type: \"import\",\n        action: `${process.env.VUE_APP_BASE_API}/authority/role/import`\n      },\n      userRoleDialog: {\n        isVisible: false\n      },\n      roleAuthorityDialog: {\n        isVisible: false\n      },\n      tableKey: 0,\n      queryParams: initQueryParams({\n        model: {\n        }\n      }),\n      selection: [],\n      loading: false,\n      tableData: {\n        total: 0\n      },\n      enums: {\n        DataScopeType: {}\n      },\n      dicts: {}\n    };\n  },\n  computed: {\n  },\n  mounted() {\n    initEnums('DataScopeType', this.enums);\n    this.fetch();\n  },\n  methods: {\n    editClose() {\n      this.dialog.isVisible = false;\n    },\n    userRoleClose() {\n      this.userRoleDialog.isVisible = false;\n    },\n    roleAuthorityClose() {\n      this.roleAuthorityDialog.isVisible = false;\n    },\n    editSuccess() {\n      this.search();\n    },\n    userRoleSuccess() {\n      this.search();\n    },\n    roleAuthoritySuccess() {\n      this.search();\n    },\n    onSelectChange(selection) {\n      this.selection = selection;\n    },\n    search() {\n      this.fetch({\n        ...this.queryParams\n      });\n    },\n    reset() {\n      this.queryParams = initQueryParams({\n        model: {\n        }\n      });\n      this.$refs.table.clearSort();\n      this.$refs.table.clearFilter();\n      this.search();\n    },\n    exportExcelPreview() {\n      if (this.queryParams.timeRange) {\n        this.queryParams.extra.createTime_st = this.queryParams.timeRange[0];\n        this.queryParams.extra.createTime_ed = this.queryParams.timeRange[1];\n      }\n      this.queryParams.extra.fileName = '导出角色数据';\n      roleApi.preview(this.queryParams).then(response => {\n        const res = response.data;\n        this.preview.isVisible = true;\n        this.preview.context = res.data;\n      });\n    },\n    exportExcel() {\n      if (this.queryParams.timeRange) {\n        this.queryParams.extra.createTime_st = this.queryParams.timeRange[0];\n        this.queryParams.extra.createTime_ed = this.queryParams.timeRange[1];\n      }\n      this.queryParams.extra.fileName = '导出角色数据';\n      roleApi.export(this.queryParams).then(response => {\n        downloadFile(response);\n      });\n    },\n    importExcel() {\n      this.fileImport.type = \"upload\";\n      this.fileImport.isVisible = true;\n      this.$refs.import.setModel(false);\n    },\n    importSuccess() {\n      this.search();\n    },\n    importClose() {\n      this.fileImport.isVisible = false;\n    },\n    singleDelete(row) {\n      this.$refs.table.clearSelection()\n      this.$refs.table.toggleRowSelection(row, true);\n      this.batchDelete();\n    },\n    batchDelete() {\n      if (!this.selection.length) {\n        this.$message({\n          message: this.$t(\"tips.noDataSelected\"),\n          type: \"warning\"\n        });\n        return;\n      }\n      this.$confirm(this.$t(\"tips.confirmDelete\"), this.$t(\"common.tips\"), {\n        confirmButtonText: this.$t(\"common.confirm\"),\n        cancelButtonText: this.$t(\"common.cancel\"),\n        type: \"warning\"\n      })\n        .then(() => {\n          const ids = [];\n          this.selection.forEach(u => {\n            ids.push(u.id);\n          });\n          this.delete(ids);\n        })\n        .catch(() => {\n          this.clearSelections();\n        });\n    },\n    clearSelections() {\n      this.$refs.table.clearSelection();\n    },\n    delete(ids) {\n      roleApi.delete(ids).then(response => {\n        const res = response.data;\n        if (res.isSuccess) {\n          this.$message({\n            message: this.$t(\"tips.deleteSuccess\"),\n            type: \"success\"\n          });\n        }\n        this.search();\n      });\n    },\n    add() {\n      this.dialog.type = \"add\";\n      this.dialog.isVisible = true;\n      this.$refs.edit.setRole({ enums: this.enums});\n    },\n    edit(row) {\n      this.$refs.edit.setRole({row, enums: this.enums});\n      this.dialog.type = \"edit\";\n      this.dialog.isVisible = true;\n    },\n    fetch(params = {}) {\n      this.loading = true;\n      if (this.queryParams.timeRange) {\n        this.queryParams.extra.createTime_st = this.queryParams.timeRange[0];\n        this.queryParams.extra.createTime_ed = this.queryParams.timeRange[1];\n      }\n\n      this.queryParams.current = params.current ? params.current : this.queryParams.current;\n      this.queryParams.size = params.size ? params.size : this.queryParams.size;\n\n      roleApi.page(this.queryParams).then(response => {\n        const res = response.data;\n        if (res.isSuccess) {\n          this.tableData = res.data;\n        }\n      }).finally(() => this.loading = false);\n    },\n    sortChange(val) {\n      this.queryParams.sort = val.prop;\n      this.queryParams.order = val.order;\n      if (this.queryParams.sort) {\n        this.search();\n      }\n    },\n    filterChange(filters) {\n      for (const key in filters) {\n        // if (key.includes('.')) {\n        //   const val = {};\n        //   val[key.split('.')[1]] = filters[key][0];\n        //   this.queryParams.model[key.split('.')[0]] = val;\n        // } else {\n        //   this.queryParams.model[key] = filters[key][0]\n        // }\n        if (key.includes('.')) {\n          this.queryParams.model[key.split('.')[0]] = filters[key];\n        } else {\n          this.queryParams.model[key] = filters[key]\n        }\n      }\n      this.search()\n    },\n    cellClick (row, column) {\n      if (column['columnKey'] === \"operation\") {\n        return;\n      }\n      let flag = false;\n      this.selection.forEach((item)=>{\n        if(item.id === row.id) {\n          flag = true;\n          this.$refs.table.toggleRowSelection(row);\n        }\n      })\n\n      if(!flag){\n        this.$refs.table.toggleRowSelection(row, true);\n      }\n    },\n    authResource(row) {\n      this.roleAuthorityDialog.isVisible = true;\n      this.$refs.roleAuthority.setRoleAuthority(row);\n    },\n    authUser(row) {\n      this.userRoleDialog.isVisible = true;\n      this.$refs.userRole.setUserRole(row);\n    }\n  }\n}\n;\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"index.vue","sourceRoot":"src/views/lamp/system/role","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-input :placeholder=\"$t('table.role.code')\" class=\"filter-item search-item\" v-model=\"queryParams.model.code\"/>\n      <el-input :placeholder=\"$t('table.role.name')\" class=\"filter-item search-item\" v-model=\"queryParams.model.name\"/>\n      <el-date-picker\n        :range-separator=\"null\"\n        class=\"filter-item search-item date-range-item\"\n        end-placeholder=\"结束日期\"\n        format=\"yyyy-MM-dd HH:mm:ss\"\n        start-placeholder=\"开始日期\"\n        type=\"daterange\"\n        v-model=\"queryParams.timeRange\"\n        value-format=\"yyyy-MM-dd HH:mm:ss\"\n      />\n      <el-button @click=\"search\" class=\"filter-item\" plain type=\"primary\">\n        {{ $t(\"table.search\") }}\n      </el-button>\n      <el-button @click=\"reset\" class=\"filter-item\" plain type=\"warning\">\n        {{ $t(\"table.reset\") }}\n      </el-button>\n      <el-button @click=\"add\" class=\"filter-item\" plain type=\"danger\" v-has-permission=\"['authority:role:add']\">\n        {{ $t(\"table.add\") }}\n      </el-button>\n      <el-dropdown class=\"filter-item\" trigger=\"click\"\n                   v-has-any-permission=\"[ 'authority:role:delete', 'authority:role:export', 'authority:role:import']\">\n        <el-button>\n          {{ $t(\"table.more\") }}\n          <i class=\"el-icon-arrow-down el-icon--right\"/>\n        </el-button>\n        <el-dropdown-menu slot=\"dropdown\">\n          <el-dropdown-item @click.native=\"batchDelete\" v-has-permission=\"['authority:role:delete']\">\n            {{ $t(\"table.delete\") }}\n          </el-dropdown-item>\n          <el-dropdown-item @click.native=\"exportExcel\" v-has-permission=\"['authority:role:export']\">\n            {{ $t(\"table.export\") }}\n          </el-dropdown-item>\n          <el-dropdown-item @click.native=\"exportExcelPreview\" v-has-permission=\"['authority:role:export']\">\n            {{ $t(\"table.exportPreview\") }}\n          </el-dropdown-item>\n          <el-dropdown-item @click.native=\"importExcel\" v-has-permission=\"['authority:role:import']\">\n            {{ $t(\"table.import\") }}\n          </el-dropdown-item>\n        </el-dropdown-menu>\n      </el-dropdown>\n    </div>\n\n    <el-table\n      :data=\"tableData.records\"\n      :key=\"tableKey\"\n      @filter-change=\"filterChange\"\n      @selection-change=\"onSelectChange\"\n      @sort-change=\"sortChange\"\n      @cell-click=\"cellClick\"\n      border fit row-key=\"id\"\n      ref=\"table\"\n      style=\"width: 100%;\"\n      v-loading=\"loading\"\n    >\n      <el-table-column align=\"center\" type=\"selection\" width=\"40px\" :reserve-selection=\"true\"/>\n      <el-table-column\n        :label=\"$t('table.role.code')\"\n        align=\"center\"\n        prop=\"code\"\n        width=\"200px\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.code }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        label=\"类别\"\n        :show-overflow-tooltip=\"true\"\n        align=\"center\"\n        prop=\"category\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.echoMap.category }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('table.role.name')\"\n        :show-overflow-tooltip=\"true\"\n        align=\"center\"\n        prop=\"name\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.name }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('table.role.describe')\"\n        :show-overflow-tooltip=\"true\"\n        align=\"center\"\n        prop=\"describe\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.describe }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :filter-multiple=\"true\"\n        column-key=\"readonly\"\n        :filters=\"[\n          { text: $t('common.yes'), value: true },\n          { text: $t('common.no'), value: false }\n        ]\"\n        :label=\"$t('table.role.readonly')\"\n        align=\"center\"\n        width=\"80px\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.readonly ? $t('common.yes') : $t('common.no') }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :filter-multiple=\"true\"\n        column-key=\"state\"\n        :filters=\"[\n          { text: $t('common.state.valid'), value: true },\n          { text: $t('common.state.invalid'), value: false }\n        ]\"\n        :label=\"$t('table.role.state')\"\n        class-name=\"status-col\"\n        width=\"70px\"\n      >\n        <template slot-scope=\"{ row }\">\n          <el-tag :type=\"row.state | stateFilter\">{{\n            row.state ? $t(\"common.state.valid\") : $t(\"common.state.invalid\")\n            }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('table.createTime')\"\n        align=\"center\"\n        prop=\"createTime\"\n        sortable=\"custom\"\n        width=\"170px\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.createTime }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('table.operation')\"\n        align=\"center\"\n        column-key=\"operation\"\n        class-name=\"small-padding fixed-width\"\n        width=\"140px\"\n      >\n        <template slot-scope=\"{ row }\">\n          <i\n            @click=\"edit(row)\"\n            class=\"el-icon-edit table-operation\"\n            style=\"color: #2db7f5;\"\n            title=\"修改\"\n            v-hasPermission=\"['authority:role:edit']\"\n          />\n          <i\n            @click=\"singleDelete(row)\"\n            class=\"el-icon-delete table-operation\"\n            style=\"color: #f50;\"\n            title=\"删除\"\n            v-hasPermission=\"['authority:role:delete']\"\n          />\n          <i\n            @click=\"authUser(row)\"\n            class=\"el-icon-user table-operation\"\n            style=\"color: #87d068;\"\n            title=\"授权用户\"\n            v-hasPermission=\"['authority:role:auth']\"\n          />\n          <i\n            @click=\"authResource(row)\"\n            class=\"el-icon-setting table-operation\"\n            style=\"color: #E6A23C\"\n            title=\"分配权限\"\n            v-hasPermission=\"['authority:role:config']\"\n          />\n          <el-link\n            class=\"no-perm\"\n            v-has-no-permission=\"[\n              'authority:role:edit',\n              'authority:role:delete',\n              'authority:role:auth',\n              'authority:role:config'\n            ]\"\n          >{{ $t(\"tips.noPermission\") }}\n          </el-link\n          >\n        </template>\n      </el-table-column>\n    </el-table>\n    <pagination\n      :limit.sync=\"queryParams.size\"\n      :page.sync=\"queryParams.current\"\n      :total=\"Number(tableData.total)\"\n      @pagination=\"fetch\"\n      v-show=\"tableData.total > 0\"\n    />\n    <role-edit\n      :dialog-visible=\"dialog.isVisible\"\n      :type=\"dialog.type\"\n      @close=\"editClose\"\n      @success=\"editSuccess\"\n      ref=\"edit\"\n    />\n    <user-role\n      :dialog-visible=\"userRoleDialog.isVisible\"\n      @close=\"userRoleClose\"\n      @success=\"userRoleSuccess\"\n      ref=\"userRole\"\n    />\n    <role-authority\n      :dialog-visible=\"roleAuthorityDialog.isVisible\"\n      @close=\"roleAuthorityClose\"\n      @success=\"roleAuthoritySuccess\"\n      ref=\"roleAuthority\"\n    />\n    <file-import\n      :dialog-visible=\"fileImport.isVisible\"\n      :type=\"fileImport.type\"\n      :action=\"fileImport.action\" accept=\".xls,.xlsx\"\n      @close=\"importClose\"\n      @success=\"importSuccess\"\n      ref=\"import\"\n    />\n    <el-dialog\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"true\"\n      title=\"预览\"\n      width=\"80%\"\n      top=\"50px\"\n      :visible.sync=\"preview.isVisible\"\n      v-el-drag-dialog\n    >\n      <el-scrollbar>\n        <div v-html=\"preview.context\"></div>\n      </el-scrollbar>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n  import Pagination from \"@/components/Pagination\";\n  import elDragDialog from '@/directive/el-drag-dialog'\n  import RoleEdit from \"./edit\";\n  import UserRole from \"./userRole\";\n  import FileImport from \"@/components/lamp/Import\"\n  import RoleAuthority from \"./roleAuthority\";\n  import roleApi from \"@/api/Role.js\";\n  import {convertEnum} from '@/utils/utils'\n  import {downloadFile, initEnums, initQueryParams} from '@/utils/commons'\n\n  export default {\n    name: \"RoleManage\",\n    directives: {elDragDialog},\n    components: {Pagination, RoleEdit, UserRole, RoleAuthority, FileImport},\n    filters: {\n      stateFilter(state) {\n        const map = {\n          false: \"danger\",\n          true: \"success\"\n        };\n        return map[state] || \"success\";\n      }\n    },\n    data() {\n      return {\n        dialog: {\n          isVisible: false,\n          type: \"add\"\n        },\n        preview: {\n          isVisible: false,\n          context: ''\n        },\n        fileImport: {\n          isVisible: false,\n          type: \"import\",\n          action: `${process.env.VUE_APP_BASE_API}/authority/role/import`\n        },\n        userRoleDialog: {\n          isVisible: false\n        },\n        roleAuthorityDialog: {\n          isVisible: false\n        },\n        tableKey: 0,\n        queryParams: initQueryParams({\n          model: {\n          }\n        }),\n        selection: [],\n        loading: false,\n        tableData: {\n          total: 0\n        },\n        enums: {\n          DataScopeType: {}\n        },\n        dicts: {}\n      };\n    },\n    computed: {\n    },\n    mounted() {\n      initEnums('DataScopeType', this.enums);\n      this.fetch();\n    },\n    methods: {\n      editClose() {\n        this.dialog.isVisible = false;\n      },\n      userRoleClose() {\n        this.userRoleDialog.isVisible = false;\n      },\n      roleAuthorityClose() {\n        this.roleAuthorityDialog.isVisible = false;\n      },\n      editSuccess() {\n        this.search();\n      },\n      userRoleSuccess() {\n        this.search();\n      },\n      roleAuthoritySuccess() {\n        this.search();\n      },\n      onSelectChange(selection) {\n        this.selection = selection;\n      },\n      search() {\n        this.fetch({\n          ...this.queryParams\n        });\n      },\n      reset() {\n        this.queryParams = initQueryParams({\n          model: {\n          }\n        });\n        this.$refs.table.clearSort();\n        this.$refs.table.clearFilter();\n        this.search();\n      },\n      exportExcelPreview() {\n        if (this.queryParams.timeRange) {\n          this.queryParams.extra.createTime_st = this.queryParams.timeRange[0];\n          this.queryParams.extra.createTime_ed = this.queryParams.timeRange[1];\n        }\n        this.queryParams.extra.fileName = '导出角色数据';\n        roleApi.preview(this.queryParams).then(response => {\n          const res = response.data;\n          this.preview.isVisible = true;\n          this.preview.context = res.data;\n        });\n      },\n      exportExcel() {\n        if (this.queryParams.timeRange) {\n          this.queryParams.extra.createTime_st = this.queryParams.timeRange[0];\n          this.queryParams.extra.createTime_ed = this.queryParams.timeRange[1];\n        }\n        this.queryParams.extra.fileName = '导出角色数据';\n        roleApi.export(this.queryParams).then(response => {\n          downloadFile(response);\n        });\n      },\n      importExcel() {\n        this.fileImport.type = \"upload\";\n        this.fileImport.isVisible = true;\n        this.$refs.import.setModel(false);\n      },\n      importSuccess() {\n        this.search();\n      },\n      importClose() {\n        this.fileImport.isVisible = false;\n      },\n      singleDelete(row) {\n        this.$refs.table.clearSelection()\n        this.$refs.table.toggleRowSelection(row, true);\n        this.batchDelete();\n      },\n      batchDelete() {\n        if (!this.selection.length) {\n          this.$message({\n            message: this.$t(\"tips.noDataSelected\"),\n            type: \"warning\"\n          });\n          return;\n        }\n        this.$confirm(this.$t(\"tips.confirmDelete\"), this.$t(\"common.tips\"), {\n          confirmButtonText: this.$t(\"common.confirm\"),\n          cancelButtonText: this.$t(\"common.cancel\"),\n          type: \"warning\"\n        })\n          .then(() => {\n            const ids = [];\n            this.selection.forEach(u => {\n              ids.push(u.id);\n            });\n            this.delete(ids);\n          })\n          .catch(() => {\n            this.clearSelections();\n          });\n      },\n      clearSelections() {\n        this.$refs.table.clearSelection();\n      },\n      delete(ids) {\n        roleApi.delete(ids).then(response => {\n          const res = response.data;\n          if (res.isSuccess) {\n            this.$message({\n              message: this.$t(\"tips.deleteSuccess\"),\n              type: \"success\"\n            });\n          }\n          this.search();\n        });\n      },\n      add() {\n        this.dialog.type = \"add\";\n        this.dialog.isVisible = true;\n        this.$refs.edit.setRole({ enums: this.enums});\n      },\n      edit(row) {\n        this.$refs.edit.setRole({row, enums: this.enums});\n        this.dialog.type = \"edit\";\n        this.dialog.isVisible = true;\n      },\n      fetch(params = {}) {\n        this.loading = true;\n        if (this.queryParams.timeRange) {\n          this.queryParams.extra.createTime_st = this.queryParams.timeRange[0];\n          this.queryParams.extra.createTime_ed = this.queryParams.timeRange[1];\n        }\n\n        this.queryParams.current = params.current ? params.current : this.queryParams.current;\n        this.queryParams.size = params.size ? params.size : this.queryParams.size;\n\n        roleApi.page(this.queryParams).then(response => {\n          const res = response.data;\n          if (res.isSuccess) {\n            this.tableData = res.data;\n          }\n        }).finally(() => this.loading = false);\n      },\n      sortChange(val) {\n        this.queryParams.sort = val.prop;\n        this.queryParams.order = val.order;\n        if (this.queryParams.sort) {\n          this.search();\n        }\n      },\n      filterChange(filters) {\n        for (const key in filters) {\n          // if (key.includes('.')) {\n          //   const val = {};\n          //   val[key.split('.')[1]] = filters[key][0];\n          //   this.queryParams.model[key.split('.')[0]] = val;\n          // } else {\n          //   this.queryParams.model[key] = filters[key][0]\n          // }\n          if (key.includes('.')) {\n            this.queryParams.model[key.split('.')[0]] = filters[key];\n          } else {\n            this.queryParams.model[key] = filters[key]\n          }\n        }\n        this.search()\n      },\n      cellClick (row, column) {\n        if (column['columnKey'] === \"operation\") {\n          return;\n        }\n        let flag = false;\n        this.selection.forEach((item)=>{\n          if(item.id === row.id) {\n            flag = true;\n            this.$refs.table.toggleRowSelection(row);\n          }\n        })\n\n        if(!flag){\n          this.$refs.table.toggleRowSelection(row, true);\n        }\n      },\n      authResource(row) {\n        this.roleAuthorityDialog.isVisible = true;\n        this.$refs.roleAuthority.setRoleAuthority(row);\n      },\n      authUser(row) {\n        this.userRoleDialog.isVisible = true;\n        this.$refs.userRole.setUserRole(row);\n      }\n    }\n  }\n  ;\n</script>\n<style lang=\"scss\" scoped></style>\n"]}]}