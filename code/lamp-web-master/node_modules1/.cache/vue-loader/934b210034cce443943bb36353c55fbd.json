{"remainingRequest":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web1(原版)\\lamp-web-master\\src\\views\\profile\\components\\UserCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\src\\views\\profile\\components\\UserCard.vue","mtime":1679380940000},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport PanThumb from '@/components/PanThumb'\nimport Avatar from './Avatar'\n\nexport default {\n  components: { PanThumb, Avatar },\n  props: {\n    user: {\n      type: Object,\n      default: () => {\n        return {\n        }\n      }\n    }\n  },\n  data () {\n    return {\n      dialogVisible: false,\n      socialLoginUrl: `${process.env.VUE_APP_BASE_API}/authority/social/login`,\n      logo: [\n        { img: 'gitee.png', name: 'gitee', bind: false, radius: true },\n        { img: 'github.png', name: 'github', bind: false, radius: true },\n        { img: 'tencent_cloud.png', name: 'tencent_cloud', bind: false, radius: true },\n        { img: 'qq.png', name: 'qq', bind: false, radius: false },\n        { img: 'dingtalk.png', name: 'dingtalk', bind: false, radius: true },\n        { img: 'microsoft.png', name: 'microsoft', bind: false, radius: false }\n      ],\n      oauthType: '',\n      page: {\n        width: window.screen.width * 0.5,\n        height: window.screen.height * 0.5\n      }\n    }\n  },\n  computed: {\n    avatar () {\n      if (!this.user[\"avatar\"]) {\n        return require(`@/assets/avatar/default.jpg`)\n      } else {\n        if (this.user[\"avatar\"].startsWith('http://') || this.user[\"avatar\"].startsWith('https://')) {\n          return this.user[\"avatar\"]\n        } else {\n          return require(`@/assets/avatar/${this.user.avatar}`)\n        }\n      }\n    }\n  },\n  mounted () {\n    // this.findUserConnections()\n  },\n  destroyed () {\n    window.removeEventListener('message', this.resolveBindResult)\n  },\n  methods: {\n    openAvatar () {\n      this.dialogVisible = true\n      this.$refs.myAvatar.init()\n    },\n    changeSuccess (avatar) {\n      this.dialogVisible = false\n      this.$message({\n        message: this.$t('tips.updateSuccess'),\n        type: 'success'\n      })\n      this.user.avatar = avatar\n      this.$store.commit('account/setUser', this.user)\n    },\n    resolveLogo (logo) {\n      return require(`@/assets/logo/${logo}`)\n    },\n    findUserConnections () {\n      this.$get(`auth/social/connections/${this.user.username}`).then((r) => {\n        const data = r.data.data\n        data.forEach(d => {\n          this.logo.forEach(l => {\n            if (l.name === d.providerName.toLowerCase()) {\n              l.bind = true\n            }\n          })\n        })\n      })\n    },\n    bind (name) {\n      this.$message({\n        message: '待完善',\n        type: 'warning'\n      })\n      console.log(name)\n      this.oauthType = name\n      // const url = `${this.socialLoginUrl}/${name}/bind`\n      // window.open(url, 'newWindow', `height=${this.page.height}, width=${this.page.width}, top=10%, left=10%, toolbar=no, menubar=no, scrollbars=no, resizable=no,location=no, status=no`)\n      // window.addEventListener('message', this.resolveBindResult, false)\n    },\n    resolveBindResult (e) {\n      const data = e.data.data\n      data.token = null\n      // this.$post('auth/social/bind', {\n      //   ...data,\n      //   bindUsername: this.user.username\n      // }).then((r) => {\n      //   this.logo.forEach(l => {\n      //     if (l.name === this.oauthType) {\n      //       l.bind = true\n      //     }\n      //   })\n      //   this.$message({\n      //     message: this.$t('common.bindSuccess'),\n      //     type: 'success'\n      //   })\n      // })\n    },\n    unbind (name) {\n      this.$confirm(this.$t('common.confirmUnbind'), this.$t('common.tips'), {\n        confirmButtonText: this.$t('common.confirm'),\n        cancelButtonText: this.$t('common.cancel'),\n        type: 'warning'\n      }).then(() => {\n        this.$delete('auth/social/unbind', {\n          bindUsername: this.user.username,\n          oauthType: name\n        }).then(() => {\n          this.logo.forEach(l => {\n            if (l.name === name) {\n              l.bind = false\n            }\n          })\n          this.$message({\n            message: this.$t('common.unbindSuccess'),\n            type: 'success'\n          })\n        })\n      }).catch(() => { })\n    }\n  }\n}\n",null]}