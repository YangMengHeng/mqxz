{"remainingRequest":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web-master(finish\\lamp-web-master\\src\\views\\lamp\\system\\museum\\index6.vue?vue&type=style&index=0&id=7242ffaf&prod&lang=css&","dependencies":[{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\src\\views\\lamp\\system\\museum\\index6.vue","mtime":1693315213560},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\css-loader\\index.js","mtime":1686711135550},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1686711138278},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\postcss-loader\\src\\index.js","mtime":1686711136346},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["\n\n.nowEcharts { width: 100%; height: 300px; margin-bottom: 0.3rem;}",{"version":3,"sources":["index6.vue"],"names":[],"mappings":";;AAEA","file":"index6.vue","sourceRoot":"src/views/lamp/system/museum","sourcesContent":["<div class=\"nowEcharts\" id=\"nowEcharts\"></div>\r\n\r\n<style >.nowEcharts { width: 100%; height: 300px; margin-bottom: 0.3rem;}</style>\r\n\r\nnowOptions: {\r\n\r\n        visualMap: [\r\n\r\n          {\r\n\r\n            show: false,\r\n\r\n            type: 'continuous',\r\n\r\n            seriesIndex: 0,\r\n\r\n            min: 0,\r\n\r\n            max: 400,\r\n\r\n          },\r\n\r\n        ],\r\n\r\n        title: {\r\n\r\n          left: 'left',\r\n\r\n          text: '电量消耗实时统计',\r\n\r\n        },\r\n\r\n        tooltip: {\r\n\r\n          trigger: 'axis',\r\n\r\n          formatter: function(params) {\r\n\r\n            params = params[0]\r\n\r\n            vardate =new Date(params.name)\r\n\r\n            return (\r\n\r\n              date.getDate() +              '/' +              (date.getMonth() + 1) +              '/' +              date.getFullYear() +              ' : ' +              params.value[1]\r\n\r\n            )\r\n\r\n          },\r\n\r\n          axisPointer: {\r\n\r\n            animation: false,\r\n\r\n          },\r\n\r\n        },\r\n\r\n        grid: {\r\n\r\n          top: '15%',\r\n\r\n          bottom: '10%',\r\n\r\n        },\r\n\r\n        xAxis: {\r\n\r\n          type: 'time',\r\n\r\n          splitLine: {\r\n\r\n            show: false,\r\n\r\n          },\r\n\r\n          triggerEvent: true,\r\n\r\n        },\r\n\r\n        yAxis: {\r\n\r\n          type: 'value',\r\n\r\n          boundaryGap: [0, '100%'],\r\n\r\n          max: 100,\r\n\r\n          splitLine: {\r\n\r\n            show: false,\r\n\r\n          },\r\n\r\n        },\r\n\r\n        series: [\r\n\r\n          {\r\n\r\n            type: 'line',\r\n\r\n            showSymbol: false,\r\n\r\n            hoverAnimation: false,\r\n\r\n            data: [],\r\n\r\n          },\r\n\r\n        ],\r\n\r\n      },\r\n\r\nnowChart() {\r\n\r\n      let that =thisvardata = []\r\n\r\n      varnow = +new Date()\r\n\r\n      varvalue = Math.random() * 1000for(vari = 0; i < 60; i++) {\r\n\r\n        now =newDate(+now +this.oneDay)\r\n\r\n        data.push(this.randomData(now, value))\r\n\r\n      }\r\n\r\n      // 基于准备好的dom，初始化echarts实例varmyChart = echarts.init(document.getElementById('nowEcharts'))\r\n\r\n      // 绘制图表vartemp = 59      let options = Object.assign(that.nowOptions, {})\r\n\r\n      options.series.forEach((item) => {\r\n\r\n        item.data = data\r\n\r\n        item.markPoint = {\r\n\r\n          data: [\r\n\r\n            [\r\n\r\n              {\r\n\r\n                symbol: 'none',\r\n\r\n                x: '95%',\r\n\r\n              },\r\n\r\n              {\r\n\r\n                symbol: 'circle',\r\n\r\n                name: '实时数据',\r\n\r\n                value: data[temp].value[1],\r\n\r\n                xAxis: data[temp].value[0],\r\n\r\n              },\r\n\r\n            ],\r\n\r\n          ],\r\n\r\n        }\r\n\r\n      })\r\n\r\n      myChart.setOption(options)\r\n\r\n      // 1秒定时器setInterval(() => {\r\n\r\n        for(vari = 0; i < 1; i++) {\r\n\r\n          data.shift()\r\n\r\n          now =newDate(+now +this.oneDay)\r\n\r\n          data.push(this.randomData(now, value))\r\n\r\n        }\r\n\r\n        myChart.setOption(options)\r\n\r\n      }, 1000)\r\n\r\n    },\r\nrandomData(now, value) {\r\n\r\n      value = Math.random() * 100varvalueName =        now.getFullYear() +        '/' +        (now.getMonth() + 1) +        '/' +        now.getDate() +        ' ' +        (now.getHours() >= 10 ? now.getHours() : '0' + now.getHours()) +        ':' +        (now.getMinutes() >= 10 ? now.getMinutes() : '0' + now.getMinutes()) +        ':' +        (now.getSeconds() >= 10 ? now.getSeconds() : '0' + now.getSeconds())\r\n\r\n      return {\r\n\r\n        name: now.toString(),\r\n\r\n        value: [valueName, Math.round(value)],\r\n\r\n      }\r\n\r\n    }"]}]}