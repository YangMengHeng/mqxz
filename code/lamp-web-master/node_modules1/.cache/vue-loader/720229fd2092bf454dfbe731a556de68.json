{"remainingRequest":"E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web-master\\src\\views\\lamp\\encState\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\project\\lamp-web-master\\src\\views\\lamp\\encState\\edit.vue","mtime":1689907321623},{"path":"E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport encStateApi from \"@/api/encState.js\";\n\nexport default {\n  name: \"encStateEdit\",\n  components: {  },\n  props: {\n    dialogVisible: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: \"add\"\n    }\n  },\n  data() {\n    return {\n      encState: this.initencState(),\n      screenWidth: 0,\n      width: this.initWidth(),\n      rules: {\n        key: [\n          {required: true, message: this.$t(\"rules.require\"), trigger: \"blur\"},\n          { min: 1, max: 255, message: '最多不能超过255字符', trigger: \"blur\"}\n        ],\n        name: [\n          {required: true, message: this.$t(\"rules.require\"), trigger: \"blur\"},\n          { min: 1, max: 255, message: '最多不能超过255字符', trigger: \"blur\"}\n        ],\n        value: [\n          { max: 255, message: '最多不能超过255字符', trigger: \"blur\"}\n        ],\n      }\n    };\n  },\n  computed: {\n    isVisible: {\n      get() {\n        return this.dialogVisible;\n      },\n      set() {\n        this.close();\n        this.reset();\n      }\n    },\n    title() {\n      return this.$t(\"common.\" + this.type);\n    }\n  },\n  watch: {},\n  mounted() {\n    window.onresize = () => {\n      return (() => {\n        this.width = this.initWidth();\n      })();\n    };\n  },\n  methods: {\n    initencState() {\n      return {\n        id: \"\",\n        key: '',\n        name: '',\n        value: '',\n        describe: '',\n        readonly: false,\n        schema:'',\n      };\n    },\n    initWidth() {\n      this.screenWidth = document.body.clientWidth;\n      if (this.screenWidth < 991) {\n        return \"90%\";\n      } else if (this.screenWidth < 1400) {\n        return \"45%\";\n      } else {\n        return \"800px\";\n      }\n    },\n    setencState(val) {\n      const vm = this;\n      if (val) {\n        vm.encState = { ...vm.encState, ...val };\n      }\n    },\n    close() {\n      this.$emit(\"close\");\n    },\n    reset() {\n      // 先清除校验，再清除表单，不然有奇怪的bug\n      this.$refs.form.clearValidate();\n      this.$refs.form.resetFields();\n      this.encState = this.initencState();\n    },\n    submitForm() {\n      const vm = this;\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          vm.editSubmit();\n        } else {\n          return false;\n        }\n      });\n    },\n    editSubmit() {\n      const vm = this;\n      if (vm.type === \"edit\") {\n          vm.update();\n  \n      } else {\n          vm.save();\n      }\n    },\n    save() {\n      const vm = this;\n      encStateApi.save(this.encState).then(response => {\n        const res = response.data;\n        if (res.isSuccess) {\n          vm.isVisible = false;\n          vm.$message({\n            message: vm.$t(\"tips.createSuccess\"),\n            type: \"success\"\n          });\n          vm.$emit(\"success\");\n        }\n      });\n    },\n    update() {\n      encStateApi.update(this.encState).then(response => {\n        const res = response.data;\n        if (res.isSuccess) {\n          this.isVisible = false;\n          this.$message({\n            message: this.$t(\"tips.updateSuccess\"),\n            type: \"success\"\n          });\n          this.$emit(\"success\");\n        }\n      });\n    }\n  }\n};\n",{"version":3,"sources":["edit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"edit.vue","sourceRoot":"src/views/lamp/encState","sourcesContent":["<!-- springfox-swagger2 -->\n<dependency>\n    <groupId>io.springfox</groupId>\n    <artifactId>springfox-swagger2</artifactId>\n    <version>2.9.2</version>\n</dependency>\n<!-- springfox-swagger-ui -->\n<dependency>\n    <groupId>io.springfox</groupId>\n    <artifactId>springfox-swagger-ui</artifactId>\n    <version>2.9.2</version>\n</dependency>\n\n\n@Configuration\n@EnableSwagger2\npublic class SwaggerConfig {\n\n    //配置文档属性\n    private ApiInfo getApiInfo(){\n      return   new ApiInfoBuilder().title(\"XX微服务接口文档\")\n                .description(\"描述，给前端妹子看的\")\n                .version(\"版本1.0\")\n                .termsOfServiceUrl(\"http://www.xxx.com\")\n                .build();\n    }\n    //创建文档配置对象\n    @Bean\n    public Docket docket(){\n      return   new Docket(DocumentationType.SWAGGER_2).apiInfo(getApiInfo())\n                .groupName(\"group1\")\n                .select()\n                .build();\n    }\n}\n\n\n\n<template>\n  <el-dialog\n    :close-on-click-modal=\"false\"\n    :close-on-press-escape=\"true\"\n    :title=\"title\"\n    :type=\"type\"\n    :visible.sync=\"isVisible\"\n    :width=\"width\"\n    top=\"50px\">\n    <div class=\"dialog-footer\" slot=\"footer\">\n      <el-button @click=\"isVisible = false\" plain type=\"warning\">\n        {{ $t(\"common.cancel\") }}\n      </el-button>\n      <el-button @click=\"submitForm\" plain type=\"primary\">\n        {{ $t(\"common.confirm\") }}\n      </el-button>\n    </div>\n    <el-form :model=\"encState\" :rules=\"rules\" label-position=\"right\" label-width=\"100px\" ref=\"form\">\n      <el-form-item :label=\"$t('table.encState.key')\"   label=\"参数名称\"  prop=\"key\">\n        <el-input :disabled=\"type==='edit'\" type=\"\" v-model=\"encState.key\" placeholder=\"参数名称\"/> \n       \n\n      </el-form-item>\n      <el-form-item :label=\"$t('table.encState.name')\" label=\"参数说明\" prop=\"name\">\n        <el-input type=\"\" v-model=\"encState.name\" placeholder=\"参数说明\"/>\n\n      </el-form-item>\n      <el-form-item :label=\"$t('table.encState.value')\" label='请求类型' prop=\"value\">\n        <el-input type=\"\" v-model=\"encState.value\" placeholder=\"请求类型\"/>\n\n      </el-form-item>\n      <el-form-item :label=\"$t('table.encState.describe')\" label='数据类型' prop=\"describe\">\n        <el-input type=\"textarea\" v-model=\"encState.describe\" placeholder=\"数据类型\"/>\n\n      </el-form-item>\n      <el-form-item :label=\"$t('table.encState.schema')\" label='schema' prop=\"schema\">\n        <el-input type=\"textarea\" v-model=\"encState.schema\" placeholder=\"schema\"/>\n\n      </el-form-item>\n      <el-form-item :label=\"$t('table.encState.readonly')\" prop=\"readonly\" label='是否必须'  put type=\"radio\">\n        <el-radio-group border='true' v-model=\"encState.readonly\" size=\"medium\">\n          <el-radio-button :label=\"true\">{{ $t(\"common.yes\") }}</el-radio-button>\n          <el-radio-button :label=\"false\">{{ $t(\"common.no\") }}</el-radio-button>\n        </el-radio-group>\n      </el-form-item>\n    </el-form>\n  </el-dialog>\n</template>\n<script>\nimport encStateApi from \"@/api/encState.js\";\n\nexport default {\n  name: \"encStateEdit\",\n  components: {  },\n  props: {\n    dialogVisible: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: \"add\"\n    }\n  },\n  data() {\n    return {\n      encState: this.initencState(),\n      screenWidth: 0,\n      width: this.initWidth(),\n      rules: {\n        key: [\n          {required: true, message: this.$t(\"rules.require\"), trigger: \"blur\"},\n          { min: 1, max: 255, message: '最多不能超过255字符', trigger: \"blur\"}\n        ],\n        name: [\n          {required: true, message: this.$t(\"rules.require\"), trigger: \"blur\"},\n          { min: 1, max: 255, message: '最多不能超过255字符', trigger: \"blur\"}\n        ],\n        value: [\n          { max: 255, message: '最多不能超过255字符', trigger: \"blur\"}\n        ],\n      }\n    };\n  },\n  computed: {\n    isVisible: {\n      get() {\n        return this.dialogVisible;\n      },\n      set() {\n        this.close();\n        this.reset();\n      }\n    },\n    title() {\n      return this.$t(\"common.\" + this.type);\n    }\n  },\n  watch: {},\n  mounted() {\n    window.onresize = () => {\n      return (() => {\n        this.width = this.initWidth();\n      })();\n    };\n  },\n  methods: {\n    initencState() {\n      return {\n        id: \"\",\n        key: '',\n        name: '',\n        value: '',\n        describe: '',\n        readonly: false,\n        schema:'',\n      };\n    },\n    initWidth() {\n      this.screenWidth = document.body.clientWidth;\n      if (this.screenWidth < 991) {\n        return \"90%\";\n      } else if (this.screenWidth < 1400) {\n        return \"45%\";\n      } else {\n        return \"800px\";\n      }\n    },\n    setencState(val) {\n      const vm = this;\n      if (val) {\n        vm.encState = { ...vm.encState, ...val };\n      }\n    },\n    close() {\n      this.$emit(\"close\");\n    },\n    reset() {\n      // 先清除校验，再清除表单，不然有奇怪的bug\n      this.$refs.form.clearValidate();\n      this.$refs.form.resetFields();\n      this.encState = this.initencState();\n    },\n    submitForm() {\n      const vm = this;\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          vm.editSubmit();\n        } else {\n          return false;\n        }\n      });\n    },\n    editSubmit() {\n      const vm = this;\n      if (vm.type === \"edit\") {\n          vm.update();\n  \n      } else {\n          vm.save();\n      }\n    },\n    save() {\n      const vm = this;\n      encStateApi.save(this.encState).then(response => {\n        const res = response.data;\n        if (res.isSuccess) {\n          vm.isVisible = false;\n          vm.$message({\n            message: vm.$t(\"tips.createSuccess\"),\n            type: \"success\"\n          });\n          vm.$emit(\"success\");\n        }\n      });\n    },\n    update() {\n      encStateApi.update(this.encState).then(response => {\n        const res = response.data;\n        if (res.isSuccess) {\n          this.isVisible = false;\n          this.$message({\n            message: this.$t(\"tips.updateSuccess\"),\n            type: \"success\"\n          });\n          this.$emit(\"success\");\n        }\n      });\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped></style>\n"]}]}