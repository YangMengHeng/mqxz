{"remainingRequest":"E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web-master\\src\\views\\lamp\\system\\role\\userRole.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\project\\lamp-web-master\\src\\views\\lamp\\system\\role\\userRole.vue","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport roleApi from '@/api/Role.js'\nimport userApi from '@/api/User.js'\n\nexport default {\n  name: 'UserRoleEdit',\n  components: {},\n  props: {\n    dialogVisible: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    return {\n      userRole: this.initUserRole(),\n      screenWidth: 0,\n      width: this.initWidth(),\n      userList: [],\n      userIdList: [],\n      disabled: false,\n      rules: {\n\n      },\n      renderFunc (h, option) {\n        // return <span title='option.account - {option.name}'>{option.account} - {option.name}</span>\n        return h(\"span\", {\n          \"attrs\": {\n            \"title\": option.account + \" - \" + option.name\n          }\n        }, [option.account, \" - \", option.name])\n      }\n    }\n  },\n  computed: {\n    isVisible: {\n      get () {\n        return this.dialogVisible\n      },\n      set () {\n        this.close()\n        this.reset()\n      }\n    },\n    title () {\n      return '分配角色成员'\n    }\n  },\n  watch: {\n\n  },\n  mounted () {\n    this.initUserList()\n    window.onresize = () => {\n      return (() => {\n        this.width = this.initWidth()\n      })()\n    }\n  },\n  methods: {\n    initUserRole () {\n      return {\n        roleId: '',\n        userIdList: []\n      }\n    },\n    initWidth () {\n      this.screenWidth = document.body.clientWidth\n      if (this.screenWidth < 991) {\n        return '90%'\n      } else if (this.screenWidth < 1400) {\n        return '45%'\n      } else {\n        return '800px'\n      }\n    },\n    initUserList () {\n      userApi.page({ current: 1, size: 100000, model: {state: true} })\n        .then((response) => {\n          const res = response.data\n\n          this.userList = res.data.records\n        }).catch(() => {\n          this.$message({\n            message: this.$t('tips.getDataFail'),\n            type: 'error'\n          })\n        })\n    },\n    setUserRole (val) {\n      const vm = this\n      vm.userRole.roleId = val.id\n      // vm.disabled = val.readonly\n      roleApi.findUserIdByRoleId(val.id)\n        .then((response) => {\n          const res = response.data\n          vm.userRole.userIdList = res.data\n        })\n\n    },\n    close () {\n      this.$emit('close')\n    },\n    reset () {\n      // 先清除校验，再清除表单，不然有奇怪的bug\n      this.$refs.form.clearValidate()\n      this.$refs.form.resetFields()\n      this.userRole = this.initUserRole()\n      this.disabled = false\n    },\n    submitForm () {\n      const vm = this\n      this.$refs.form.validate((valid) => {\n        if (valid) {\n          vm.editSubmit()\n        } else {\n          return false\n        }\n      })\n    },\n    editSubmit () {\n      const vm = this\n      console.log(this.userRole)\n\n      roleApi.saveUserRole(this.userRole)\n        .then((response) => {\n          const res = response.data\n          if (res.isSuccess) {\n            vm.isVisible = false\n            vm.$message({\n              message: vm.$t('tips.createSuccess'),\n              type: 'success'\n            })\n            vm.$emit('success')\n          }\n        })\n    },\n    filterMethod (query, item) {\n      return item.name.indexOf(query) > -1 || item.account.indexOf(query) > -1\n    }\n  }\n}\n",{"version":3,"sources":["userRole.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"userRole.vue","sourceRoot":"src/views/lamp/system/role","sourcesContent":["<template>\n  <el-dialog :close-on-click-modal=\"false\" :title=\"title\" :visible.sync=\"isVisible\" :width=\"width\" top=\"50px\">\n    <el-form :model=\"userRole\" :rules=\"rules\" label-position=\"right\" label-width=\"100px\" ref=\"form\">\n      <el-form-item label=\"用户\" prop=\"userIdList\">\n        <el-transfer\n          :data=\"userList\"\n          :filter-method=\"filterMethod\"\n          :props=\"{\n            key: 'id',\n            label: 'name'\n          }\"\n          :render-content=\"renderFunc\"\n          :right-default-checked=\"userRole.userIdList\"\n          filter-placeholder=\"用户名\"\n          filterable\n          :titles=\"['全部用户', '已选用户']\"\n          style=\"text-align: left; display: inline-block\"\n          v-model=\"userRole.userIdList\"\n        />\n      </el-form-item>\n    </el-form>\n    <div class=\"dialog-footer\" slot=\"footer\">\n      <el-button @click=\"isVisible = false\" plain type=\"warning\">{{ $t('common.cancel') }}</el-button>\n      <el-button :disabled=\"disabled\" @click=\"submitForm\" plain type=\"primary\">{{ $t('common.confirm') }}</el-button>\n    </div>\n  </el-dialog>\n</template>\n<script>\nimport roleApi from '@/api/Role.js'\nimport userApi from '@/api/User.js'\n\nexport default {\n  name: 'UserRoleEdit',\n  components: {},\n  props: {\n    dialogVisible: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    return {\n      userRole: this.initUserRole(),\n      screenWidth: 0,\n      width: this.initWidth(),\n      userList: [],\n      userIdList: [],\n      disabled: false,\n      rules: {\n\n      },\n      renderFunc (h, option) {\n        // return <span title='option.account - {option.name}'>{option.account} - {option.name}</span>\n        return h(\"span\", {\n          \"attrs\": {\n            \"title\": option.account + \" - \" + option.name\n          }\n        }, [option.account, \" - \", option.name])\n      }\n    }\n  },\n  computed: {\n    isVisible: {\n      get () {\n        return this.dialogVisible\n      },\n      set () {\n        this.close()\n        this.reset()\n      }\n    },\n    title () {\n      return '分配角色成员'\n    }\n  },\n  watch: {\n\n  },\n  mounted () {\n    this.initUserList()\n    window.onresize = () => {\n      return (() => {\n        this.width = this.initWidth()\n      })()\n    }\n  },\n  methods: {\n    initUserRole () {\n      return {\n        roleId: '',\n        userIdList: []\n      }\n    },\n    initWidth () {\n      this.screenWidth = document.body.clientWidth\n      if (this.screenWidth < 991) {\n        return '90%'\n      } else if (this.screenWidth < 1400) {\n        return '45%'\n      } else {\n        return '800px'\n      }\n    },\n    initUserList () {\n      userApi.page({ current: 1, size: 100000, model: {state: true} })\n        .then((response) => {\n          const res = response.data\n\n          this.userList = res.data.records\n        }).catch(() => {\n          this.$message({\n            message: this.$t('tips.getDataFail'),\n            type: 'error'\n          })\n        })\n    },\n    setUserRole (val) {\n      const vm = this\n      vm.userRole.roleId = val.id\n      // vm.disabled = val.readonly\n      roleApi.findUserIdByRoleId(val.id)\n        .then((response) => {\n          const res = response.data\n          vm.userRole.userIdList = res.data\n        })\n\n    },\n    close () {\n      this.$emit('close')\n    },\n    reset () {\n      // 先清除校验，再清除表单，不然有奇怪的bug\n      this.$refs.form.clearValidate()\n      this.$refs.form.resetFields()\n      this.userRole = this.initUserRole()\n      this.disabled = false\n    },\n    submitForm () {\n      const vm = this\n      this.$refs.form.validate((valid) => {\n        if (valid) {\n          vm.editSubmit()\n        } else {\n          return false\n        }\n      })\n    },\n    editSubmit () {\n      const vm = this\n      console.log(this.userRole)\n\n      roleApi.saveUserRole(this.userRole)\n        .then((response) => {\n          const res = response.data\n          if (res.isSuccess) {\n            vm.isVisible = false\n            vm.$message({\n              message: vm.$t('tips.createSuccess'),\n              type: 'success'\n            })\n            vm.$emit('success')\n          }\n        })\n    },\n    filterMethod (query, item) {\n      return item.name.indexOf(query) > -1 || item.account.indexOf(query) > -1\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n</style>\n"]}]}