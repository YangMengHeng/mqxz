{"remainingRequest":"E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web-master\\src\\views\\lamp\\system\\dictionary\\dictionaryItemEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\project\\lamp-web-master\\src\\views\\lamp\\system\\dictionary\\dictionaryItemEdit.vue","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1686711135008},{"path":"E:\\project\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport dictionaryApi from '@/api/Dictionary.js'\n\n\nexport default {\n  name: 'DictionaryItemEdit',\n  components: {},\n  props: {\n    dialogVisible: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'add'\n    }\n  },\n  data() {\n    return {\n      dictionary: this.initDictionaryItem(),\n      screenWidth: 0,\n      width: this.initWidth(),\n      rules: {\n        type: {required: true, message: this.$t('rules.require'), trigger: 'blur'},\n        label: {required: true, message: this.$t('rules.require'), trigger: 'blur'},\n        code: [\n          {required: true, message: this.$t('rules.require'), trigger: 'blur'},\n          {min: 1, max: 64, message: this.$t('rules.range4to10'), trigger: 'blur'}\n        ],\n        name: [\n          {required: true, message: this.$t('rules.require'), trigger: 'blur'},\n          {min: 1, max: 64, message: this.$t('rules.range4to10'), trigger: 'blur'}\n        ],\n        describe: [\n          {min: 1, max: 200, message: this.$t('rules.range4to10'), trigger: 'blur'}\n        ],\n        state: {required: true, message: this.$t('rules.require'), trigger: 'blur'}\n      }\n    }\n  },\n  computed: {\n    isVisible: {\n      get() {\n        return this.dialogVisible\n      },\n      set() {\n        this.close()\n        this.reset()\n      }\n    },\n    title() {\n      return this.type === 'add' ? this.$t('common.add') : this.$t('common.edit')\n    }\n  },\n  watch: {},\n  mounted() {\n    window.onresize = () => {\n      return (() => {\n        this.width = this.initWidth()\n      })()\n    }\n  },\n  methods: {\n    initDictionaryItem() {\n      return {\n        id: '',\n        type: '',\n        label: '',\n        code: '',\n        name: '',\n        state: true,\n        sortValue: 1,\n        describe: '',\n        icon: '',\n        cssClass: '',\n        cssStyle: '',\n      }\n    },\n    initWidth() {\n      this.screenWidth = document.body.clientWidth\n      if (this.screenWidth < 991) {\n        return '90%'\n      } else if (this.screenWidth < 1400) {\n        return '45%'\n      } else {\n        return '800px'\n      }\n    },\n    setDictionaryItem(val) {\n      const vm = this\n      if (val) {\n        vm.dictionary = {...val}\n      }\n    },\n    close() {\n      this.$emit('close')\n    },\n    reset() {\n      // 先清除校验，再清除表单，不然有奇怪的bug\n      this.$refs.form.clearValidate()\n      this.$refs.form.resetFields()\n      this.dictionary = this.initDictionaryItem()\n    },\n    submitForm() {\n      const vm = this\n      this.$refs.form.validate((valid) => {\n        if (valid) {\n          vm.editSubmit()\n        } else {\n          return false\n        }\n      })\n    },\n    editSubmit() {\n      const vm = this\n      if (vm.type === 'add') {\n        vm.save()\n      } else {\n        vm.update()\n      }\n    },\n    save() {\n      const vm = this\n      dictionaryApi.save(this.dictionary)\n        .then((response) => {\n          const res = response.data\n          if (res.isSuccess) {\n            vm.isVisible = false\n            vm.$message({\n              message: vm.$t('tips.createSuccess'),\n              type: 'success'\n            })\n            vm.$emit('success')\n          }\n        })\n    },\n    update() {\n      dictionaryApi.update(this.dictionary)\n        .then((response) => {\n          const res = response.data\n          if (res.isSuccess) {\n            this.isVisible = false\n            this.$message({\n              message: this.$t('tips.updateSuccess'),\n              type: 'success'\n            })\n            this.$emit('success')\n          }\n        })\n    }\n  }\n}\n",{"version":3,"sources":["dictionaryItemEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"dictionaryItemEdit.vue","sourceRoot":"src/views/lamp/system/dictionary","sourcesContent":["<template>\n  <el-dialog :close-on-click-modal=\"false\" :close-on-press-escape=\"true\" :title=\"title\" :type=\"type\"\n             :visible.sync=\"isVisible\" :width=\"width\" top=\"50px\">\n    <el-form :model=\"dictionary\" :rules=\"rules\" label-position=\"right\" label-width=\"100px\" ref=\"form\">\n      <el-form-item :label=\"$t('table.dictionary.type')\" prop=\"type\">\n        <el-input :disabled=\"true\" v-model=\"dictionary.type\"/>\n      </el-form-item>\n      <el-form-item :label=\"$t('table.dictionary.label')\" prop=\"type\">\n        <el-input :disabled=\"true\" v-model=\"dictionary.label\"/>\n      </el-form-item>\n      <el-form-item :label=\"$t('table.dictionary.code')\" prop=\"code\">\n        <el-input :disabled=\"type==='edit'\" v-model=\"dictionary.code\"/>\n      </el-form-item>\n      <el-form-item :label=\"$t('table.dictionary.name')\" prop=\"name\">\n        <el-input v-model=\"dictionary.name\"/>\n      </el-form-item>\n      <el-form-item :label=\"$t('table.dictionary.state')\" prop=\"state\">\n        <el-radio-group v-model=\"dictionary.state\">\n          <el-radio :label=\"true\">{{ $t('common.state.valid') }}</el-radio>\n          <el-radio :label=\"false\">{{ $t('common.state.invalid') }}</el-radio>\n        </el-radio-group>\n      </el-form-item>\n      <el-form-item :label=\"$t('table.dictionary.sortValue')\" prop=\"sortValue\">\n        <el-input v-model=\"dictionary.sortValue\"/>\n      </el-form-item>\n      <el-form-item :label=\"$t('table.dictionary.describe')\" prop=\"describe\">\n        <el-input v-model=\"dictionary.describe\"/>\n      </el-form-item>\n      <el-form-item :label=\"$t('table.dictionary.icon')\" prop=\"describe\">\n        <e-icon-picker v-model=\"dictionary.icon\"/>\n      </el-form-item>\n      <el-form-item :label=\"$t('table.dictionary.cssClass')\" prop=\"describe\">\n        <el-input v-model=\"dictionary.cssClass\"/>\n      </el-form-item>\n      <el-form-item :label=\"$t('table.dictionary.cssStyle')\" prop=\"describe\">\n        <el-input v-model=\"dictionary.cssStyle\"/>\n      </el-form-item>\n    </el-form>\n    <div class=\"dialog-footer\" slot=\"footer\">\n      <el-button @click=\"isVisible = false\" plain type=\"warning\">{{ $t('common.cancel') }}</el-button>\n      <el-button @click=\"submitForm\" plain type=\"primary\">{{ $t('common.confirm') }}</el-button>\n    </div>\n  </el-dialog>\n</template>\n<script>\nimport dictionaryApi from '@/api/Dictionary.js'\n\n\nexport default {\n  name: 'DictionaryItemEdit',\n  components: {},\n  props: {\n    dialogVisible: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'add'\n    }\n  },\n  data() {\n    return {\n      dictionary: this.initDictionaryItem(),\n      screenWidth: 0,\n      width: this.initWidth(),\n      rules: {\n        type: {required: true, message: this.$t('rules.require'), trigger: 'blur'},\n        label: {required: true, message: this.$t('rules.require'), trigger: 'blur'},\n        code: [\n          {required: true, message: this.$t('rules.require'), trigger: 'blur'},\n          {min: 1, max: 64, message: this.$t('rules.range4to10'), trigger: 'blur'}\n        ],\n        name: [\n          {required: true, message: this.$t('rules.require'), trigger: 'blur'},\n          {min: 1, max: 64, message: this.$t('rules.range4to10'), trigger: 'blur'}\n        ],\n        describe: [\n          {min: 1, max: 200, message: this.$t('rules.range4to10'), trigger: 'blur'}\n        ],\n        state: {required: true, message: this.$t('rules.require'), trigger: 'blur'}\n      }\n    }\n  },\n  computed: {\n    isVisible: {\n      get() {\n        return this.dialogVisible\n      },\n      set() {\n        this.close()\n        this.reset()\n      }\n    },\n    title() {\n      return this.type === 'add' ? this.$t('common.add') : this.$t('common.edit')\n    }\n  },\n  watch: {},\n  mounted() {\n    window.onresize = () => {\n      return (() => {\n        this.width = this.initWidth()\n      })()\n    }\n  },\n  methods: {\n    initDictionaryItem() {\n      return {\n        id: '',\n        type: '',\n        label: '',\n        code: '',\n        name: '',\n        state: true,\n        sortValue: 1,\n        describe: '',\n        icon: '',\n        cssClass: '',\n        cssStyle: '',\n      }\n    },\n    initWidth() {\n      this.screenWidth = document.body.clientWidth\n      if (this.screenWidth < 991) {\n        return '90%'\n      } else if (this.screenWidth < 1400) {\n        return '45%'\n      } else {\n        return '800px'\n      }\n    },\n    setDictionaryItem(val) {\n      const vm = this\n      if (val) {\n        vm.dictionary = {...val}\n      }\n    },\n    close() {\n      this.$emit('close')\n    },\n    reset() {\n      // 先清除校验，再清除表单，不然有奇怪的bug\n      this.$refs.form.clearValidate()\n      this.$refs.form.resetFields()\n      this.dictionary = this.initDictionaryItem()\n    },\n    submitForm() {\n      const vm = this\n      this.$refs.form.validate((valid) => {\n        if (valid) {\n          vm.editSubmit()\n        } else {\n          return false\n        }\n      })\n    },\n    editSubmit() {\n      const vm = this\n      if (vm.type === 'add') {\n        vm.save()\n      } else {\n        vm.update()\n      }\n    },\n    save() {\n      const vm = this\n      dictionaryApi.save(this.dictionary)\n        .then((response) => {\n          const res = response.data\n          if (res.isSuccess) {\n            vm.isVisible = false\n            vm.$message({\n              message: vm.$t('tips.createSuccess'),\n              type: 'success'\n            })\n            vm.$emit('success')\n          }\n        })\n    },\n    update() {\n      dictionaryApi.update(this.dictionary)\n        .then((response) => {\n          const res = response.data\n          if (res.isSuccess) {\n            this.isVisible = false\n            this.$message({\n              message: this.$t('tips.updateSuccess'),\n              type: 'success'\n            })\n            this.$emit('success')\n          }\n        })\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n</style>\n"]}]}