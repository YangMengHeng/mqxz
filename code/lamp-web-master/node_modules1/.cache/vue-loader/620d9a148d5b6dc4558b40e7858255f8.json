{"remainingRequest":"E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web-master\\src\\views\\lamp\\system\\area\\index.vue?vue&type=style&index=0&id=ba7d019a&prod&lang=scss&scoped=true&","dependencies":[{"path":"E:\\project\\lamp-web-master\\src\\views\\lamp\\system\\area\\index.vue","mtime":1689129834675},{"path":"E:\\project\\lamp-web-master\\node_modules\\css-loader\\index.js","mtime":1686711135550},{"path":"E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1686711138278},{"path":"E:\\project\\lamp-web-master\\node_modules\\postcss-loader\\src\\index.js","mtime":1686711136346},{"path":"E:\\project\\lamp-web-master\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.area {\n  margin: 10px;\n\n  .app-container {\n    margin: 0 0 10px 0 !important;\n  }\n}\n\n.el-card.is-always-shadow {\n  box-shadow: none;\n}\n\n.el-card {\n  border-radius: 0;\n  border: none;\n\n  .el-card__header {\n    padding: 10px 20px !important;\n    border-bottom: 1px solid #f1f1f1 !important;\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiVA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/lamp/system/area","sourcesContent":[" <template>\n  <div class=\"area\">\n    <el-row :gutter=\"10\">\n      <el-col :sm=\"12\" :xs=\"24\">\n        <div class=\"app-container\">\n          <div class=\"filter-container\">\n            <el-input\n              :placeholder=\"$t('table.area.label')\"\n              class=\"filter-item search-item\"\n              v-model=\"label\"\n            />\n            <el-button\n              @click=\"search\"\n              class=\"filter-item\"\n              plain\n              type=\"primary\"\n            >{{ $t(\"table.search\") }}\n            </el-button\n            >\n            <el-button @click=\"reset\" class=\"filter-item\" plain type=\"warning\" >\n              {{ $t(\"table.reset\") }}\n            </el-button>\n            <el-button @click=\"add\" class=\"filter-item\" plain type=\"danger\" v-has-permission=\"['authority:area:add']\">\n              {{ $t(\"table.add\") }}\n            </el-button>\n            <el-dropdown\n              class=\"filter-item\"\n              trigger=\"click\"\n              v-has-any-permission=\"[ 'authority:area:delete', 'authority:area:export']\"\n            >\n              <el-button>\n                {{ $t(\"table.more\") }}\n                <i class=\"el-icon-arrow-down el-icon--right\"/>\n              </el-button>\n              <el-dropdown-menu slot=\"dropdown\">\n                <el-dropdown-item\n                  @click.native=\"deleteArea\"\n                  v-has-permission=\"['authority:area:delete']\"\n                >{{ $t(\"table.delete\") }}\n                </el-dropdown-item>\n\n              </el-dropdown-menu>\n            </el-dropdown>\n          </div>\n          <el-tree\n            :check-strictly=\"true\"\n            :data=\"areaTree\"\n            :filter-node-method=\"filterNode\"\n            @node-click=\"nodeClick\"\n            :load=\"loadTree\"\n            highlight-current\n            node-key=\"id\"\n            ref=\"areaTree\"\n            :lazy=\"true\"\n            show-checkbox\n          />\n        </div>\n      </el-col>\n      <el-col :sm=\"12\" :xs=\"24\">\n        <el-card class=\"box-card\">\n          <div class=\"clearfix\" slot=\"header\">\n            <span>{{\n              area.id === \"\" ? this.$t(\"common.add\") : this.$t(\"common.edit\")\n            }}</span>\n          </div>\n          <div>\n           \n              </el-form-item>\n              <el-form-item :label=\"$t('table.area.label')\" prop=\"label\" label='属性名'>\n                <el-input v-model=\"area.label\"/>\n              </el-form-item>\n              <el-form-item :label=\"$t('table.area.code')\" prop=\"code\" label='类型'>\n                <el-input v-model=\"area.code\"/>\n              </el-form-item>\n              <el-form-item :label=\"$t('table.area.fullName')\" prop=\"fullName\" label='长度' >\n                <el-input v-model=\"area.fullName\"/>\n              </el-form-item>\n              <el-form-item\n                :label=\"$t('table.area.longitude')\"\n                prop=\"longitude\"\n              >\n                <el-input v-model=\"area.longitude\"/>\n              </el-form-item>\n              <el-form-item :label=\"$t('table.area.latitude')\" prop=\"latitude\">\n                <el-input v-model=\"area.latitude\"/>\n              </el-form-item>\n              <el-form-item :label=\"$t('table.area.source')\" prop=\"source\">\n                <el-input v-model=\"area.source\"/>\n              </el-form-item>\n              <el-form-item :label=\"$t('table.area.level')\" prop=\"level\">\n                <el-radio-group\n                  border=\"true\"\n                  size=\"small\"\n                  v-model=\"area.level\"\n                >\n                  <el-radio-button :key=\"index\" :label=\"item.code\" :value=\"item.code\" v-for=\"(item, key, index) in dicts.AREA_LEVEL\">\n                    {{ item.name }}\n                  </el-radio-button>\n                </el-radio-group>\n              </el-form-item>\n\n              <el-form-item\n                :label=\"$t('table.area.sortValue')\"\n                prop=\"sortValue\"\n              >\n                <el-input-number\n                  :max=\"100\"\n                  :min=\"0\"\n                  @change=\"handleNumChange\"\n                  v-model=\"area.sortValue\"\n                />\n              </el-form-item>\n            </el-form>\n          </div>\n        </el-card>\n        <el-card class=\"box-card\" style=\"margin-top: -2rem;\">\n          <el-row>\n            <el-col :span=\"24\" style=\"text-align: right\">\n              <el-button @click=\"submit\" plain type=\"primary\">{{\n                area.id === \"\" ? this.$t(\"common.add\") : this.$t(\"common.edit\")\n                }}\n              </el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n<script>\n  import areaApi from \"@/api/Area.js\";\n  import { initDicts } from '@/utils/commons'\n\n  export default {\n    name: \"AreaManager\",\n    data() {\n      return {\n        label: \"\",\n        areaTree: [],\n        dicts:{AREA_LEVEL:[]},\n        area: this.initArea(),\n        rules: {\n          label: [\n            {\n              required: true,\n              message: this.$t(\"rules.require\"),\n              trigger: \"blur\"\n            },\n            {\n              min: 1,\n              max: 255,\n              message: this.$t(\"rules.range3to10\"),\n              trigger: \"blur\"\n            }\n          ],\n          code: [\n            {\n              required: true,\n              message: this.$t(\"rules.require\"),\n              trigger: \"blur\"\n            },\n            {\n              min: 1,\n              max: 255,\n              message: this.$t(\"rules.range3to10\"),\n              trigger: \"blur\"\n            },\n            {\n              validator: (rule, value, callback) => {\n                areaApi.check(value, this.area.id).then(response => {\n                  const res = response.data;\n                  if (res.data) {\n                    callback('编码重复');\n                  } else {\n                    callback();\n                  }\n                }).catch(() => callback())\n              },\n              trigger: \"blur\"\n            }\n          ]\n        }\n      };\n    },\n    mounted() {\n      initDicts('AREA_LEVEL', this.dicts);\n    },\n    methods: {\n      initArea() {\n        return {\n          id: \"\",\n          code: \"\",\n          label: \"\",\n          parentId: 0,\n          parentLabel: \"\",\n          fullName: \"\",\n          longitude: \"\",\n          latitude: \"\",\n          source: \"\",\n          level: \"PROVINCE\",\n          sortValue: 0\n        };\n      },\n      initAreaTree(parentId = 0) {\n        areaApi.linkage({parentId: parentId}).then(response => {\n          const res = response.data;\n          this.areaTree = res.data;\n        });\n      },\n      loadTree(node, resolve) {\n        areaApi.linkage({parentId: node.data.id}).then(response => {\n          const res = response.data;\n          resolve(res.data);\n        });\n      },\n      handleNumChange(val) {\n        this.area.sortValue = val;\n      },\n      filterNode(value, data) {\n        if (!value) return true;\n        return data.label.indexOf(value) !== -1;\n      },\n      nodeClick(data) {\n        this.area = {...data};\n\n        const parent = this.$refs.areaTree.getNode(data.parentId);\n        if (parent) {\n          this.area.parentLabel = parent.label;\n        }\n\n        this.$refs.form.clearValidate();\n      },\n      add() {\n        this.resetForm();\n        const checked = this.$refs.areaTree.getCheckedNodes();\n        if (checked.length > 1) {\n          this.$message({\n            message: this.$t(\"tips.onlyChooseOne\"),\n            type: \"warning\"\n          });\n        } else if (checked.length > 0) {\n          this.area.parentId = checked[0].id;\n          this.area.parentLabel = checked[0].label;\n        } else {\n          this.area.parentId = 0;\n          this.area.parentLabel = \"\";\n        }\n      },\n      deleteArea() {\n        const checked = this.$refs.areaTree.getCheckedKeys();\n        if (checked.length === 0) {\n          this.$message({\n            message: this.$t(\"tips.noNodeSelected\"),\n            type: \"warning\"\n          });\n        } else {\n          this.$confirm(\n            this.$t(\"tips.confirmDeleteNode\"),\n            this.$t(\"common.tips\"),\n            {\n              confirmButtonText: this.$t(\"common.confirm\"),\n              cancelButtonText: this.$t(\"common.cancel\"),\n              type: \"warning\"\n            }\n          )\n            .then(() => {\n              areaApi.delete(checked).then(response => {\n                const res = response.data;\n                if (res.isSuccess) {\n                  this.$message({\n                    message: this.$t(\"tips.deleteSuccess\"),\n                    type: \"success\"\n                  });\n                }\n                this.reset();\n              });\n            })\n            .catch(() => {\n              this.$refs.areaTree.setCheckedKeys([]);\n            });\n        }\n      },\n      search() {\n        this.$refs.areaTree.filter(this.label);\n      },\n      reset() {\n        this.initAreaTree();\n        this.label = \"\";\n        this.resetForm();\n      },\n      submit() {\n        this.$refs.form.validate(valid => {\n          if (valid) {\n            if (this.area.id) {\n              this.update();\n            } else {\n              this.save();\n            }\n          } else {\n            return false;\n          }\n        });\n      },\n      save() {\n        areaApi.save({...this.area}).then(response => {\n          const res = response.data;\n          if (res.isSuccess) {\n            this.$message({\n              message: this.$t(\"tips.createSuccess\"),\n              type: \"success\"\n            });\n          }\n\n          this.reset();\n        });\n      },\n      update() {\n        areaApi.update({...this.area}).then(response => {\n          const res = response.data;\n          if (res.isSuccess) {\n            this.$message({\n              message: this.$t(\"tips.updateSuccess\"),\n              type: \"success\"\n            });\n          }\n          this.reset();\n        });\n      },\n      resetForm() {\n        this.$refs.form.clearValidate();\n        this.$refs.form.resetFields();\n        this.area = this.initArea();\n      }\n    }\n  };\n</script>\n<style lang=\"scss\" scoped>\n  .area {\n    margin: 10px;\n\n    .app-container {\n      margin: 0 0 10px 0 !important;\n    }\n  }\n\n  .el-card.is-always-shadow {\n    box-shadow: none;\n  }\n\n  .el-card {\n    border-radius: 0;\n    border: none;\n\n    .el-card__header {\n      padding: 10px 20px !important;\n      border-bottom: 1px solid #f1f1f1 !important;\n    }\n  }\n</style>\n"]}]}