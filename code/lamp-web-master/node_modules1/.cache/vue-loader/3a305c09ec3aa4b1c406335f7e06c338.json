{"remainingRequest":"E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web-master\\src\\views\\lamp\\resources\\attachment\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\project\\lamp-web-master\\src\\views\\lamp\\resources\\attachment\\edit.vue","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport elDragDialog from '@/directive/el-drag-dialog'\nimport fileUpload from \"@/components/lamp/fileUpload\"\n\nexport default {\n  name: 'AttachmentEdit',\n  directives: { elDragDialog, fileUpload },\n  components: { fileUpload },\n  props: {\n    dialogVisible: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'add'\n    }\n  },\n  data () {\n    return {\n      accept: \"image/jpeg, image/gif, image/png\",\n      attachment: this.initAttachment(),\n      screenWidth: 0,\n      width: this.initWidth(),\n      fileLength: 0,\n      disabled: false,\n      rules: {\n        bizType: [\n          { required: true, message: this.$t('rules.require'), trigger: 'blur' },\n          { min: 0, max: 255, message: this.$t('rules.range0to255'), trigger: 'blur' },\n        ],\n        bizId: { min: 0, max: 255, message: this.$t('rules.range0to255'), trigger: 'blur' },\n        fileLength: {          required: true, trigger: \"change\",\n          validator: (rule, value, callback) => {\n            const vm = this;\n            if (vm.fileLength === 0) {\n              callback(new Error(\"请上传文件\"))\n            } else if (vm.fileLength > 5) {\n              callback(new Error(\"一次性只能上传5个文件\"))\n            } else {\n              callback()\n            }\n          }\n        }\n      }\n    }\n  },\n  computed: {\n    isVisible: {\n      get () {\n        return this.dialogVisible\n      },\n      set () {\n        this.close()\n        this.reset()\n      }\n    },\n    title () {\n      return this.$t('common.upload')\n    }\n  },\n  watch: {\n\n  },\n  mounted () {\n    window.onresize = () => {\n      return (() => {\n        this.width = this.initWidth()\n      })()\n    }\n  },\n  methods: {\n    initAttachment () {\n      return {\n        bizType: 'BASE_FILE',\n        file: null,\n      }\n    },\n    handleDrag () {\n      console.log(`我被拖动了`)\n    },\n    // 附件长度校验\n    fileLengthVaild (data) {\n      const vm = this;\n      vm.fileLength = data || 0;\n    },\n    initWidth () {\n      this.screenWidth = document.body.clientWidth\n      if (this.screenWidth < 991) {\n        return '90%'\n      } else if (this.screenWidth < 1400) {\n        return '45%'\n      } else {\n        return '800px'\n      }\n    },\n    setAttachment (val) {\n      const vm = this\n      if (val) {\n        vm.attachment = { ...val }\n      }\n    },\n    close () {\n      this.$emit('close')\n    },\n    reset () {\n      // 先清除校验，再清除表单，不然有奇怪的bug\n      this.$refs.form.clearValidate()\n      this.$refs.form.resetFields()\n      this.attachment = this.initAttachment()\n      this.$refs.fileRef.init({\n        id: \"\",\n        bizId: \"\",\n        bizType: \"\",\n      })\n\n    },\n    submitForm () {\n      const vm = this\n      this.$refs.form.validate((valid) => {\n        if (valid) {\n          vm.editSubmit()\n        } else {\n          return false\n        }\n      })\n    },\n    editSubmit () {\n      const vm = this\n      vm.disabled = true\n      vm.$refs.fileRef.submitFile(this.attachment.id, this.attachment.bizId, this.attachment.bizType)\n    },\n    setIdAndSubmit (isUploadCompleted) {\n      const vm = this\n      if (isUploadCompleted) {\n        vm.disabled = false\n        vm.isVisible = false\n        vm.$message({\n          message: vm.$t('tips.createSuccess'),\n          type: 'success'\n        })\n        vm.$emit('success')\n      }\n    }\n\n  }\n}\n",null]}