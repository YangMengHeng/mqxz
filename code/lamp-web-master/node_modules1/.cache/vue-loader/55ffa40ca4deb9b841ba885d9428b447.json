{"remainingRequest":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\src\\views\\lamp\\developer\\db\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\src\\views\\lamp\\developer\\db\\index.vue","mtime":1679380940000},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport iFrame from '@/components/iFrame'\nimport { druid } from '@/settings'\n\nexport default {\n  components: { iFrame },\n  data () {\n    return {\n      authorityDruid: '',\n      fileDruid: '',\n      msgDruid: '',\n      activeName: 'first'\n    }\n  },\n  computed: {\n\n  },\n  mounted () {\n    setTimeout(() => {\n      this.$notify.info({\n        title: this.$t('common.tips'),\n        message: this.$t('tips.iframeGrant'),\n        duration: 5000\n      })\n    }, 1000)\n\n    this.authorityDruid = this.druidUrl(\"authority\")\n    this.$refs.authorityDruid.url = this.authorityDruid\n\n    this.fileDruid = this.druidUrl(\"file\")\n    this.$refs.fileDruid.url = this.fileDruid\n\n    this.msgDruid = this.druidUrl(\"msg\")\n    this.$refs.msgDruid.url = this.msgDruid\n  },\n  methods: {\n    authorityRefresh (u) {\n      this.authorityDruid = u\n    },\n    fileRefresh (u) {\n      this.fileDruid = u\n    },\n    msgRefresh (u) {\n      this.msgDruid = u\n    },\n    handleClick (tab, event) {\n      console.log(tab, event);\n    },\n    druidUrl (service) {\n      if (druid[service]) {\n        return druid[service][process.env.NODE_ENV]\n      } else {\n        return service\n      }\n    }\n  }\n}\n",null]}