{"remainingRequest":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web1(原版)\\lamp-web-master\\src\\views\\profile\\components\\Password.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\src\\views\\profile\\components\\Password.vue","mtime":1679380940000},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport userApi from '@/api/User.js'\nexport default {\n  props: {\n    user: {\n      type: Object,\n      default: () => {\n        return {\n\n        }\n      }\n    }\n  },\n  data () {\n    return {\n      p: {\n        oldPassword: '',\n        password: '',\n        confirmPassword: ''\n      },\n      rules: {\n        oldPassword: [\n          { required: true, message: this.$t('rules.require'), trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: this.$t('rules.require'), trigger: 'blur' },\n          { min: 6, max: 20, message: this.$t('rules.range6to20'), trigger: 'blur' }\n        ],\n        confirmPassword: [\n          { required: true, message: this.$t('rules.require'), trigger: 'blur' },\n          {            validator: (rule, value, callback) => {\n              if (this.p.password !== value) {\n                callback(this.$t('tips.notEqual'))\n              } else {\n                callback()\n              }\n            }, trigger: 'blur'          }\n        ]\n      }\n    }\n  },\n  methods: {\n    submit () {\n      this.$refs.form.validate((valid) => {\n        if (valid) {\n          userApi.updatePassword({\n            ...this.p,\n            ...{ id: this.user.id }\n          }).then((response) => {\n            const res = response.data\n            if (res.isSuccess) {\n              this.$message({\n                message: this.$t('tips.updateSuccess'),\n                type: 'success'\n              })\n              this.$refs.form.clearValidate()\n              this.$refs.form.resetFields()\n            }\n          })\n        } else {\n          return false\n        }\n      })\n    }\n  }\n}\n",null]}