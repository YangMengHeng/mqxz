{"remainingRequest":"E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web-master\\src\\layout\\components\\Sidebar\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\project\\lamp-web-master\\src\\layout\\components\\Sidebar\\index.vue","mtime":1688113820490},{"path":"E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1686711135008},{"path":"E:\\project\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Logo from './Logo'\nimport SidebarItem from './SidebarItem'\nimport variables from '@/styles/variables.scss'\n\nexport default {\n  components: { SidebarItem, Logo },\n  computed: {\n    activeMenu () {\n      const route = this.$route\n      const { meta, path } = route\n      if (meta.activeMenu) {\n        return meta.activeMenu\n      }\n      return path\n    },\n    uniqueOpened () {\n      return this.$store.state.setting.uniqueOpened;\n    },\n    showLogo () {\n      return this.$store.state.setting.sidebarLogo\n    },\n    variables () {\n      return variables\n    },\n    isCollapse () {\n      return !this.$store.state.setting.sidebar.opened\n    },\n    userRoutes () {\n      return this.$store.state.account.routes\n    }\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/layout/components/Sidebar","sourcesContent":["<template>\n  <div :class=\"{&quot;has-logo&quot;:showLogo}\">\n    <logo\n      v-if=\"showLogo\"\n      :collapse=\"isCollapse\"\n    />\n    <el-scrollbar wrap-class=\"scrollbar-wrapper\">\n      <el-menu\n        :default-active=\"activeMenu\"\n        :collapse=\"isCollapse\"\n        :background-color=\"variables.menuBg\"\n        :text-color=\"variables.menuText\"\n        :unique-opened=\"uniqueOpened\"\n        :active-text-color=\"variables.menuActiveText\"\n        :collapse-transition=\"true\"\n        mode=\"vertical\"\n      >\n        <sidebar-item\n          v-for=\"route in userRoutes\"\n          :key=\"route.path\"\n          :item=\"route\"\n          :base-path=\"route.path\"\n        />\n      </el-menu>\n    </el-scrollbar>\n  </div>\n</template>\n\n<script>\nimport Logo from './Logo'\nimport SidebarItem from './SidebarItem'\nimport variables from '@/styles/variables.scss'\n\nexport default {\n  components: { SidebarItem, Logo },\n  computed: {\n    activeMenu () {\n      const route = this.$route\n      const { meta, path } = route\n      if (meta.activeMenu) {\n        return meta.activeMenu\n      }\n      return path\n    },\n    uniqueOpened () {\n      return this.$store.state.setting.uniqueOpened;\n    },\n    showLogo () {\n      return this.$store.state.setting.sidebarLogo\n    },\n    variables () {\n      return variables\n    },\n    isCollapse () {\n      return !this.$store.state.setting.sidebar.opened\n    },\n    userRoutes () {\n      return this.$store.state.account.routes\n    }\n  }\n}\n</script>\n"]}]}