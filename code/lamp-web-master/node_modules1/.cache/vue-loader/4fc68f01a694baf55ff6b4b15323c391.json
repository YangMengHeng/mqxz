{"remainingRequest":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web-master(finish\\lamp-web-master\\src\\views\\lamp\\system\\application\\index.vue?vue&type=style&index=0&id=e6ec69c0&lang=scss&scoped=true&","dependencies":[{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\src\\views\\lamp\\system\\application\\index.vue","mtime":1689748386498},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\css-loader\\index.js","mtime":1686711135550},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1686711138278},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\postcss-loader\\src\\index.js","mtime":1686711136346},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.item {\n  margin-top: 7px;\n}\n\n.box-item {\n  margin-top: 15px;\n\n  aside {\n    word-wrap: break-word;\n    margin-top: 15px;\n  }\n\n  pre {\n    white-space: pre-wrap;\n    font-size: 0.8em;\n    line-height: 1.5em;\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0VA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/lamp/system/application","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-input :placeholder=\"$t('table.application.clientId')\" class=\"filter-item search-item\" placeholder='属性名'\n                v-model=\"queryParams.model.clientId\"/>\n      <el-input :placeholder=\"$t('table.application.name')\" class=\"filter-item search-item\" placeholder='类型'\n                v-model=\"queryParams.model.name\"/>\n      <el-date-picker\n        :range-separator=\"null\"\n        :start-placeholder=\"$t('table.createTime')\"\n        class=\"filter-item search-item date-range-item\"\n        format=\"yyyy-MM-dd HH:mm:ss\"\n        type=\"datetimerange\"\n        v-model=\"queryParams.timeRange\"\n        value-format=\"yyyy-MM-dd HH:mm:ss\"\n      />\n      <el-button @click=\"search\" class=\"filter-item\" plain type=\"primary\">{{ $t('table.search') }}</el-button>\n      <el-button @click=\"reset\" class=\"filter-item\" plain type=\"warning\">{{ $t('table.reset') }}</el-button>\n      <el-button @click=\"add\" class=\"filter-item\" plain type=\"danger\" v-has-permission=\"['authority:application:add']\">\n        {{ $t(\"table.add\") }}  </el-button>\n\n      <el-button @click=\"add\" class=\"filter-item\" plain type=\"danger\" label='配置' >\n        {{ $t(\"table.add\") }}    </el-button> \n\n      <el-dropdown class=\"filter-item\" trigger=\"click\"\n                   v-has-any-permission=\"['authority:application:delete','authority:application:export']\">\n        <el-button>\n          {{ $t('table.more') }}\n          <i class=\"el-icon-arrow-down el-icon--right\"/>\n\n        </el-button>\n        <el-dropdown-menu slot=\"dropdown\">\n          <el-dropdown-item @click.native=\"batchDelete\" v-has-permission=\"['authority:application:delete']\">{{ $t('table.delete')\n            }}\n          </el-dropdown-item>\n\n\n          <el-dropdown-item @click.native=\"exportExcel\" v-has-permission=\"['authority:application:export']\">\n            {{ $t(\"table.export\") }}\n          </el-dropdown-item>\n          <el-dropdown-item @click.native=\"exportExcelPreview\" v-has-permission=\"['authority:application:export']\">\n            {{ $t(\"table.exportPreview\") }}\n         \n          </el-dropdown-item>\n        </el-dropdown-menu>\n      </el-dropdown>\n    </div>\n\n    <el-table\n      :data=\"tableData.records\"\n      :key=\"tableKey\"\n      @cell-click=\"cellClick\"\n      @filter-change=\"filterChange\"\n      @selection-change=\"onSelectChange\"\n      @sort-change=\"sortChange\"\n      border fit row-key=\"id\"\n      ref=\"table\"\n      style=\"width: 100%;\"\n      v-loading=\"loading\">\n \n       <el-table-column align=\"center\" type=\"selection\" width=\"40px\" :reserve-selection=\"true\"/>\n\n      <el-table-column :label=\"$t('table.application.name')\" :show-overflow-tooltip=\"true\" align=\"center\"\n                        prop=\"name\" label='属性名'>\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.name }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('table.application.website')\" :show-overflow-tooltip=\"true\" align=\"center\"\n                       min-width=\"110px\" prop=\"website\" label='类型'>\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.website }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('table.application.icon')\" :show-overflow-tooltip=\"true\" align=\"center\"\n                       min-width=\"50px\" prop=\"icon\" label='长度'>\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.icon }}</span>\n        </template>\n     \n </el-table-column>\n      <el-table-column :label=\"$t('table.application.state')\" :show-overflow-tooltip=\"true\" align=\"center\"\n                       prop=\"state\" min-width=\"80px\" label='不是null'>\n        <template slot-scope=\"scope\">\n          <el-tag :type=\"scope.row.state? 'danger' : 'success'\" slot>\n            {{ scope.row.state ? $t(\"common.yes\") : $t(\"common.no\") }}\n          </el-tag>\n        </template>\n      \n</el-table-column>\n      <el-table-column :label=\"$t('table.application.describe')\" :show-overflow-tooltip=\"true\" align=\"center\"\n                       min-width=\"120px\" prop=\"describe\" label='注释'>\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.describe }}</span>\n        </template>\n      </el-table-column>\n\n      <el-table-column :label=\"$t('table.createTime')\" :show-overflow-tooltip=\"true\" sortable=\"custom\" align=\"center\"\n                       prop=\"className\" width=\"170px\">\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.createTime }}</span>\n        </template>\n\n      </el-table-column>\n      <el-table-column :label=\"$t('table.operation')\" align=\"center\" column-key=\"operation\"\n                       class-name=\"small-padding fixed-width\" fixed=\"right\" width=\"110px\">\n        <template slot-scope=\"{row}\">\n          <i @click=\"edit(row)\" class=\"el-icon-edit table-operation\" style=\"color: #2db7f5;\"\n             v-has-permission=\"['authority:application:edit']\"/>\n          <i @click=\"singleDelete(row)\" class=\"el-icon-delete table-operation\" style=\"color: #f50;\"\n             v-has-permission=\"['authority:application:delete']\"/>\n        </template>\n      </el-table-column>\n    </el-table>\n    <pagination :limit.sync=\"queryParams.size\" :page.sync=\"queryParams.current\" :total=\"Number(tableData.total)\"\n                @pagination=\"fetch\" v-show=\"tableData.total>0\"/>\n\n    <application-edit :dialog-visible=\"dialog.isVisible\" :type=\"dialog.type\" @close=\"editClose\" @success=\"editSuccess\"\n                      ref=\"edit\"/>\n    <el-dialog\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"true\"\n      title=\"预览\"\n      width=\"80%\"\n      top=\"50px\"\n      :visible.sync=\"preview.isVisible\"\n      v-el-drag-dialog\n    >\n      <el-scrollbar>\n        <div v-html=\"preview.context\"></div>\n      </el-scrollbar>\n    </el-dialog>\n  </div>\n</template>\n<script>\n  import Pagination from '@/components/Pagination'\n  import ApplicationEdit from './edit'\n  import applicationApi from '@/api/Application.js'\n  import elDragDialog from '@/directive/el-drag-dialog'\n  import {downloadFile, initQueryParams} from '@/utils/commons'\n  import {copy} from '@/utils/utils'\n\n  export default {\n    name: 'Application',\n    directives: {elDragDialog},\n    components: {Pagination, ApplicationEdit},\n    filters: {},\n    data() {\n      return {\n        dialog: {\n          isVisible: false,\n          type: 'add'\n        },\n        preview: {\n          isVisible: false,\n          context: ''\n        },\n        tableKey: 0,\n        loading: false,\n        queryParams: initQueryParams({\n          model: {}\n        }),\n        selection: [],\n        tableData: {\n          total: 0\n        },\n      }\n    },\n    computed: {},\n    mounted() {\n      this.fetch()\n    },\n    methods: {\n      onSelectChange(selection) {\n        this.selection = selection\n      },\n      exportExcelPreview() {\n        if (this.queryParams.timeRange) {\n          this.queryParams.extra.createTime_st = this.queryParams.timeRange[0];\n          this.queryParams.extra.createTime_ed = this.queryParams.timeRange[1];\n        }\n        this.queryParams.extra.fileName = '导出应用数据';\n        applicationApi.preview(this.queryParams).then(response => {\n          const res = response.data;\n          this.preview.isVisible = true;\n          this.preview.context = res.data;\n        });\n      },\n      exportExcel() {\n        if (this.queryParams.timeRange) {\n          this.queryParams.extra.createTime_st = this.queryParams.timeRange[0];\n          this.queryParams.extra.createTime_ed = this.queryParams.timeRange[1];\n        }\n        this.queryParams.extra.fileName = '导出应用数据';\n        applicationApi.export(this.queryParams).then(response => {\n          downloadFile(response);\n        });\n      },\n      fetch(params = {}) {\n        this.loading = true;\n        if (this.queryParams.timeRange) {\n          this.queryParams.extra.createTime_st = this.queryParams.timeRange[0];\n          this.queryParams.extra.createTime_ed = this.queryParams.timeRange[1];\n        }\n\n        this.queryParams.current = params.current ? params.current : this.queryParams.current;\n        this.queryParams.size = params.size ? params.size : this.queryParams.size;\n\n        applicationApi.page(this.queryParams).then(response => {\n          const res = response.data;\n          if (res.isSuccess) {\n            this.tableData = res.data;\n          }\n        }).finally(() => this.loading = false);\n      },\n      singleDelete(row) {\n        this.$refs.table.clearSelection()\n        this.$refs.table.toggleRowSelection(row, true)\n        this.batchDelete()\n      },\n      batchDelete() {\n        if (!this.selection.length) {\n          this.$message({\n            message: this.$t('tips.noDataSelected'),\n            type: 'warning'\n          })\n          return\n        }\n\n        const isPersist = this.selection.findIndex(item => item.isPersist)\n        if (isPersist > -1) {\n          this.$message({\n            message: \"不能删除内置数据\",\n            type: 'warning'\n          })\n          return\n        }\n\n        this.$confirm(this.$t('tips.confirmDelete'), this.$t('common.tips'), {\n          confirmButtonText: this.$t('common.confirm'),\n          cancelButtonText: this.$t('common.cancel'),\n          type: 'warning'\n        }).then(() => {\n          const logIds = this.selection.map(item => item.id)\n          this.delete(logIds)\n        }).catch(() => {\n          this.clearSelections()\n        })\n      },\n      clearSelections() {\n        this.$refs.table.clearSelection()\n      },\n      delete(logIds) {\n        applicationApi.delete(logIds)\n          .then((response) => {\n            const res = response.data\n            if (res.isSuccess) {\n              this.$message({\n                message: this.$t('tips.deleteSuccess'),\n                type: 'success'\n              })\n            }\n            this.search()\n          })\n      },\n      search() {\n        this.fetch({\n          ...this.queryParams,\n        })\n      },\n      reset() {\n        this.queryParams = initQueryParams({\n          model: {}\n        });\n        this.$refs.table.clearSort()\n        this.$refs.table.clearFilter()\n        this.search()\n      },\n      sortChange(val) {\n        this.queryParams.sort = val.prop;\n        this.queryParams.order = val.order;\n        if (this.queryParams.sort) {\n          this.search();\n        }\n      },\n      filterChange(filters) {\n        for (const key in filters) {\n          if (key.includes('.')) {\n            const val = {};\n            val[key.split('.')[1]] = filters[key][0];\n            this.queryParams.model[key.split('.')[0]] = val;\n          } else {\n            this.queryParams.model[key] = filters[key][0]\n          }\n        }\n        this.search()\n      },\n      closeDrawer(done) {\n        done()\n        this.currentRow = {}\n      },\n      cellClick(row, column) {\n        if (column['columnKey'] === \"operation\") {\n          return;\n        }\n        if (column['columnKey'] === \"clientId\") {\n          copy(row[column.property]);\n          this.$message({\n            message: this.$t('tips.copySelected'),\n            type: 'success'\n          })\n          return;\n        }\n\n        let flag = false;\n        this.selection.forEach((item) => {\n          if (item.id === row.id) {\n            flag = true;\n            this.$refs.table.toggleRowSelection(row);\n          }\n        })\n        if (!flag) {\n          this.$refs.table.toggleRowSelection(row, true);\n        }\n      },\n      editClose() {\n        this.dialog.isVisible = false\n      },\n      editSuccess() {\n        this.search()\n      },\n      add() {\n        this.dialog.type = 'add'\n        this.dialog.isVisible = true\n        this.$refs.edit.setApplication(false)\n      },\n      edit(row) {\n        this.$refs.edit.setApplication(row)\n        this.dialog.type = 'edit'\n        this.dialog.isVisible = true\n      }\n\n    }\n  }\n</script>\n<style lang=\"scss\" scoped>\n  .item {\n    margin-top: 7px;\n  }\n\n  .box-item {\n    margin-top: 15px;\n\n    aside {\n      word-wrap: break-word;\n      margin-top: 15px;\n    }\n\n    pre {\n      white-space: pre-wrap;\n      font-size: 0.8em;\n      line-height: 1.5em;\n    }\n  }\n</style>\n"]}]}