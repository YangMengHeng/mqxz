{"remainingRequest":"E:\\项目\\lamp-web-master\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\项目\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\项目\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\项目\\lamp-web-master\\src\\views\\lamp\\tenant\\tenant\\connection.vue?vue&type=template&id=22605d6b&","dependencies":[{"path":"E:\\项目\\lamp-web-master\\src\\views\\lamp\\tenant\\tenant\\connection.vue","mtime":1679380940000},{"path":"E:\\项目\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\项目\\lamp-web-master\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1686711138402},{"path":"E:\\项目\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\项目\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"el-dialog\",\n    {\n      attrs: {\n        \"close-on-click-modal\": false,\n        \"close-on-press-escape\": false,\n        title: _vm.title,\n        visible: _vm.isVisible,\n        width: _vm.width,\n        top: \"50px\",\n      },\n      on: {\n        \"update:visible\": function ($event) {\n          _vm.isVisible = $event\n        },\n      },\n    },\n    [\n      _c(\n        \"el-form\",\n        {\n          ref: \"form\",\n          attrs: {\n            model: _vm.tenant,\n            rules: _vm.rules,\n            \"label-position\": \"right\",\n            \"label-width\": \"130px\",\n          },\n        },\n        [\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"租户编码\", prop: \"tenant\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { disabled: \"\" },\n                model: {\n                  value: _vm.tenant.tenant,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.tenant, \"tenant\", $$v)\n                  },\n                  expression: \"tenant.tenant\",\n                },\n              }),\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"连接类型\", prop: \"connectType\" } },\n            [\n              _c(\n                \"el-tooltip\",\n                {\n                  staticClass: \"item\",\n                  attrs: {\n                    content:\n                      \"本地表示使用默认物理数据库，远程表示自己指定其他物理数据库\",\n                    effect: \"dark\",\n                    placement: \"right-start\",\n                  },\n                },\n                [\n                  _c(\n                    \"el-radio-group\",\n                    {\n                      on: { change: _vm.connectTypeChange },\n                      model: {\n                        value: _vm.tenant.connectType,\n                        callback: function ($$v) {\n                          _vm.$set(_vm.tenant, \"connectType\", $$v)\n                        },\n                        expression: \"tenant.connectType\",\n                      },\n                    },\n                    [\n                      _c(\"el-radio\", { attrs: { label: \"SYSTEM\" } }, [\n                        _vm._v(\"本地\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"el-radio\",\n                        {\n                          attrs: {\n                            label: \"CUSTOM\",\n                            disabled: _vm.connectTypeDisabled,\n                          },\n                        },\n                        [_vm._v(\"远程\")]\n                      ),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"基础库\", prop: \"baseDatasourceId\" } },\n            [\n              _c(\n                \"el-tooltip\",\n                {\n                  staticClass: \"item\",\n                  attrs: {\n                    content:\n                      \"建议认证、权限、文件服务共用一个数据源，消息、网关共用一个数据源\",\n                    effect: \"dark\",\n                    placement: \"right-start\",\n                  },\n                },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      ref: \"baseDatasourceId\",\n                      staticStyle: { width: \"100%\" },\n                      attrs: {\n                        placeholder: \"基础库\",\n                        filterable: \"\",\n                        disabled: _vm.tenant.connectType === \"SYSTEM\",\n                      },\n                      model: {\n                        value: _vm.tenant.baseDatasourceId,\n                        callback: function ($$v) {\n                          _vm.$set(_vm.tenant, \"baseDatasourceId\", $$v)\n                        },\n                        expression: \"tenant.baseDatasourceId\",\n                      },\n                    },\n                    _vm._l(\n                      _vm.datasourceConfigList,\n                      function (item, key, index) {\n                        return _c(\n                          \"el-option\",\n                          {\n                            key: index,\n                            attrs: { label: item.name, value: item.id },\n                          },\n                          [\n                            _c(\"span\", { staticStyle: { float: \"left\" } }, [\n                              _vm._v(\n                                _vm._s(item.name) +\n                                  \"(\" +\n                                  _vm._s(item.driverClassName) +\n                                  \")\"\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"span\",\n                              {\n                                staticStyle: {\n                                  float: \"right\",\n                                  color: \"#8492a6\",\n                                  \"font-size\": \"13px\",\n                                },\n                              },\n                              [_vm._v(_vm._s(item.username))]\n                            ),\n                          ]\n                        )\n                      }\n                    ),\n                    1\n                  ),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"扩展库\", prop: \"extendDatasourceId\" } },\n            [\n              _c(\n                \"el-tooltip\",\n                {\n                  staticClass: \"item\",\n                  attrs: {\n                    content:\n                      \"建议认证、权限、文件服务共用一个数据源，消息、网关共用一个数据源\",\n                    effect: \"dark\",\n                    placement: \"right-start\",\n                  },\n                },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      staticStyle: { width: \"100%\" },\n                      attrs: {\n                        placeholder: \"扩展库\",\n                        filterable: \"\",\n                        disabled: _vm.tenant.connectType === \"SYSTEM\",\n                      },\n                      model: {\n                        value: _vm.tenant.extendDatasourceId,\n                        callback: function ($$v) {\n                          _vm.$set(_vm.tenant, \"extendDatasourceId\", $$v)\n                        },\n                        expression: \"tenant.extendDatasourceId\",\n                      },\n                    },\n                    _vm._l(\n                      _vm.datasourceConfigList,\n                      function (item, key, index) {\n                        return _c(\n                          \"el-option\",\n                          {\n                            key: index,\n                            attrs: { label: item.name, value: item.id },\n                          },\n                          [\n                            _c(\"span\", { staticStyle: { float: \"left\" } }, [\n                              _vm._v(\n                                _vm._s(item.name) +\n                                  \"(\" +\n                                  _vm._s(item.driverClassName) +\n                                  \")\"\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"span\",\n                              {\n                                staticStyle: {\n                                  float: \"right\",\n                                  color: \"#8492a6\",\n                                  \"font-size\": \"13px\",\n                                },\n                              },\n                              [_vm._v(_vm._s(item.username))]\n                            ),\n                          ]\n                        )\n                      }\n                    ),\n                    1\n                  ),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        {\n          staticClass: \"dialog-footer\",\n          attrs: { slot: \"footer\" },\n          slot: \"footer\",\n        },\n        [\n          _c(\n            \"el-button\",\n            {\n              attrs: { plain: \"\", type: \"warning\" },\n              on: {\n                click: function ($event) {\n                  _vm.isVisible = false\n                },\n              },\n            },\n            [_vm._v(_vm._s(_vm.$t(\"common.cancel\")))]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-button\",\n            {\n              attrs: {\n                plain: \"\",\n                type: \"primary\",\n                disabled: _vm.confirmDisabled,\n              },\n              on: { click: _vm.submitForm },\n            },\n            [_vm._v(_vm._s(_vm.$t(\"common.confirm\")) + \"\\n    \")]\n          ),\n        ],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}