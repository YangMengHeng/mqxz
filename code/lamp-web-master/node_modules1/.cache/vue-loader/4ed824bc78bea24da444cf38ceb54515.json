{"remainingRequest":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web1(原版)\\lamp-web-master\\src\\views\\lamp\\tenant\\tenant\\connection.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\src\\views\\lamp\\tenant\\tenant\\connection.vue","mtime":1679380940000},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web1(原版)\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport tenantApi from '@/api/Tenant.js'\nimport datasourceConfigApi from '@/api/DatasourceConfig.js'\n\nexport default {\n  name: 'TenantConnection',\n  props: {\n    dialogVisible: {\n      type: Boolean,\n      default: false\n    },\n    title: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      type: 'add',\n      tenant: this.initTenant(),\n      screenWidth: 0,\n      datasourceConfigList: [],\n      width: this.initWidth(),\n      confirmDisabled: false,\n      connectTypeDisabled: process.env.VUE_APP_IS_MULTI_TENANT_TYPE !== 'DATASOURCE',\n      rules: {\n        tenant: [\n          {required: true, message: this.$t('rules.require'), trigger: 'blur'}\n        ],\n        connectType: [\n          {required: true, message: this.$t('rules.require'), trigger: 'blur'}\n        ],\n        baseDatasourceId: {\n          validator: (rule, value, callback) => {\n            if (this.tenant.connectType === 'CUSTOM' && !value) {\n              callback('请选择基础库数据源')\n            } else {\n              callback()\n            }\n          }, trigger: 'blur'\n        },\n        extendDatasourceId: {\n          validator: (rule, value, callback) => {\n            if (this.tenant.connectType === 'CUSTOM' && !value) {\n              callback('请选择扩展库数据源')\n            } else {\n              callback()\n            }\n          }, trigger: 'blur'\n        },\n      }\n    }\n  },\n  computed: {\n    isVisible: {\n      get() {\n        return this.dialogVisible\n      },\n      set() {\n        this.close()\n        this.reset()\n      }\n    }\n  },\n  mounted() {\n    window.onresize = () => {\n      return (() => {\n        this.width = this.initWidth()\n      })()\n    }\n    this.loadDatasourceConfigList()\n  },\n  methods: {\n    loadDatasourceConfigList() {\n      if(process.env.VUE_APP_IS_MULTI_TENANT_TYPE === \"DATASOURCE\"){\n        datasourceConfigApi.query()\n          .then((response) => {\n            if (response.data.isSuccess) {\n              this.datasourceConfigList = response.data.data\n            }\n          })\n      }\n    },\n    initTenant() {\n      return {\n        id: '',\n        connectType: 'SYSTEM',\n        tenant: '',\n        baseDatasourceId: null,\n        extendDatasourceId: null,\n      }\n    },\n    initWidth() {\n      this.screenWidth = document.body.clientWidth\n      if (this.screenWidth < 991) {\n        return '90%'\n      } else if (this.screenWidth < 1400) {\n        return '45%'\n      } else {\n        return '800px'\n      }\n    },\n    setTenant(val) {\n      this.tenant.id = val['id']\n      this.tenant.tenant = val['code']\n    },\n    close() {\n      this.$emit('close')\n    },\n    submitForm() {\n      this.$refs.form.validate((valid) => {\n        if (valid) {\n          this.confirmDisabled = true\n          this.initConnect()\n        } else {\n          return false\n        }\n      })\n    },\n    initConnect() {\n      const loading = this.$loading({\n        lock: true,\n        text: 'Loading',\n        spinner: 'el-icon-loading',\n        background: 'rgba(0, 0, 0, 0.7)'\n      });\n      tenantApi.initConnect(this.tenant)\n        .then((response) => {\n          const res = response.data\n          if (res.isSuccess && res.data) {\n            this.isVisible = false\n            this.$message({\n              message: this.$t('tips.createSuccess'),\n              type: 'success'\n            })\n            this.$emit('success')\n          }\n        }).finally(() => {\n        this.confirmDisabled = false\n        loading.close();\n        return true\n      })\n    },\n    reset() {\n      // 先清除校验，再清除表单，不然有奇怪的bug\n      this.$refs.form.clearValidate()\n      this.$refs.form.resetFields()\n      this.tenant = this.initTenant()\n    },\n    connectTypeChange(val) {\n      if (val === 'SYSTEM') {\n        this.tenant.baseDatasourceId = null\n        this.tenant.extendDatasourceId = null\n      }\n    }\n  }\n}\n",null]}