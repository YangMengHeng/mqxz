{"remainingRequest":"E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web-master\\src\\views\\lamp\\activiti\\reimbursement\\instantManager\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\project\\lamp-web-master\\src\\views\\lamp\\activiti\\reimbursement\\instantManager\\index.vue","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Pagination from \"@/components/Pagination\";\nimport ModelEdit from \"./edit\";\nimport activitiApi from \"@/api/Activiti.js\";\nimport {initQueryParams} from '@/utils/commons'\n\nfunction subForm() {\n  return {\n    model: {\n      isMine: true,\n      isOver: null\n    }\n  }\n}\n\nexport default {\n  name: \"InstantManage\",\n  components: {Pagination, ModelEdit},\n  filters: {},\n  data() {\n    return {\n      dialogVisible: false,\n      dialogImageUrl: \"\",\n      dialog: {\n        isVisible: false,\n        type: \"add\"\n      },\n      tableKey: 0,\n      queryParams: initQueryParams(subForm()),\n      suspendStateType: {\n        start: '1',\n        stop: '2'\n      },\n      isMine: [{\n        value: true, label: '自己'\n      }, {\n        value: false, label: '所有人'\n      }],\n      isOver: [{\n        value: null, label: '所有'\n      }, {\n        value: true, label: '已完成'\n      }, {\n        value: false, label: '未完成'\n      }],\n      selection: [],\n      loading: false,\n      tableData: {\n        records: [],\n        total: 0\n      },\n    };\n  },\n  computed: {},\n  mounted() {\n    this.fetch();\n  },\n  methods: {\n    fetch(params = {}) {\n      this.queryParams.current = params.current ? params.current : this.queryParams.current;\n      this.queryParams.size = params.size ? params.size : this.queryParams.size;\n\n      activitiApi.pageInstantReimbursement(this.queryParams).then(response => {\n        const res = response.data;\n        if (res.isSuccess) {\n          this.tableData.records = res.data.records;\n          this.tableData.total = res.data.total;\n        }\n      }).finally(() => this.loading = false);\n    },\n    cellClick(row, column) {\n      if (column['columnKey'] === \"operation\") {\n        return;\n      }\n      let flag = false;\n      this.selection.forEach((item) => {\n        if (item.id === row.id) {\n          flag = true;\n          this.$refs.table.toggleRowSelection(row);\n        }\n      })\n\n      if (!flag) {\n        this.$refs.table.toggleRowSelection(row, true);\n      }\n    },\n    editClose() {\n      this.reset()\n    },\n    search() {\n      this.fetch({\n        ...this.queryParams\n      });\n    },\n    reset() {\n      this.$refs.table.clearSort();\n      this.$refs.table.clearFilter();\n      this.search();\n    },\n    singleUpdate(row) {\n      const vm = this;\n      var data = {\n        instId: row.inst.data.id,\n        suspendState: row.inst.data.suspendState\n      }\n      activitiApi.updateSuspendStateInst(data).then(response => {\n        const res = response.data;\n        if (res.isSuccess) {\n          this.$message({\n            message: this.$t(\"tips.updateSuccess\"),\n            type: 'success'\n          });\n          this.search();\n        } else {\n          this.$message({\n            message: response.msg,\n            type: 'error'\n          });\n        }\n      }).finally(() => this.loading = false);\n    },\n    singleFormView(row) {\n      this.$refs.modelEdit.open(row)\n    },\n    singleDelete(row) {\n      this.$confirm(this.$t(\"tips.confirmDelete\"), this.$t(\"common.tips\"), {\n        confirmButtonText: this.$t(\"common.confirm\"),\n        cancelButtonText: this.$t(\"common.cancel\"),\n        type: \"warning\"\n      })\n        .then(() => {\n          this.delete([row.id]);\n        })\n        .catch(() => {\n          this.reset();\n        });\n    },\n    delete(data) {\n      activitiApi.deleteInstReimbursement(data).then(response => {\n        const res = response.data;\n        if (res.isSuccess) {\n          this.$message({\n            message: this.$t(\"tips.deleteSuccess\"),\n            type: 'success'\n          });\n          this.search();\n        } else {\n          this.$message({\n            message: response.msg,\n            type: 'error'\n          });\n        }\n      }).finally(() => this.loading = false);\n    },\n    singleDetail(row) {\n      this.singleFormView(row)\n    },\n    getFormQuery() {\n      activitiApi.formQuery({}).then(response => {\n        const res = response.data;\n      }).finally(() => this.loading = false);\n    }\n  }\n};\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"index.vue","sourceRoot":"src/views/lamp/activiti/reimbursement/instantManager","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-form :inline=\"true\" :model=\"queryParams.model\" class=\"demo-form-inline\">\n        <el-form-item label=\"查看范围\">\n          <el-select v-model=\"queryParams.model.isMine\" placeholder=\"查看范围\">\n            <el-option\n              v-for=\"item in isMine\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"完成状态\">\n          <el-select v-model=\"queryParams.model.isOver\" placeholder=\"完成状态\">\n            <el-option\n              v-for=\"item in isOver\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n\n\n        <el-form-item :label=\"$t('table.instantReimbursementModel.name')\">\n          <el-input\n            :placeholder=\"$t('table.instantReimbursementModel.name')\"\n            clearable\n            class=\"filter-item search-item\"\n            v-model=\"queryParams.model.name\"\n          />\n        </el-form-item>\n        <el-button @click=\"search\" class=\"filter-item\" plain type=\"primary\">\n          {{ $t(\"table.search\") }}\n        </el-button>\n        <el-button @click=\"reset\" class=\"filter-item\" plain type=\"warning\">\n          {{ $t(\"table.reset\") }}\n        </el-button>\n        <el-button @click=\"singleFormView({})\" class=\"filter-item\" plain type=\"primary\">\n          {{ $t(\"table.add\") }}\n        </el-button>\n      </el-form>\n    </div>\n\n    <el-table\n      :data=\"tableData.records\"\n      :key=\"tableKey\"\n      border fit row-key=\"id\"\n      ref=\"table\"\n      style=\"width: 100%;\"\n      v-loading=\"loading\"\n    >\n      <el-table-column align=\"center\" type=\"selection\" width=\"40px\" :reserve-selection=\"true\"/>\n      <el-table-column\n        :label=\"$t('table.instantReimbursementModel.name')\"\n        :show-overflow-tooltip=\"true\"\n        align=\"center\"\n        prop=\"name\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.name }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('table.instantReimbursementModel.type')\"\n        :show-overflow-tooltip=\"true\"\n        align=\"center\"\n        width=\"100px\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.type }}</span>\n        </template>\n      </el-table-column>\n\n      <el-table-column\n        :label=\"$t('table.instantReimbursementModel.amount')\"\n        :show-overflow-tooltip=\"true\"\n        align=\"center\"\n        prop=\"name\"\n        width=\"250px\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.amount }}</span>\n        </template>\n      </el-table-column>\n\n      <el-table-column\n        :label=\"$t('table.instantReimbursementModel.isOver')\"\n        :show-overflow-tooltip=\"true\"\n        align=\"center\"\n        width=\"100px\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.isOver ? '已完成' : '未完成' }}</span>\n        </template>\n      </el-table-column>\n\n      <el-table-column\n        :label=\"$t('table.instantReimbursementModel.suspendStateName')\"\n        :show-overflow-tooltip=\"true\"\n        align=\"center\"\n        width=\"100px\"\n      >\n\n        <template slot-scope=\"scope\">\n          <el-tag v-if=\"scope.row.inst && scope.row.inst.data && scope.row.inst.data.id\"\n                  :type=\" scope.row.inst.data.suspendState === suspendStateType.start ? 'success' : 'warning'\">\n            {{ scope.row.inst.data.suspendState === suspendStateType.start ? '已激活' : '已挂起'}}\n          </el-tag>\n          <el-tag v-else type=\"info\"> 已结束</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('table.instantReimbursementModel.createTime')\"\n        align=\"center\"\n        :show-overflow-tooltip=\"true\"\n        width=\"170px\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.createTime }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('table.operation')\"\n        align=\"center\"\n        column-key=\"operation\"\n        class-name=\"small-padding fixed-width\"\n        width=\"120px\"\n        fixed=\"right\"\n      >\n        <template slot-scope=\"{ row }\">\n          <i\n            title=\"查看详情\"\n            @click=\"singleDetail(row)\"\n            class=\"el-icon-view table-operation\"\n            style=\"color: #f50;\"\n          />\n          <i\n            title=\"修改状态\"\n            v-if=\"row.inst.data && row.inst.data.suspendState === suspendStateType.start\"\n            @click=\"singleUpdate(row)\"\n            class=\"el-icon-video-pause table-operation\"\n            style=\"color: #5f0;\"\n          />\n          <i\n            title=\"修改状态\"\n            v-if=\"row.inst.data && row.inst.data.suspendState === suspendStateType.stop\"\n            @click=\"singleUpdate(row)\"\n            class=\"el-icon-video-play table-operation\"\n            style=\"color: #f50;\"\n          />\n          <!-- <i\n            @click=\"singlePublish(row)\"\n            class=\"el-icon-s-promotion table-operation\"\n            style=\"color: #f50;\"\n          /> -->\n          <i\n            title=\"删除\"\n            @click=\"singleDelete(row)\"\n            class=\"el-icon-delete table-operation\"\n            style=\"color: #f50;\"\n          />\n        </template>\n      </el-table-column>\n    </el-table>\n    <pagination\n      :limit.sync=\"queryParams.size\"\n      :page.sync=\"queryParams.current\"\n      :total=\"Number(tableData.total)\"\n      @pagination=\"fetch\"\n      v-show=\"tableData.total > 0\"\n      align=\"center\"\n    />\n    <ModelEdit\n      ref=\"edit\"\n    />\n    <ModelEdit ref=\"modelEdit\"></ModelEdit>\n  </div>\n</template>\n\n<script>\nimport Pagination from \"@/components/Pagination\";\nimport ModelEdit from \"./edit\";\nimport activitiApi from \"@/api/Activiti.js\";\nimport {initQueryParams} from '@/utils/commons'\n\nfunction subForm() {\n  return {\n    model: {\n      isMine: true,\n      isOver: null\n    }\n  }\n}\n\nexport default {\n  name: \"InstantManage\",\n  components: {Pagination, ModelEdit},\n  filters: {},\n  data() {\n    return {\n      dialogVisible: false,\n      dialogImageUrl: \"\",\n      dialog: {\n        isVisible: false,\n        type: \"add\"\n      },\n      tableKey: 0,\n      queryParams: initQueryParams(subForm()),\n      suspendStateType: {\n        start: '1',\n        stop: '2'\n      },\n      isMine: [{\n        value: true, label: '自己'\n      }, {\n        value: false, label: '所有人'\n      }],\n      isOver: [{\n        value: null, label: '所有'\n      }, {\n        value: true, label: '已完成'\n      }, {\n        value: false, label: '未完成'\n      }],\n      selection: [],\n      loading: false,\n      tableData: {\n        records: [],\n        total: 0\n      },\n    };\n  },\n  computed: {},\n  mounted() {\n    this.fetch();\n  },\n  methods: {\n    fetch(params = {}) {\n      this.queryParams.current = params.current ? params.current : this.queryParams.current;\n      this.queryParams.size = params.size ? params.size : this.queryParams.size;\n\n      activitiApi.pageInstantReimbursement(this.queryParams).then(response => {\n        const res = response.data;\n        if (res.isSuccess) {\n          this.tableData.records = res.data.records;\n          this.tableData.total = res.data.total;\n        }\n      }).finally(() => this.loading = false);\n    },\n    cellClick(row, column) {\n      if (column['columnKey'] === \"operation\") {\n        return;\n      }\n      let flag = false;\n      this.selection.forEach((item) => {\n        if (item.id === row.id) {\n          flag = true;\n          this.$refs.table.toggleRowSelection(row);\n        }\n      })\n\n      if (!flag) {\n        this.$refs.table.toggleRowSelection(row, true);\n      }\n    },\n    editClose() {\n      this.reset()\n    },\n    search() {\n      this.fetch({\n        ...this.queryParams\n      });\n    },\n    reset() {\n      this.$refs.table.clearSort();\n      this.$refs.table.clearFilter();\n      this.search();\n    },\n    singleUpdate(row) {\n      const vm = this;\n      var data = {\n        instId: row.inst.data.id,\n        suspendState: row.inst.data.suspendState\n      }\n      activitiApi.updateSuspendStateInst(data).then(response => {\n        const res = response.data;\n        if (res.isSuccess) {\n          this.$message({\n            message: this.$t(\"tips.updateSuccess\"),\n            type: 'success'\n          });\n          this.search();\n        } else {\n          this.$message({\n            message: response.msg,\n            type: 'error'\n          });\n        }\n      }).finally(() => this.loading = false);\n    },\n    singleFormView(row) {\n      this.$refs.modelEdit.open(row)\n    },\n    singleDelete(row) {\n      this.$confirm(this.$t(\"tips.confirmDelete\"), this.$t(\"common.tips\"), {\n        confirmButtonText: this.$t(\"common.confirm\"),\n        cancelButtonText: this.$t(\"common.cancel\"),\n        type: \"warning\"\n      })\n        .then(() => {\n          this.delete([row.id]);\n        })\n        .catch(() => {\n          this.reset();\n        });\n    },\n    delete(data) {\n      activitiApi.deleteInstReimbursement(data).then(response => {\n        const res = response.data;\n        if (res.isSuccess) {\n          this.$message({\n            message: this.$t(\"tips.deleteSuccess\"),\n            type: 'success'\n          });\n          this.search();\n        } else {\n          this.$message({\n            message: response.msg,\n            type: 'error'\n          });\n        }\n      }).finally(() => this.loading = false);\n    },\n    singleDetail(row) {\n      this.singleFormView(row)\n    },\n    getFormQuery() {\n      activitiApi.formQuery({}).then(response => {\n        const res = response.data;\n      }).finally(() => this.loading = false);\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.file-breadcrumb {\n  margin: 10px 0px 20px;\n}\n\n.page {\n  text-align: center;\n  margin-top: 5px;\n}\n\n.button-list {\n  margin-right: 10px;\n  font-size: 20px !important;\n  color: #22a2ed;\n  vertical-align: middle;\n}\n\n.title {\n  color: #777;\n  font-size: 2em;\n  border-bottom: 1px solid #e5e5e5;\n}\n\ndiv {\n  &.hover-effect {\n    cursor: pointer;\n    transition: background 0.3s;\n\n    &:hover {\n      background: rgba(0, 0, 0, 0.025);\n    }\n  }\n}\n\n::v-deep.el-table:not(.el-table--scrollable-x) {\n    .el-table__fixed-right {\n        height: calc(100% - 1px) !important;\n    }\n}\n</style>\n"]}]}