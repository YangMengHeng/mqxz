{"remainingRequest":"E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web-master\\src\\views\\lamp\\tenant\\tenant\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\project\\lamp-web-master\\src\\views\\lamp\\tenant\\tenant\\edit.vue","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport commonApi from '@/api/Common.js'\nimport db from '@/utils/localstorage'\nimport tenantApi from '@/api/Tenant.js'\nimport { validCode } from '@/utils/my-validate'\nimport { Base64 } from 'js-base64'\n\nexport default {\n  name: 'TenantEdit',\n  props: {\n    dialogVisible: {\n      type: Boolean,\n      default: false\n    },\n    title: {\n      type: String,\n      default: ''\n    }\n  },\n  data () {\n    return {\n      type: 'add',\n      updateFileData: {\n        bizType: 'TENANT_LOGO',\n        bizId: ''\n      },\n      passwordErrorLockTimeHidden: true,\n      passwordErrorLockTime: 0,\n      passwordErrorLockTimeUnit: '0',\n      passwordErrorLockTimeOptions: [\n        { value: '0', label: '当天凌晨' },\n        { value: 'h', label: '小时' },\n        { value: 'd', label: '天' },\n        { value: 'w', label: '周' },\n        { value: 'm', label: '月' }\n      ],\n      tenant: this.initTenant(),\n      screenWidth: 0,\n      width: this.initWidth(),\n      confirmDisabled: false,\n      roles: [],\n      rules: {\n        code: [\n          { required: true, message: this.$t('rules.require'), trigger: 'blur' },\n          { min: 3, max: 10, message: this.$t('rules.range4to10'), trigger: 'blur' },\n          {\n            validator: (rule, value, callback) => {\n              if (this.type === 'add') {\n                if (!validCode(value)) {\n                  callback('企业编码只能是字母、数字或_')\n                } else {\n                  tenantApi.check(value)\n                    .then((response) => {\n                      const res = response.data\n                      if (res.data) {\n                        callback('编码已经存在')\n                      } else {\n                        callback()\n                      }\n                    })\n                }\n              } else {\n                callback()\n              }\n            }, trigger: 'blur'\n          }\n        ]\n      }\n    }\n  },\n  computed: {\n    isVisible: {\n      get () {\n        return this.dialogVisible\n      },\n      set () {\n        this.close()\n        this.reset()\n      }\n    },\n    passwordErrorNumTips () {\n      return `密码输错${this.tenant.passwordErrorNum}次数后锁定账号`\n    },\n    passwordErrorLockTimeTips () {\n      let msg = ''\n      switch (this.passwordErrorLockTimeUnit) {\n        case 'h':\n          msg = `${this.passwordErrorLockTime}小时`\n          break\n        case 'd':\n          msg = `${this.passwordErrorLockTime}天`\n          break\n        case 'w':\n          msg = `${this.passwordErrorLockTime}周`\n          break\n        case 'm':\n          msg = `${this.passwordErrorLockTime}月`\n          break\n        case '0':\n        default:\n          msg = `当天23:59:59`\n          break\n      }\n      return `密码输错${this.tenant.passwordErrorNum}次数后锁定账号${msg}`\n    },\n    uploadFileUrl () {\n      return commonApi.uploadFile\n    },\n    uploadFileHeaders () {\n      return {\n        token: 'Bearer ' + db.get(\"TOKEN\", \"\"),\n        tenant: db.get(\"TENANT\", \"\") || \"\",\n        Authorization: `Basic ${Base64.encode(`${process.env.VUE_APP_CLIENT_ID}:${process.env.VUE_APP_CLIENT_SECRET}`)}`\n      }\n    },\n    passwordErrorLockTimeComputed () {\n      switch (this.passwordErrorLockTimeUnit) {\n        case '0':\n          return this.passwordErrorLockTime\n        case 'h':\n        case 'd':\n        case 'w':\n        case 'm':\n        default:\n          return this.passwordErrorLockTime + this.passwordErrorLockTimeUnit\n      }\n    }\n  },\n  mounted () {\n    window.onresize = () => {\n      return (() => {\n        this.width = this.initWidth()\n      })()\n    }\n  },\n  methods: {\n    initTenant () {\n      return {\n        id: '',\n        code: '',\n        name: '',\n        duty: '',\n        expirationTime: null,\n        logo: '',\n        describe: ''\n        // passwordExpire: 0,\n        // isMultipleLogin: true,\n        // passwordErrorNum: 10,\n        // passwordErrorLockTime: '0'\n      }\n    },\n    initWidth () {\n      this.screenWidth = document.body.clientWidth\n      if (this.screenWidth < 991) {\n        return '90%'\n      } else if (this.screenWidth < 1400) {\n        return '45%'\n      } else {\n        return '800px'\n      }\n    },\n    setTenant (val) {\n      this.tenant = { ...val }\n      this.updateFileData.bizId = this.tenant.id\n    },\n    close () {\n      this.$emit('close')\n    },\n    submitForm () {\n      this.$refs.form.validate((valid) => {\n        if (valid) {\n          this.tenant.passwordErrorLockTime = this.passwordErrorLockTimeComputed\n          this.confirmDisabled = true\n          if (this.type === 'add') {\n            this.save()\n          } else {\n            this.update()\n          }\n        } else {\n          return false\n        }\n      })\n    },\n    save () {\n      tenantApi.save(this.tenant)\n        .then((response) => {\n          const res = response.data\n          if (res.isSuccess) {\n            this.isVisible = false\n            this.$message({\n              message: this.$t('tips.createSuccess'),\n              type: 'success'\n            })\n            this.$emit('success')\n          }\n        }).finally(() => {\n          this.confirmDisabled = false\n          return true\n        })\n    },\n    update () {\n      tenantApi.update(this.tenant)\n        .then((response) => {\n          const res = response.data\n          if (res.isSuccess) {\n            this.isVisible = false\n            this.$message({\n              message: this.$t('tips.updateSuccess'),\n              type: 'success'\n            })\n            this.$emit('success')\n          }\n        }).finally(() => {\n          this.confirmDisabled = false\n          return true\n        })\n    },\n    reset () {\n      // 先清除校验，再清除表单，不然有奇怪的bug\n      this.$refs.form.clearValidate()\n      this.$refs.form.resetFields()\n      this.tenant = this.initTenant()\n    },\n    passwordErrorLockTimeUnitChange (unit) {\n      if (unit === '0') {\n        this.tenant.passwordErrorLockTime = 0\n        this.passwordErrorLockTimeHidden = true\n      } else {\n        this.passwordErrorLockTimeHidden = false\n      }\n    },\n    handleAvatarSuccess (res, file) {\n      if (!res.isSuccess) {\n        this.$message.error(res.msg)\n        return\n      }\n      const fileResult = res.data\n      this.tenant.logo = fileResult['url']\n    },\n    handleAvatarError (res, file) {\n      this.$message.error(res.msg)\n    },\n    beforeAvatarUpload (file) {\n      const isJPG = file.type === 'image/jpeg' || file.type === 'image/png'\n      const isLt2M = file.size / 1024 / 1024 < 10\n\n      if (!isJPG) {\n        this.$message.error('上传头像图片只能是 JPG / png 格式!')\n      }\n      if (!isLt2M) {\n        this.$message.error('上传头像图片大小不能超过 10MB!')\n      }\n      return isJPG && isLt2M\n    }\n\n  }\n}\n",{"version":3,"sources":["edit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"edit.vue","sourceRoot":"src/views/lamp/tenant/tenant","sourcesContent":["<template>\n  <el-dialog :close-on-click-modal=\"false\" :close-on-press-escape=\"false\" :title=\"title\" :visible.sync=\"isVisible\" :width=\"width\" top=\"50px\">\n    <el-form ref=\"form\" :model=\"tenant\" :rules=\"rules\" label-position=\"right\" label-width=\"130px\">\n      <el-form-item :label=\"$t('table.tenant.code')\" prop=\"code\">\n        <el-tooltip class=\"item\" content=\"建议填写企业的简称\" effect=\"dark\" placement=\"top-start\">\n          <el-input v-model=\"tenant.code\" :disabled=\"type === 'edit'\" />\n        </el-tooltip>\n      </el-form-item>\n      <el-form-item :label=\"$t('table.tenant.name')\" prop=\"name\">\n        <el-input v-model=\"tenant.name\" />\n      </el-form-item>\n      <el-form-item :label=\"$t('table.tenant.duty')\" prop=\"duty\">\n        <el-input v-model=\"tenant.duty\" />\n      </el-form-item>\n      <el-form-item :label=\"$t('table.tenant.expirationTime')\" prop=\"expirationTime\">\n        <el-tooltip class=\"item\" content=\"企业试用有效期, 不填表示永久有效\" effect=\"dark\" placement=\"top-start\">\n          <el-date-picker v-model=\"tenant.expirationTime\" format=\"yyyy-MM-dd HH:mm:ss\" placeholder=\"企业试用有效期\" type=\"datetime\" value-format=\"yyyy-MM-dd HH:mm:ss\" />\n        </el-tooltip>\n      </el-form-item>\n      <el-form-item :label=\"$t('table.tenant.logo')\" prop=\"logo\">\n        <el-upload\n          :action=\"uploadFileUrl\"\n          :before-upload=\"beforeAvatarUpload\"\n          :data=\"updateFileData\"\n          :headers=\"uploadFileHeaders\"\n          :on-error=\"handleAvatarError\"\n          :on-success=\"handleAvatarSuccess\"\n          :show-file-list=\"false\"\n          class=\"avatar-uploader\"\n        >\n          <img v-if=\"tenant.logo\" :src=\"tenant.logo\" class=\"avatar\">\n          <i v-else class=\"el-icon-plus avatar-uploader-icon\" />\n        </el-upload>\n      </el-form-item>\n      <el-form-item :label=\"$t('table.tenant.describe')\" prop=\"describe\">\n        <el-input v-model=\"tenant.describe\" type=\"textarea\" />\n      </el-form-item>\n      <!--      <el-form-item :label=\"$t('table.tenant.passwordExpire')\" prop=\"passwordExpire\">-->\n      <!--        <el-tooltip class=\"item\" content=\"0表示永远不过期\" effect=\"dark\" placement=\"top-start\">-->\n      <!--          <el-input-number v-model=\"tenant.passwordExpire\" :max=\"180\" :min=\"0\" controls-position=\"right\" placeholder=\"单位：天\" />-->\n      <!--        </el-tooltip>天-->\n      <!--      </el-form-item>-->\n      <!--      <el-form-item :label=\"$t('table.tenant.isMultipleLogin')\" prop=\"isMultipleLogin\">-->\n      <!--        <el-radio-group v-model=\"tenant.isMultipleLogin\">-->\n      <!--          <el-radio :label=\"true\">{{ $t('common.yes') }}</el-radio>-->\n      <!--          <el-radio :label=\"false\">{{ $t('common.no') }}</el-radio>-->\n      <!--        </el-radio-group>-->\n      <!--      </el-form-item>-->\n      <!--      <el-form-item :label=\"$t('table.tenant.passwordErrorNum')\" prop=\"passwordErrorNum\">-->\n      <!--        <el-tooltip :content=\"passwordErrorNumTips\" class=\"item\" effect=\"dark\" placement=\"top-start\">-->\n      <!--          <el-input-number v-model=\"tenant.passwordErrorNum\" :max=\"30\" :min=\"1\" :placeholder=\"passwordErrorNumTips\" />-->\n      <!--        </el-tooltip>-->\n      <!--      </el-form-item>-->\n      <!--      <el-form-item :label=\"$t('table.tenant.passwordErrorLockTime')\" prop=\"passwordErrorLockTime\">-->\n      <!--        <el-input-number v-model=\"passwordErrorLockTime\" :disabled=\"passwordErrorLockTimeHidden\" :max=\"100000000000\" :min=\"0\" :placeholder=\"passwordErrorLockTimeTips\" />-->\n      <!--        <el-tooltip :content=\"passwordErrorLockTimeTips\" class=\"item\" effect=\"dark\" placement=\"top-start\">-->\n      <!--          <el-select v-model=\"passwordErrorLockTimeUnit\" placeholder=\"单位\" @change=\"passwordErrorLockTimeUnitChange\">-->\n      <!--            <el-option v-for=\"item in passwordErrorLockTimeOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />-->\n      <!--          </el-select>-->\n      <!--        </el-tooltip>-->\n      <!--      </el-form-item>-->\n    </el-form>\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button plain type=\"warning\" @click=\"isVisible = false\">{{ $t('common.cancel') }}</el-button>\n      <el-button plain type=\"primary\" :disabled=\"confirmDisabled\" @click=\"submitForm\">{{ $t('common.confirm') }}</el-button>\n    </div>\n  </el-dialog>\n</template>\n<script>\nimport commonApi from '@/api/Common.js'\nimport db from '@/utils/localstorage'\nimport tenantApi from '@/api/Tenant.js'\nimport { validCode } from '@/utils/my-validate'\nimport { Base64 } from 'js-base64'\n\nexport default {\n  name: 'TenantEdit',\n  props: {\n    dialogVisible: {\n      type: Boolean,\n      default: false\n    },\n    title: {\n      type: String,\n      default: ''\n    }\n  },\n  data () {\n    return {\n      type: 'add',\n      updateFileData: {\n        bizType: 'TENANT_LOGO',\n        bizId: ''\n      },\n      passwordErrorLockTimeHidden: true,\n      passwordErrorLockTime: 0,\n      passwordErrorLockTimeUnit: '0',\n      passwordErrorLockTimeOptions: [\n        { value: '0', label: '当天凌晨' },\n        { value: 'h', label: '小时' },\n        { value: 'd', label: '天' },\n        { value: 'w', label: '周' },\n        { value: 'm', label: '月' }\n      ],\n      tenant: this.initTenant(),\n      screenWidth: 0,\n      width: this.initWidth(),\n      confirmDisabled: false,\n      roles: [],\n      rules: {\n        code: [\n          { required: true, message: this.$t('rules.require'), trigger: 'blur' },\n          { min: 3, max: 10, message: this.$t('rules.range4to10'), trigger: 'blur' },\n          {\n            validator: (rule, value, callback) => {\n              if (this.type === 'add') {\n                if (!validCode(value)) {\n                  callback('企业编码只能是字母、数字或_')\n                } else {\n                  tenantApi.check(value)\n                    .then((response) => {\n                      const res = response.data\n                      if (res.data) {\n                        callback('编码已经存在')\n                      } else {\n                        callback()\n                      }\n                    })\n                }\n              } else {\n                callback()\n              }\n            }, trigger: 'blur'\n          }\n        ]\n      }\n    }\n  },\n  computed: {\n    isVisible: {\n      get () {\n        return this.dialogVisible\n      },\n      set () {\n        this.close()\n        this.reset()\n      }\n    },\n    passwordErrorNumTips () {\n      return `密码输错${this.tenant.passwordErrorNum}次数后锁定账号`\n    },\n    passwordErrorLockTimeTips () {\n      let msg = ''\n      switch (this.passwordErrorLockTimeUnit) {\n        case 'h':\n          msg = `${this.passwordErrorLockTime}小时`\n          break\n        case 'd':\n          msg = `${this.passwordErrorLockTime}天`\n          break\n        case 'w':\n          msg = `${this.passwordErrorLockTime}周`\n          break\n        case 'm':\n          msg = `${this.passwordErrorLockTime}月`\n          break\n        case '0':\n        default:\n          msg = `当天23:59:59`\n          break\n      }\n      return `密码输错${this.tenant.passwordErrorNum}次数后锁定账号${msg}`\n    },\n    uploadFileUrl () {\n      return commonApi.uploadFile\n    },\n    uploadFileHeaders () {\n      return {\n        token: 'Bearer ' + db.get(\"TOKEN\", \"\"),\n        tenant: db.get(\"TENANT\", \"\") || \"\",\n        Authorization: `Basic ${Base64.encode(`${process.env.VUE_APP_CLIENT_ID}:${process.env.VUE_APP_CLIENT_SECRET}`)}`\n      }\n    },\n    passwordErrorLockTimeComputed () {\n      switch (this.passwordErrorLockTimeUnit) {\n        case '0':\n          return this.passwordErrorLockTime\n        case 'h':\n        case 'd':\n        case 'w':\n        case 'm':\n        default:\n          return this.passwordErrorLockTime + this.passwordErrorLockTimeUnit\n      }\n    }\n  },\n  mounted () {\n    window.onresize = () => {\n      return (() => {\n        this.width = this.initWidth()\n      })()\n    }\n  },\n  methods: {\n    initTenant () {\n      return {\n        id: '',\n        code: '',\n        name: '',\n        duty: '',\n        expirationTime: null,\n        logo: '',\n        describe: ''\n        // passwordExpire: 0,\n        // isMultipleLogin: true,\n        // passwordErrorNum: 10,\n        // passwordErrorLockTime: '0'\n      }\n    },\n    initWidth () {\n      this.screenWidth = document.body.clientWidth\n      if (this.screenWidth < 991) {\n        return '90%'\n      } else if (this.screenWidth < 1400) {\n        return '45%'\n      } else {\n        return '800px'\n      }\n    },\n    setTenant (val) {\n      this.tenant = { ...val }\n      this.updateFileData.bizId = this.tenant.id\n    },\n    close () {\n      this.$emit('close')\n    },\n    submitForm () {\n      this.$refs.form.validate((valid) => {\n        if (valid) {\n          this.tenant.passwordErrorLockTime = this.passwordErrorLockTimeComputed\n          this.confirmDisabled = true\n          if (this.type === 'add') {\n            this.save()\n          } else {\n            this.update()\n          }\n        } else {\n          return false\n        }\n      })\n    },\n    save () {\n      tenantApi.save(this.tenant)\n        .then((response) => {\n          const res = response.data\n          if (res.isSuccess) {\n            this.isVisible = false\n            this.$message({\n              message: this.$t('tips.createSuccess'),\n              type: 'success'\n            })\n            this.$emit('success')\n          }\n        }).finally(() => {\n          this.confirmDisabled = false\n          return true\n        })\n    },\n    update () {\n      tenantApi.update(this.tenant)\n        .then((response) => {\n          const res = response.data\n          if (res.isSuccess) {\n            this.isVisible = false\n            this.$message({\n              message: this.$t('tips.updateSuccess'),\n              type: 'success'\n            })\n            this.$emit('success')\n          }\n        }).finally(() => {\n          this.confirmDisabled = false\n          return true\n        })\n    },\n    reset () {\n      // 先清除校验，再清除表单，不然有奇怪的bug\n      this.$refs.form.clearValidate()\n      this.$refs.form.resetFields()\n      this.tenant = this.initTenant()\n    },\n    passwordErrorLockTimeUnitChange (unit) {\n      if (unit === '0') {\n        this.tenant.passwordErrorLockTime = 0\n        this.passwordErrorLockTimeHidden = true\n      } else {\n        this.passwordErrorLockTimeHidden = false\n      }\n    },\n    handleAvatarSuccess (res, file) {\n      if (!res.isSuccess) {\n        this.$message.error(res.msg)\n        return\n      }\n      const fileResult = res.data\n      this.tenant.logo = fileResult['url']\n    },\n    handleAvatarError (res, file) {\n      this.$message.error(res.msg)\n    },\n    beforeAvatarUpload (file) {\n      const isJPG = file.type === 'image/jpeg' || file.type === 'image/png'\n      const isLt2M = file.size / 1024 / 1024 < 10\n\n      if (!isJPG) {\n        this.$message.error('上传头像图片只能是 JPG / png 格式!')\n      }\n      if (!isLt2M) {\n        this.$message.error('上传头像图片大小不能超过 10MB!')\n      }\n      return isJPG && isLt2M\n    }\n\n  }\n}\n</script>\n<style lang=\"scss\" >\n.avatar-uploader .el-upload {\n  border: 1px dashed #d9d9d9;\n  border-radius: 6px;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n}\n.avatar-uploader .el-upload:hover {\n  border-color: #409eff;\n}\n.avatar-uploader-icon {\n  font-size: 28px;\n  color: #8c939d;\n  width: 100px;\n  height: 100px;\n  line-height: 100px;\n  text-align: center;\n}\n.avatar {\n  width: 100px;\n  height: 100px;\n  display: block;\n}\n</style>\n"]}]}