{"remainingRequest":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web-master(finish\\lamp-web-master\\src\\components\\lamp\\imgUpload.vue?vue&type=style&index=0&id=b94785d6&prod&lang=scss&scoped=true&","dependencies":[{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\src\\components\\lamp\\imgUpload.vue","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\css-loader\\index.js","mtime":1686711135550},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1686711138278},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\postcss-loader\\src\\index.js","mtime":1686711136346},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.avatar {\n  width: 100%;\n  height: 100%;\n}\n::v-deep.el-form-item__content {\n  line-height: 0;\n}\n::v-deep.el-upload-list--picture-card .el-upload-list__item {\n  margin: 0 8px 0 0;\n}\n::v-deep.el-upload--picture-card,\n::v-deep.el-upload-list--picture-card .el-upload-list__item {\n  width: 128px;\n  height: 128px;\n}\n.limit {\n  ::v-deep.el-upload--picture-card {\n    display: none;\n  }\n}\n",{"version":3,"sources":["imgUpload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"imgUpload.vue","sourceRoot":"src/components/lamp","sourcesContent":["<template>\n  <div>\n    <el-upload\n      :accept=\"accept\"\n      :action=\"action\"\n      :auto-upload=\"autoUpload\"\n      :before-upload=\"beforeUpload\"\n      :class=\"{ limit: showUploadBtn }\"\n      :data=\"fileOtherData\"\n      :file-list=\"imgFileList\"\n      :headers=\"headers\"\n      :limit=\"limit\"\n      :multiple=\"multiple\"\n      :on-change=\"handleChange\"\n      :on-error=\"handleError\"\n      :on-exceed=\"handleExceed\"\n      :on-remove=\"handleRemove\"\n      :ref=\"uploadRef\"\n      :show-file-list=\"showFileList\"\n      class=\"avatar-uploader\"\n      list-type=\"picture-card\"\n    >\n      <img :src=\"imageUrl\" class=\"avatar\" v-if=\"imageUrl\" />\n      <i class=\"el-icon-plus\" v-else />\n    </el-upload>\n    <el-dialog :visible.sync=\"dialogVisible\">\n      <img :src=\"dialogImageUrl\" alt width=\"100%\" />\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport db from \"@/utils/localstorage\";\nimport commonApi from \"@/api/Common.js\";\nimport {Base64} from 'js-base64';\nexport default {\n  props: {\n    uploadRef: {\n      type: String,\n      default: \"file1\"\n    },\n    // 是否多选\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    // 是否自动上传\n    autoUpload: {\n      type: Boolean,\n      default: false\n    },\n    // 是否显示上传列表\n    showFileList: {\n      type: Boolean,\n      default: true\n    },\n    // 最大允许上传个数\n    limit: {\n      type: Number,\n      default: null\n    },\n    // 允许上传的文件类型\n    accept: {\n      type: String,\n      default: \"image/jpeg, image/gif, image/png, image/bmp\"\n    },\n    // 允许上传的文件大小 单位：字节\n    acceptSize: {\n      type: Number,\n      default: null\n    },\n    // 默认额外上传数据\n    fileOtherData: {\n      type: Object,\n      default: function() {\n        return {\n          bizId: \"\",\n          bizType: \"\",\n          isSingle: false\n        };\n      }\n    }\n  },\n  data() {\n    return {\n      imageUrl: \"\",\n      dialogImageUrl: \"\",\n      dialogVisible: false,\n      disabled: true,\n      // 默认附件列表\n      imgFileList: [],\n      // 删除附件列表\n      removeFileAry: [],\n      // 新增附件列表\n      addFileAry: [],\n      // 是否上传失败\n      isUploadError: false,\n      fileLength: 0,\n      action: `${process.env.VUE_APP_BASE_API}/file/file/anyone/upload`\n    };\n  },\n  computed: {\n    showUploadBtn() {\n      return (\n        this.showFileList &&\n        this.addFileAry.length + this.imgFileList.length === this.limit\n      );\n    },\n    headers() {\n      return {\n        token: 'Bearer ' + db.get(\"TOKEN\", \"\"),\n        tenant: db.get(\"TENANT\", \"\") || \"\",\n        Authorization: `Basic ${Base64.encode(`${process.env.VUE_APP_CLIENT_ID}:${process.env.VUE_APP_CLIENT_SECRET}`)}`\n      };\n    }\n  },\n  methods: {\n    // 附件初始化\n    init({ bizId, bizType, imageUrl, isSingle, isDetail }) {\n      const vm = this;\n      vm.fileOtherData.bizId = bizId;\n      vm.fileOtherData.bizType = bizType;\n      vm.fileOtherData.isSingle = isSingle || false;\n      // vm.imgFileList = []\n      vm.imgFileList.length = 0;\n      vm.removeFileAry = [];\n      vm.addFileAry = [];\n      vm.imageUrl = imageUrl;\n      vm.isUploadError = false;\n      if (isDetail) {\n        vm.getAttachment();\n      }\n    },\n    // 附件上传前触发\n    beforeUpload() {\n      const vm = this;\n      vm.$store.state.hasLoading = true;\n    },\n    // 文件状态改变时的钩子，添加文件、上传成功和上传失败时都会被调用\n    handleChange(file, fileList) {\n      const vm = this;\n      if (file.response) {\n        if (file.response.isSuccess) {\n          const remoteFile = file.response.data;\n          vm.fileOtherData.bizId = remoteFile.bizId;\n          vm.imageUrl = remoteFile.url;\n          vm.$emit(\"setId\", remoteFile.bizId, remoteFile.url);\n        } else {\n          vm.$message.error(file.response.msg);\n          vm.isUploadError = false;\n        }\n      } else {\n        if (vm.acceptSize) {\n          const isLtAcceptSize = file.size > vm.acceptSize;\n          if (isLtAcceptSize) {\n            setTimeout(() => {\n              vm.$message.error(\n                \"只能上传\" +\n                  vm.renderSize(vm.acceptSize) +\n                  \"的文件!已为您过滤文件：\" +\n                  file.name\n              );\n            }, 10);\n\n            fileList.forEach((item, index) => {\n              if (item.uid === file.uid) {\n                fileList.splice(index, 1);\n              }\n            });\n          } else {\n            if (!vm.isUploadError) {\n              vm.addFileAry.push(file.name);\n            }\n            vm.isUploadError = false;\n          }\n        }\n      }\n      vm.$store.state.hasLoading = false;\n    },\n    renderSize(value) {\n      if (null == value || value == \"\") {\n        return \"0 B\";\n      }\n      const unitArr = new Array(\n        \"B\",\n        \"KB\",\n        \"MB\",\n        \"GB\",\n        \"TB\",\n        \"PB\",\n        \"EB\",\n        \"ZB\",\n        \"YB\"\n      );\n      let index = 0;\n      let srcsize = parseFloat(value);\n      index = Math.floor(Math.log(srcsize) / Math.log(1024));\n      let size = srcsize / Math.pow(1024, index);\n      size = size.toFixed(2);\n      if (unitArr[index]) {\n        return size + unitArr[index];\n      }\n      return \"文件太大\";\n    },\n    // 附件上传失败\n    handleError() {\n      const vm = this;\n      vm.$message.error(\"附件上传失败，请重试\");\n      vm.isUploadError = true;\n      vm.$store.state.hasLoading = false;\n      if (!vm.showFileList) {\n        vm.imageUrl = \"\";\n      }\n    },\n    // 查询附件\n    async getAttachment() {\n      const vm = this;\n      const res = await commonApi.getAttachment({\n        bizIds: vm.fileOtherData.bizId,\n        bizTypes: vm.fileOtherData.bizType\n      });\n      if (res.status === 200) {\n        if (res.data.code === 0) {\n          if (res.data.data.length > 0) {\n            let data = res.data.data[0].list;\n            data.map(item => {\n              item.name = item.submittedFileName;\n              if (!vm.showFileList) {\n                vm.imageUrl = item.url;\n              }\n            });\n            vm.imgFileList = data;\n            vm.$emit(\"fileLengthVaild\", vm.imgFileList.length);\n          }\n        }\n      }\n    },\n    // 删除附件回调\n    handleRemove(file) {\n      const vm = this;\n      if (file.bizId) {\n        vm.removeFileAry.push(file.id);\n        vm.imgFileList.map((item, index) => {\n          if (item.bizId === file.bizId) {\n            vm.imgFileList.splice(index, 1);\n            return false;\n          }\n        });\n      } else {\n        vm.addFileAry.map((item, index) => {\n          if (item === file.name) {\n            vm.addFileAry.splice(index, 1);\n            return false;\n          }\n        });\n      }\n    },\n    // 文件超出个数限制时的钩子\n    handleExceed() {\n      const vm = this;\n      vm.$message(\"当前最多允许上传\" + vm.limit + \"张图片\");\n    },\n    // 返回附件新增及删除数组长度\n    handleBack() {\n      const vm = this;\n      return {\n        addLength: vm.addFileAry.length,\n        removeLength: vm.removeFileAry.length\n      };\n    },\n    // 服务器删除附件\n    async deleteAttachment() {\n      const vm = this;\n      const res = await commonApi.deleteAttachment(vm.removeFileAry);\n      if (res.status === 200) {\n        if (res.data.code !== 0) {\n          vm.$message(res.data.msg);\n        }\n      }\n    },\n    // 附件上传服务器触发方法\n    submitFile(bizId, bizType, isSingle) {\n      const vm = this;\n      vm.fileOtherData.bizId = bizId;\n      vm.fileOtherData.bizType = bizType;\n      vm.fileOtherData.isSingle = isSingle;\n      if (!vm.showFileList) {\n        const length = vm.$refs[vm.uploadRef].uploadFiles.length - 1;\n        vm.$refs[vm.uploadRef].uploadFiles = [\n          vm.$refs[vm.uploadRef].uploadFiles[length]\n        ];\n        vm.imgFileList.map(item => {\n          vm.removeFileAry.push(item.id);\n        });\n        if (vm.imgFileList.length > 0) {\n          vm.deleteAttachment();\n        }\n      }\n      vm.$refs[vm.uploadRef].submit();\n      vm.$store.state.hasLoading = false;\n      vm.addFileAry = [];\n    },\n    // 服务器删除附件\n    async deleteAttachmentByIds(ids) {\n      const vm = this;\n      const res = await commonApi.deleteAttachment(ids);\n      if (res.status === 200) {\n        if (res.data.code !== 0) {\n          vm.$message(res.data.msg);\n        } else {\n          vm.removeFileAry = [];\n        }\n      }\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.avatar {\n  width: 100%;\n  height: 100%;\n}\n::v-deep.el-form-item__content {\n  line-height: 0;\n}\n::v-deep.el-upload-list--picture-card .el-upload-list__item {\n  margin: 0 8px 0 0;\n}\n::v-deep.el-upload--picture-card,\n::v-deep.el-upload-list--picture-card .el-upload-list__item {\n  width: 128px;\n  height: 128px;\n}\n.limit {\n  ::v-deep.el-upload--picture-card {\n    display: none;\n  }\n}\n</style>\n"]}]}