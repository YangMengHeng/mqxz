{"remainingRequest":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web-master(finish\\lamp-web-master\\src\\views\\lamp\\resources\\smsTemplate\\edit.vue?vue&type=style&index=0&id=11353268&prod&lang=scss&scoped=true&","dependencies":[{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\src\\views\\lamp\\resources\\smsTemplate\\edit.vue","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\css-loader\\index.js","mtime":1686711135550},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1686711138278},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\postcss-loader\\src\\index.js","mtime":1686711136346},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\naside {\n  margin-top: 10px;\n  margin-bottom: 0;\n}\n",{"version":3,"sources":["edit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0MA;AACA;AACA;AACA","file":"edit.vue","sourceRoot":"src/views/lamp/resources/smsTemplate","sourcesContent":["<template>\n  <el-dialog :close-on-click-modal=\"false\" :close-on-press-escape=\"true\" :title=\"title\" :type=\"type\" :visible.sync=\"isVisible\" :width=\"width\" top=\"50px\">\n    <el-form :model=\"smsTemplate\" :rules=\"rules\" label-position=\"right\" label-width=\"100px\" ref=\"form\">\n      <el-form-item :label=\"$t('table.smsTemplate.providerType')\" prop=\"providerType\">\n        <el-select placeholder style=\"width:100%\" v-model=\"smsTemplate.providerType.code\" value>\n          <el-option :key=\"index\" :label=\"item\" :value=\"key\" v-for=\"(item, key, index) in enums.ProviderType\" />\n        </el-select>\n      </el-form-item>\n      <el-form-item :label=\"$t('table.smsTemplate.appId')\" prop=\"appId\">\n        <el-input v-model=\"smsTemplate.appId\" />\n      </el-form-item>\n      <el-form-item :label=\"$t('table.smsTemplate.appSecret')\" prop=\"appSecret\">\n        <el-input v-model=\"smsTemplate.appSecret\" />\n      </el-form-item>\n      <el-form-item :label=\"$t('table.smsTemplate.url')\" prop=\"url\">\n        <el-input v-model=\"smsTemplate.url\" />\n      </el-form-item>\n      <el-form-item :label=\"$t('table.smsTemplate.name')\" prop=\"name\">\n        <el-input v-model=\"smsTemplate.name\" />\n      </el-form-item>\n      <el-form-item :label=\"$t('table.smsTemplate.content')\" prop=\"content\">\n        <el-input v-model=\"smsTemplate.content\" />\n        <aside>\n          百度云：使用 ${xx} 作为占位符\n          <br />\n          阿里云：使用 ${xx} 作为占位符\n          <br />\n          腾讯云：使用 {xx} 作为占位符\n        </aside>\n      </el-form-item>\n      <el-form-item :label=\"$t('table.smsTemplate.templateCode')\" prop=\"templateCode\">\n        <el-input v-model=\"smsTemplate.templateCode\" />\n      </el-form-item>\n      <el-form-item :label=\"$t('table.smsTemplate.signName')\" prop=\"signName\">\n        <el-input v-model=\"smsTemplate.signName\" />\n      </el-form-item>\n      <el-form-item :label=\"$t('table.smsTemplate.templateDescribe')\" prop=\"templateDescribe\">\n        <el-input v-model=\"smsTemplate.templateDescribe\" />\n      </el-form-item>\n    </el-form>\n    <div class=\"dialog-footer\" slot=\"footer\">\n      <el-button @click=\"isVisible = false\" plain type=\"warning\">{{ $t('common.cancel') }}</el-button>\n      <el-button @click=\"submitForm\" plain type=\"primary\">{{ $t('common.confirm') }}</el-button>\n    </div>\n  </el-dialog>\n</template>\n<script>\nimport smsTemplateApi from '@/api/SmsTemplate.js'\n\nexport default {\n  name: 'SmsTemplateEdit',\n  components: {},\n  props: {\n    dialogVisible: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'add'\n    }\n  },\n  data () {\n    return {\n      smsTemplate: this.initSmsTemplate(),\n      screenWidth: 0,\n      width: this.initWidth(),\n      enums: {\n        ProviderType: {}\n      },\n      rules: {\n        providerType: [{ required: true, message: this.$t('rules.require'), trigger: 'change' }],\n        appId: [{ required: true, message: this.$t('rules.require'), trigger: 'blur' },\n        { min: 1, max: 255, message: this.$t('rules.range4to10'), trigger: 'blur' }],\n        appSecret: [{ required: true, message: this.$t('rules.require'), trigger: 'blur' },\n        { min: 1, max: 255, message: this.$t('rules.range4to10'), trigger: 'blur' }],\n        content: { required: true, message: this.$t('rules.require'), trigger: 'blur' },\n        templateCode: { required: true, message: this.$t('rules.require'), trigger: 'blur' }\n      }\n    }\n  },\n  computed: {\n    isVisible: {\n      get () {\n        return this.dialogVisible\n      },\n      set () {\n        this.close()\n        this.reset()\n      }\n    },\n    title () {\n      return this.type === 'add' ? this.$t('common.add') : this.$t('common.edit')\n    }\n  },\n  watch: {\n\n  },\n  mounted () {\n    window.onresize = () => {\n      return (() => {\n        this.width = this.initWidth()\n      })()\n    }\n  },\n  methods: {\n    initSmsTemplate () {\n      return {\n        id: '',\n        providerType: { code: '' },\n        appId: '',\n        appSecret: '',\n        url: '',\n        name: '',\n        content: '',\n        templateParams: '',\n        templateCode: '',\n        signName: '',\n        templateDescribe: ''\n      }\n    },\n    initWidth () {\n      this.screenWidth = document.body.clientWidth\n      if (this.screenWidth < 991) {\n        return '90%'\n      } else if (this.screenWidth < 1400) {\n        return '45%'\n      } else {\n        return '800px'\n      }\n    },\n    loadListOptions ({ callback }) {\n      callback()\n    },\n    setSmsTemplate (val = {}) {\n      const vm = this\n      if (val['row']) {\n        vm.smsTemplate = { ...val['row'] }\n      }\n      vm.enums = val['enums']\n\n    },\n    close () {\n      this.$emit('close')\n    },\n    reset () {\n      // 先清除校验，再清除表单，不然有奇怪的bug\n      this.$refs.form.clearValidate()\n      this.$refs.form.resetFields()\n      this.smsTemplate = this.initSmsTemplate()\n    },\n    submitForm () {\n      const vm = this\n      this.$refs.form.validate((valid) => {\n        if (valid) {\n          vm.editSubmit()\n        } else {\n          return false\n        }\n      })\n    },\n    editSubmit () {\n      const vm = this\n      if (vm.type === 'add') {\n        vm.save()\n      } else {\n        vm.update()\n      }\n    },\n    save () {\n      const vm = this\n      smsTemplateApi.save(this.smsTemplate)\n        .then((response) => {\n          const res = response.data\n          if (res.isSuccess) {\n            vm.isVisible = false\n            vm.$message({\n              message: vm.$t('tips.createSuccess'),\n              type: 'success'\n            })\n            vm.$emit('success')\n          }\n        })\n    },\n    update () {\n      smsTemplateApi.update(this.smsTemplate)\n        .then((response) => {\n          const res = response.data\n          if (res.isSuccess) {\n            this.isVisible = false\n            this.$message({\n              message: this.$t('tips.updateSuccess'),\n              type: 'success'\n            })\n            this.$emit('success')\n          }\n        })\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\naside {\n  margin-top: 10px;\n  margin-bottom: 0;\n}\n</style>\n"]}]}