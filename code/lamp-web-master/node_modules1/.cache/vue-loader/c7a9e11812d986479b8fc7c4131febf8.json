{"remainingRequest":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web-master(finish\\lamp-web-master\\src\\views\\lamp\\museum\\edit.vue?vue&type=template&id=43cc5e4a&scoped=true&","dependencies":[{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\src\\views\\lamp\\museum\\edit.vue","mtime":1690192904359},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1686711138402},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"el-dialog\",\n    {\n      attrs: {\n        \"close-on-click-modal\": false,\n        \"close-on-press-escape\": true,\n        title: _vm.title,\n        type: _vm.type,\n        visible: _vm.isVisible,\n        width: _vm.width,\n        top: \"50px\",\n      },\n      on: {\n        \"update:visible\": function ($event) {\n          _vm.isVisible = $event\n        },\n      },\n    },\n    [\n      _c(\n        \"div\",\n        {\n          staticClass: \"dialog-footer\",\n          attrs: { slot: \"footer\" },\n          slot: \"footer\",\n        },\n        [\n          _c(\n            \"el-button\",\n            {\n              attrs: { plain: \"\", type: \"warning\" },\n              on: {\n                click: function ($event) {\n                  _vm.isVisible = false\n                },\n              },\n            },\n            [_vm._v(\"\\n      \" + _vm._s(_vm.$t(\"common.cancel\")) + \"\\n    \")]\n          ),\n          _c(\n            \"el-button\",\n            {\n              attrs: { plain: \"\", type: \"primary\" },\n              on: { click: _vm.submitForm },\n            },\n            [_vm._v(\"\\n      \" + _vm._s(_vm.$t(\"common.confirm\")) + \"\\n    \")]\n          ),\n        ],\n        1\n      ),\n      _c(\n        \"el-form\",\n        {\n          ref: \"form\",\n          attrs: {\n            model: _vm.task,\n            rules: _vm.rules,\n            \"label-position\": \"right\",\n            \"label-width\": \"100px\",\n          },\n        },\n        [\n          _c(\n            \"el-form-item\",\n            {\n              attrs: {\n                label: _vm.$t(\"table.task.createBy\"),\n                label: \"创建人\",\n                prop: \"createBy\",\n              },\n            },\n            [\n              _c(\"el-input\", {\n                attrs: {\n                  disabled: _vm.type === \"edit\",\n                  type: \"\",\n                  placeholder: \"创建人\",\n                },\n                model: {\n                  value: _vm.task.createBy,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.task, \"createBy\", $$v)\n                  },\n                  expression: \"task.createBy\",\n                },\n              }),\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            {\n              attrs: {\n                label: _vm.$t(\"table.task.dataUrl\"),\n                label: \"推理数据url\",\n                prop: \"dataUrl\",\n              },\n            },\n            [\n              _c(\"el-input\", {\n                attrs: { type: \"\", placeholder: \"推理数据url\" },\n                model: {\n                  value: _vm.task.dataUrl,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.task, \"dataUrl\", $$v)\n                  },\n                  expression: \"task.dataUrl\",\n                },\n              }),\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            {\n              attrs: {\n                label: _vm.$t(\"table.task.ecnSelection\"),\n                label: \"推理机选择\",\n                prop: \"ecnSelection\",\n              },\n            },\n            [\n              _c(\"el-input\", {\n                attrs: { type: \"\", placeholder: \"推理机选择\" },\n                model: {\n                  value: _vm.task.ecnSelection,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.task, \"ecnSelection\", $$v)\n                  },\n                  expression: \"task.ecnSelection\",\n                },\n              }),\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            {\n              attrs: {\n                label: _vm.$t(\"table.task.endTime\"),\n                label: \"结束时间\",\n                prop: \"endTime\",\n              },\n            },\n            [\n              _c(\"el-input\", {\n                attrs: { type: \"date\", placeholder: \"结束时间\" },\n                model: {\n                  value: _vm.task.endTime,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.task, \"endTime\", $$v)\n                  },\n                  expression: \"task.endTime\",\n                },\n              }),\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            {\n              attrs: {\n                label: _vm.$t(\"table.task.modelParameter\"),\n                label: \"模型参数\",\n                prop: \"modelParameter\",\n              },\n            },\n            [\n              _c(\"el-input\", {\n                attrs: { type: \"textarea\", placeholder: \"模型参数\" },\n                model: {\n                  value: _vm.task.modelParameter,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.task, \"modelParameter\", $$v)\n                  },\n                  expression: \"task.modelParameter\",\n                },\n              }),\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            {\n              attrs: {\n                label: _vm.$t(\"table.task.modelSelection\"),\n                label: \"模型选择\",\n                prop: \"modelSelection\",\n              },\n            },\n            [\n              _c(\"el-input\", {\n                attrs: { type: \"textarea\", placeholder: \"模型选择\" },\n                model: {\n                  value: _vm.task.modelSelection,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.task, \"modelSelection\", $$v)\n                  },\n                  expression: \"task.modelSelection\",\n                },\n              }),\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            {\n              attrs: {\n                label: _vm.$t(\"table.task.startTime\"),\n                label: \"开始时间\",\n                prop: \"startTime\",\n              },\n            },\n            [\n              _c(\"el-input\", {\n                attrs: { type: \"date\", placeholder: \"开始时间\" },\n                model: {\n                  value: _vm.task.startTime,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.task, \"startTime\", $$v)\n                  },\n                  expression: \"task.startTime\",\n                },\n              }),\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            {\n              attrs: {\n                label: _vm.$t(\"table.task.taskName\"),\n                label: \"任务名称\",\n                prop: \"taskName\",\n              },\n            },\n            [\n              _c(\"el-input\", {\n                attrs: { type: \"textarea\", placeholder: \"任务名称\" },\n                model: {\n                  value: _vm.task.taskName,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.task, \"taskName\", $$v)\n                  },\n                  expression: \"task.taskName\",\n                },\n              }),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}