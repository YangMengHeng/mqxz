{"remainingRequest":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web-master(finish\\lamp-web-master\\src\\views\\lamp\\museum\\index3.vue?vue&type=style&index=0&id=3d9926f0&prod&lang=css&","dependencies":[{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\src\\views\\lamp\\museum\\index3.vue","mtime":1692282970926},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\css-loader\\index.js","mtime":1686711135550},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1686711138278},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\postcss-loader\\src\\index.js","mtime":1686711136346},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n \r\n#myChart{\r\n  width: 95%;\r\n  height: 400px;\r\n}\r\n",{"version":3,"sources":["index3.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+IA;AACA;AACA;AACA","file":"index3.vue","sourceRoot":"src/views/lamp/museum","sourcesContent":["<template>\r\n<div id=\"myChart\" />\r\n  <span text-align:center; style=\"color:red; text-align:center; position:relative\"> 欢迎参观博物馆</span>\r\n   <span text-align:center; style=\"color:red; text-align:center; position:relative\"> 今日访客{{}}\r\n   </span>\r\n   <span text-align:center; style=\"color:red; text-align:center; position:relative\"> 馆内人数{{}}                  本月访客{{}}</span>\r\n  <span text-align:center; style=\"color:red; text-align:center; position:relative\"> 今年访客{{}}        </span>\r\n  \r\n  </div>\r\n</template>\r\n \r\n<script>\r\nimport echarts from 'echarts'//引入echarts\r\nimport { update} from '@/api/museum'//这个自己封装好的接口文件 tv_manage/tv_manage\r\nexport default {\r\n  name: 'TrendsSort',\r\n  //获取父组件的数据,（没必要获取父组件的数据可以删掉）\r\n  props: {\r\n    temps: {\r\n      type: Object\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      // 实时数据数组\r\n      minuteTime: [],    //itme改为minuteTime\r\n      inPerMinute: [],                //price改为inPerMinute    \r\n      outPerMinute: [],                     //order改为outPerMinute\r\n      stillPerPinute: [],                    //see改为stillPerPinute\r\n      // 折线图echarts初始化选项\r\n      echartsOption: {\r\n        legend: {\r\n          data: ['进入访客人数', '离开访客人数', '滞留访客人数']\r\n        },\r\n        xAxis: {\r\n          nameTextStyle: {\r\n            fontWeight: 600,\r\n            fontSize: 18\r\n          },\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: this.minuteTime\r\n        },\r\n        yAxis: {\r\n          nameTextStyle: {\r\n            fontWeight: 600,\r\n            fontSize: 18\r\n          },\r\n          type: 'value',\r\n          scale: true,\r\n          // boundaryGap: ['15%', '15%'],\r\n          axisLabel: {\r\n            interval: 'auto',\r\n            formatter: '{value}'\r\n          }\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        series: [\r\n          {\r\n            name: '进入访客人数',\r\n            type: 'line',\r\n            smooth: true,\r\n            data: this.inPerMinute\t// 绑定实时数据数组\r\n          },\r\n          {\r\n            name: '离开访客人数',\r\n            type: 'line',\r\n            smooth: true,\r\n            data: this.outPerMinute\t// 绑定实时数据数组\r\n          },\r\n          {\r\n            name: '滞留访客人数',\r\n            type: 'line',\r\n            smooth: true,\r\n            data: this.stillPerPinute\t// 绑定实时数据数组\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n   //监听父组件传过来的值,判断是否开启定时器，（没必要获取父组件的数据可以删掉用mounted() 周期函数）\r\n  watch: {\r\n    temps(curVal) {\r\n      this.myChart = echarts.init(document.getElementById('myChart'), 'light')\t// 初始化echarts, theme为light\r\n      this.myChart.setOption(this.echartsOption)\t// echarts设置初始化选项\r\n      if (curVal.id === 0) {\r\n        clearInterval(this.timer)// 关闭定时器\r\n      } else {\r\n        // 开启定时器\r\n        this.timer = setInterval(() => {\r\n          this.addData(curVal)\r\n        }, 60000)\r\n      }\r\n    }\r\n  },\r\n       \r\n  //不需要父组件数据的用这个\r\n  // mounted() {\r\n  //     this.myChart = echarts.init(document.getElementById('myChart'), 'light')\t// 初始化echarts, theme为light\r\n  //     this.myChart.setOption(this.echartsOption)\t// echarts设置初始化选项\r\n  //     setInterval(this.addData, 60000)\t// 每一分钟更新实时数据到折线图\r\n  // },\r\n  methods: {\r\n    // 获取当前时间\r\n    getTime: function() {\r\n      var ts = arguments[0] || 0\r\n      var t, h, i, s\r\n      t = ts ? new Date(ts * 1000) : new Date()\r\n      h = t.getHours()\r\n      i = t.getMinutes()\r\n      s = t.getSeconds()\r\n      // 定义时间格式\r\n      return (h < 10 ? '0' + h : h) + ':' + (i < 10 ? '0' + i : i) + ':' + (s < 10 ? '0' + s : s)\r\n    },\r\n    // 添加实时数据\r\n    addData: function(curVal) {\r\n \r\n       // 从接口获取数据并添加到数组(这是自己封装好的接口)\r\n      tv_update_TrendsSort(curVal).then(response => {\r\n        if (response.code === 200) {\r\n          this.inPerMinute.push((response.inPerMinute).toFixed(2))\r\n          this.outPerMinute.push((response.outPerMinute).toFixed(2))\r\n          this.stillPerPinute.push((response.stillPerPinute).toFixed(2))\r\n          this.minuteTime.push(this.getTime(Math.round(new Date().getTime() / 1000)))\r\n          // 重新将数组赋值给echarts选项\r\n          this.echartsOption.series[0].data = this.inPerMinute\r\n          this.echartsOption.series[1].data = this.outPerMinute\r\n          this.echartsOption.series[2].data = this.stillPerPinute\r\n          this.echartsOption.xAxis.data = this.minuteTime\r\n          this.myChart.setOption(this.echartsOption)\r\n        } else {\r\n          this.$message.error('出错了,折线图获取失败')\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n \r\n<style>\r\n \r\n#myChart{\r\n  width: 95%;\r\n  height: 400px;\r\n}\r\n</style>"]}]}