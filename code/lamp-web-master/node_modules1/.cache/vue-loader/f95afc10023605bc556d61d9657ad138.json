{"remainingRequest":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web-master(finish\\lamp-web-master\\src\\views\\lamp\\system\\loginLog\\index.vue?vue&type=style&index=0&id=4c8d59e1&lang=scss&scoped=true&","dependencies":[{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\src\\views\\lamp\\system\\loginLog\\index.vue","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\css-loader\\index.js","mtime":1686711135550},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1686711138278},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\postcss-loader\\src\\index.js","mtime":1686711136346},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master(finish\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.item {\n  margin-top: 7px;\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoaA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/lamp/system/loginLog","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-input :placeholder=\"$t('table.loginLog.account')\"\n                class=\"filter-item search-item\" v-model=\"queryParams.model.account\"/>\n      <el-input :placeholder=\"$t('table.loginLog.location')\" class=\"filter-item search-item\"\n                v-model=\"queryParams.model.location\"/>\n      <el-input :placeholder=\"$t('table.loginLog.requestIp')\"\n                class=\"filter-item search-item\" v-model=\"queryParams.model.requestIp\"/>\n      <el-date-picker\n        :range-separator=\"null\"\n        :start-placeholder=\"$t('table.createTime')\"\n        class=\"filter-item search-item date-range-item\"\n        format=\"yyyy-MM-dd HH:mm:ss\"\n        type=\"datetimerange\"\n        v-model=\"queryParams.timeRange\"\n        value-format=\"yyyy-MM-dd HH:mm:ss\"\n      />\n      <el-button @click=\"search\" class=\"filter-item\" plain type=\"primary\">\n        {{ $t(\"table.search\") }}\n      </el-button>\n      <el-button @click=\"reset\" class=\"filter-item\" plain type=\"warning\">\n        {{ $t(\"table.reset\") }}\n      </el-button>\n      <el-dropdown class=\"filter-item\" trigger=\"click\"\n                   v-has-any-permission=\"['authority:loginLog:delete', 'authority:loginLog:export']\">\n        <el-button>\n          {{ $t(\"table.more\") }}\n          <i class=\"el-icon-arrow-down el-icon--right\"/>\n        </el-button>\n        <el-dropdown-menu slot=\"dropdown\">\n          <el-dropdown-item @click.native=\"batchDelete\" v-has-permission=\"['authority:loginLog:delete']\">\n            {{ $t(\"table.delete\") }}\n          </el-dropdown-item>\n          <el-dropdown-item @click.native=\"exportExcel\" v-has-permission=\"['authority:loginLog:export']\">\n            {{ $t(\"table.export\") }}\n          </el-dropdown-item>\n          <el-dropdown-item @click.native=\"exportExcelPreview\" v-has-permission=\"['authority:loginLog:export']\">\n            {{ $t(\"table.exportPreview\") }}\n          </el-dropdown-item>\n        </el-dropdown-menu>\n      </el-dropdown>\n      <el-dropdown class=\"filter-item\" trigger=\"click\" v-has-any-permission=\"['authority:loginLog:delete']\">\n        <el-button>\n          清理日志\n          <i class=\"el-icon-arrow-down el-icon--right\"/>\n        </el-button>\n        <el-dropdown-menu slot=\"dropdown\">\n          <el-dropdown-item @click.native=\"clear(1)\" >\n           保留一个月\n          </el-dropdown-item>\n          <el-dropdown-item @click.native=\"clear(2)\" >\n            保留三个月\n          </el-dropdown-item>\n          <el-dropdown-item @click.native=\"clear(3)\" >\n            保留六个月\n          </el-dropdown-item>\n          <el-dropdown-item @click.native=\"clear(4)\" >\n            保留一年\n          </el-dropdown-item>\n          <el-dropdown-item @click.native=\"clear(5)\" >\n            保留一千条\n          </el-dropdown-item>\n          <el-dropdown-item @click.native=\"clear(6)\" >\n            保留一万条\n          </el-dropdown-item>\n          <el-dropdown-item @click.native=\"clear(7)\" >\n            保留三万条\n          </el-dropdown-item>\n          <el-dropdown-item @click.native=\"clear(8)\" >\n            保留十万条\n          </el-dropdown-item>\n          <el-dropdown-item @click.native=\"clear(9)\" >\n            清空所有\n          </el-dropdown-item>\n        </el-dropdown-menu>\n      </el-dropdown>\n    </div>\n    <el-table\n      :data=\"tableData.records\"\n      :key=\"tableKey\"\n      @filter-change=\"filterChange\"\n      @selection-change=\"onSelectChange\"\n      @sort-change=\"sortChange\"\n      @cell-click=\"cellClick\"\n      border fit row-key=\"id\"\n      ref=\"table\"\n      style=\"width: 100%;\"\n      v-loading=\"loading\"\n    >\n      <el-table-column align=\"center\" type=\"selection\" width=\"40px\" :reserve-selection=\"true\"/>\n      <el-table-column\n        :label=\"$t('table.loginLog.userName')\"\n        :show-overflow-tooltip=\"true\"\n        align=\"center\"\n        min-width=\"80px\"\n        prop=\"userName\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.userName }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('table.loginLog.requestIp')\"\n        :show-overflow-tooltip=\"true\"\n        align=\"center\"\n        min-width=\"80px\"\n        prop=\"requestIp\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.requestIp }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('table.loginLog.browser')\"\n        :show-overflow-tooltip=\"true\"\n        align=\"center\"\n        prop=\"browser\"\n        width=\"120px\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.browser }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('table.loginLog.browserVersion')\"\n        :show-overflow-tooltip=\"true\"\n        align=\"center\"\n        prop=\"browserVersion\"\n        width=\"120px\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.browserVersion }}</span>\n        </template>\n      </el-table-column>\n\n      <el-table-column\n        :label=\"$t('table.loginLog.operatingSystem')\"\n        :show-overflow-tooltip=\"true\"\n        align=\"center\"\n        prop=\"operatingSystem\"\n        width=\"170px\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.operatingSystem }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('table.loginLog.location')\"\n        :show-overflow-tooltip=\"true\"\n        align=\"center\"\n        min-width=\"150px\"\n        prop=\"location\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.location }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('table.loginLog.loginDate')\"\n        :show-overflow-tooltip=\"true\"\n        align=\"center\"\n        prop=\"createTime\"\n        sortable=\"custom\"\n        width=\"170px\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.createTime }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('table.loginLog.description')\"\n        :show-overflow-tooltip=\"true\"\n        align=\"left\"\n        column-key=\"description\"\n        prop=\"description\">\n        <template slot-scope=\"scope\">\n          <span>\n            <el-badge\n              :type=\"scope.row.description && scope.row.description == '登录成功' ? 'success' : 'danger'\"\n              class=\"item\" is-dot/>\n            {{ scope.row.description }}\n          </span>\n        </template>\n      </el-table-column>\n\n      <el-table-column\n        :label=\"$t('table.operation')\"\n        column-key=\"operation\"\n        align=\"center\"\n        class-name=\"small-padding fixed-width\"\n        width=\"100px\"\n      >\n        <template slot-scope=\"{ row }\">\n          <i\n            @click=\"singleDelete(row)\"\n            class=\"el-icon-delete table-operation\"\n            style=\"color: #f50;\"\n            v-has-permission=\"['authority:loginLog:delete']\"\n          />\n\n          <el-link class=\"no-perm\" v-has-no-permission=\"['authority:loginLog:delete']\">{{\n            $t(\"tips.noPermission\")\n            }}\n          </el-link>\n        </template>\n      </el-table-column>\n    </el-table>\n    <pagination\n      :limit.sync=\"queryParams.size\"\n      :page.sync=\"queryParams.current\"\n      :total=\"Number(tableData.total)\"\n      @pagination=\"fetch\"\n      v-show=\"tableData.total > 0\"\n    />\n    <el-dialog\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"true\"\n      title=\"预览\"\n      width=\"80%\"\n      top=\"50px\"\n      :visible.sync=\"preview.isVisible\"\n      v-el-drag-dialog\n    >\n      <el-scrollbar>\n        <div v-html=\"preview.context\"></div>\n      </el-scrollbar>\n    </el-dialog>\n  </div>\n</template>\n<script>\n  import Pagination from \"@/components/Pagination\";\n  import loginLogApi from \"@/api/LoginLog.js\";\n  import elDragDialog from '@/directive/el-drag-dialog'\n  import {downloadFile, initQueryParams} from '@/utils/commons'\n\n  export default {\n    name: \"LoginLog\",\n    directives: {elDragDialog},\n    components: {Pagination},\n    filters: {},\n    data() {\n      return {\n        preview: {\n          isVisible: false,\n          context: ''\n        },\n        tableKey: 0,\n        loading: false,\n        queryParams: initQueryParams(),\n        selection: [],\n        tableData: {\n          total: 0\n        },\n        enums: {},\n        dicts: {}\n      };\n    },\n    computed: {},\n    mounted() {\n      this.fetch();\n    },\n    methods: {\n      onSelectChange(selection) {\n        this.selection = selection;\n      },\n      exportExcelPreview() {\n        if (this.queryParams.timeRange) {\n          this.queryParams.extra.createTime_st = this.queryParams.timeRange[0];\n          this.queryParams.extra.createTime_ed = this.queryParams.timeRange[1];\n        }\n        this.queryParams.extra.fileName = '导出登录日志数据';\n        loginLogApi.preview(this.queryParams).then(response => {\n          const res = response.data;\n          this.preview.isVisible = true;\n          this.preview.context = res.data;\n        });\n      },\n      exportExcel() {\n        if (this.queryParams.timeRange) {\n          this.queryParams.extra.createTime_st = this.queryParams.timeRange[0];\n          this.queryParams.extra.createTime_ed = this.queryParams.timeRange[1];\n        }\n        this.queryParams.extra.fileName = '导出登录日志数据';\n        loginLogApi.export(this.queryParams).then(response => {\n          downloadFile(response);\n        });\n      },\n      fetch(params = {}) {\n        this.loading = true;\n        if (this.queryParams.timeRange) {\n          this.queryParams.extra.createTime_st = this.queryParams.timeRange[0];\n          this.queryParams.extra.createTime_ed = this.queryParams.timeRange[1];\n        }\n\n        this.queryParams.current = params.current ? params.current : this.queryParams.current;\n        this.queryParams.size = params.size ? params.size : this.queryParams.size;\n\n        loginLogApi.page(this.queryParams).then(response => {\n          const res = response.data;\n          if (res.isSuccess) {\n            this.tableData = res.data;\n          }\n        }).finally(() => this.loading = false);\n      },\n      singleDelete(row) {\n        this.$refs.table.clearSelection()\n        this.$refs.table.toggleRowSelection(row, true);\n        this.batchDelete();\n      },\n      clear(type) {\n        this.$confirm('确认要清除日志吗？', this.$t(\"common.tips\"), {\n          confirmButtonText: this.$t(\"common.confirm\"),\n          cancelButtonText: this.$t(\"common.cancel\"),\n          type: \"warning\"\n        })\n          .then(() => {\n            loginLogApi.clear({type: type}).then(response => {\n              const res = response.data;\n              if (res.isSuccess) {\n                this.$message({\n                  message: this.$t(\"tips.deleteSuccess\"),\n                  type: \"success\"\n                });\n              }\n\n              this.search();\n            });\n\n          })\n          .catch(() => {\n          });\n      },\n      batchDelete() {\n        if (!this.selection.length) {\n          this.$message({\n            message: this.$t(\"tips.noDataSelected\"),\n            type: \"warning\"\n          });\n          return;\n        }\n        this.$confirm(this.$t(\"tips.confirmDelete\"), this.$t(\"common.tips\"), {\n          confirmButtonText: this.$t(\"common.confirm\"),\n          cancelButtonText: this.$t(\"common.cancel\"),\n          type: \"warning\"\n        })\n          .then(() => {\n            const logIds = this.selection.map(item => item.id);\n            this.delete(logIds);\n          })\n          .catch(() => {\n            this.clearSelections();\n          });\n      },\n      clearSelections() {\n        this.$refs.table.clearSelection();\n      },\n      delete(logIds) {\n        loginLogApi.delete(logIds).then(response => {\n          const res = response.data;\n          if (res.isSuccess) {\n            this.$message({\n              message: this.$t(\"tips.deleteSuccess\"),\n              type: \"success\"\n            });\n          }\n\n          this.search();\n        });\n      },\n      search() {\n        this.fetch({\n          ...this.queryParams\n        });\n      },\n      reset() {\n        this.queryParams = initQueryParams();\n        this.$refs.table.clearSort();\n        this.$refs.table.clearFilter();\n        this.search();\n      },\n      sortChange(val) {\n        this.queryParams.sort = val.prop;\n        this.queryParams.order = val.order;\n        if (this.queryParams.sort) {\n          this.search();\n        }\n      },\n      filterChange(filters) {\n        for (const key in filters) {\n          if (key.includes('.')) {\n            const val = {};\n            val[key.split('.')[1]] = filters[key][0];\n            this.queryParams.model[key.split('.')[0]] = val;\n          } else {\n            this.queryParams.model[key] = filters[key][0]\n          }\n        }\n        this.search()\n      },\n      cellClick (row, column) {\n        if (column['columnKey'] === \"operation\") {\n          return;\n        }\n        let flag = false;\n        this.selection.forEach((item)=>{\n          if(item.id === row.id) {\n            flag = true;\n            this.$refs.table.toggleRowSelection(row);\n          }\n        })\n\n        if(!flag){\n          this.$refs.table.toggleRowSelection(row, true);\n        }\n      }\n    }\n  };\n</script>\n<style lang=\"scss\" scoped>\n  .item {\n    margin-top: 7px;\n  }\n</style>\n"]}]}