{"remainingRequest":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\src\\views\\lamp\\org\\user\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\src\\views\\lamp\\org\\user\\edit.vue","mtime":1679380940000},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1686711137609},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"C:\\Users\\Planck\\Desktop\\mycode\\lamp\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {validMobile} from \"@/utils/my-validate\";\nimport Treeselect from \"@riophae/vue-treeselect\";\nimport \"@riophae/vue-treeselect/dist/vue-treeselect.css\";\nimport imgUpload from \"@/components/lamp/imgUpload\";\nimport userApi from \"@/api/User.js\";\nimport stationApi from \"@/api/Station.js\";\n\nexport default {\n  name: \"UserEdit\",\n  components: {Treeselect, imgUpload},\n  props: {\n    dialogVisible: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: \"add\"\n    }\n  },\n  data() {\n    return {\n      accept: \"image/jpeg, image/gif, image/png\",\n      remoteStationLoading: false,\n      user: this.initUser(),\n      screenWidth: 0,\n      width: this.initWidth(),\n      orgList: [],\n      stationList: [],\n      imgFileList: [],\n      imgFileData: {\n        bizId: \"\",\n        bizType: \"USER_AVATAR\"\n      },\n      // 图片文件总数\n      imgFileTotal: 0,\n      // 上传成功数\n      successNum: 0,\n      enums: {\n        Sex: {}\n      },\n      dicts: {\n        NATION: [],\n        POSITION_STATUS: [],\n        EDUCATION: [],\n      },\n      rules: {\n        account: [\n          {\n            required: true,\n            message: this.$t(\"rules.require\"),\n            trigger: \"blur\"\n          },\n          {\n            min: 1,\n            max: 255,\n            message: this.$t(\"rules.range4to10\"),\n            trigger: \"blur\"\n          },\n          {\n            validator: (rule, value, callback) => {\n              if (!this.user.id) {\n                callback();\n              } else {\n                callback();\n              }\n            },\n            trigger: \"blur\"\n          }\n        ],\n        email: {\n          type: \"email\",\n          message: this.$t(\"rules.email\"),\n          trigger: \"blur\"\n        },\n        mobile: {\n          validator: (rule, value, callback) => {\n            if (value !== \"\" && !validMobile(value)) {\n              callback(this.$t(\"rules.mobile\"));\n            } else {\n              callback();\n            }\n          },\n          trigger: \"blur\"\n        },\n        sex: {\n          required: true,\n          message: this.$t(\"rules.require\"),\n          trigger: \"change\"\n        },\n        state: {\n          required: true,\n          message: this.$t(\"rules.require\"),\n          trigger: \"blur\"\n        }\n      }\n    };\n  },\n  computed: {\n    isVisible: {\n      get() {\n        return this.dialogVisible;\n      },\n      set() {\n        this.close();\n        this.reset();\n      }\n    },\n    title() {\n      return this.type === \"add\"\n        ? this.$t(\"common.add\")\n        : this.$t(\"common.edit\");\n    }\n  },\n  watch: {},\n  mounted() {\n    window.onresize = () => {\n      return (() => {\n        this.width = this.initWidth();\n      })();\n    };\n  },\n  methods: {\n    myAvatar(avatar) {\n      if (!avatar) {\n        return require(`@/assets/avatar/default.jpg`);\n      } else {\n        if (avatar.startsWith(\"http://\") || avatar.startsWith(\"https://\")) {\n          return avatar;\n        } else {\n          return require(`@/assets/avatar/${avatar}`);\n        }\n      }\n    },\n    initUser() {\n      return {\n        id: \"\",\n        account: \"\",\n        name: \"\",\n        orgId: null,\n        stationId: '',\n        email: \"\",\n        mobile: \"\",\n        sex: {\n          code: \"\"\n        },\n        nation: '',\n        education: '',\n        positionStatus: '',\n        state: true,\n        avatar: \"\",\n        workDescribe: \"\",\n        password: \"123456\"\n      };\n    },\n    initWidth() {\n      this.screenWidth = document.body.clientWidth;\n      if (this.screenWidth < 991) {\n        return \"90%\";\n      } else if (this.screenWidth < 1400) {\n        return \"45%\";\n      } else {\n        return \"800px\";\n      }\n    },\n\n    loadListOptions({callback}) {\n      callback();\n    },\n    loadStation() {\n      stationApi.page({\n        size: 10000,\n        model: {state: true}\n      }).then(response => {\n        const res = response.data;\n        this.stationList = res.data.records;\n      });\n    },\n    setIdAndSubmit(bizId, url) {\n      const vm = this;\n      vm.successNum += 1;\n      vm.imgFileData.bizId = bizId;\n      vm.user.avatar = url;\n\n      if (vm.successNum === vm.imgFileTotal) {\n        vm.$store.state.hasLoading = false;\n      }\n    },\n    setUser(val, orgs, dicts, enums) {\n      debugger;\n      const vm = this;\n      if (val) {\n        vm.user = {...vm.user,...val};\n        if(!vm.user.sex){\n          vm.user.sex = {code: ''}\n        }\n      }\n      vm.dicts = dicts;\n      vm.enums = enums;\n\n      vm.orgList = orgs;\n      vm.imgFileData.bizId = vm.user[\"id\"];\n      vm.$nextTick(() => {\n        vm.$refs.imgFileRef.init({\n          bizId: vm.user[\"id\"],\n          bizType: vm.imgFileData.bizType,\n          imageUrl: vm.myAvatar(vm.user[\"avatar\"]),\n          isSingle: true,\n          isDetail: false\n        });\n      });\n      vm.loadStation();\n    },\n    close() {\n      this.$emit(\"close\");\n    },\n    reset() {\n      // 先清除校验，再清除表单，不然有奇怪的bug\n      this.$refs.form.clearValidate();\n      this.$refs.form.resetFields();\n      this.user = this.initUser();\n      this.imgFileData.bizId = \"\";\n      this.$refs.imgFileRef.init({\n        bizId: \"\",\n        bizType: \"\",\n        imageUrl: \"\",\n        isSingle: true,\n        isDetail: false\n      });\n    },\n    submitForm() {\n      const vm = this;\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          vm.editSubmit();\n        } else {\n          return false;\n        }\n      });\n    },\n    editSubmit() {\n      const vm = this;\n      if (vm.type === \"add\") {\n        vm.save();\n      } else {\n        vm.update();\n      }\n    },\n    save() {\n      const vm = this;\n      userApi.save(this.user).then(response => {\n        const res = response.data;\n        if (res.isSuccess) {\n          vm.isVisible = false;\n          vm.$message({\n            message: vm.$t(\"tips.createSuccess\"),\n            type: \"success\"\n          });\n          vm.$emit(\"success\");\n        }\n      });\n    },\n    update() {\n      userApi.update(this.user).then(response => {\n        const res = response.data;\n        if (res.isSuccess) {\n          this.isVisible = false;\n          this.$message({\n            message: this.$t(\"tips.updateSuccess\"),\n            type: \"success\"\n          });\n          this.$emit(\"success\");\n        }\n      });\n    }\n  }\n};\n",null]}