{"remainingRequest":"E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\lamp-web-master\\src\\views\\lamp\\resources\\sms\\edit.vue?vue&type=style&index=0&id=5d914776&prod&lang=scss&scoped=true&","dependencies":[{"path":"E:\\project\\lamp-web-master\\src\\views\\lamp\\resources\\sms\\edit.vue","mtime":1679380940000},{"path":"E:\\project\\lamp-web-master\\node_modules\\css-loader\\index.js","mtime":1686711135550},{"path":"E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1686711138278},{"path":"E:\\project\\lamp-web-master\\node_modules\\postcss-loader\\src\\index.js","mtime":1686711136346},{"path":"E:\\project\\lamp-web-master\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1686711137609},{"path":"E:\\project\\lamp-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686711136315},{"path":"E:\\project\\lamp-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1686711137115}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.el-tag {\n  margin-right: 10px;\n}\n.button-new-tag {\n  margin-left: 10px;\n  height: 32px;\n  line-height: 30px;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n.input-new-tag {\n  width: 120px;\n  vertical-align: bottom;\n}\n.message {\n  border: 1px solid #ddd;\n  padding-bottom: 10px;\n}\naside {\n  margin-top: 10px;\n  margin-bottom: 0;\n}\n.tips {\n  border: 1px solid #ddd;\n  margin-left: 18px;\n}\n.tips p {\n  text-indent: 20px;\n  padding: 0;\n  margin: 0px;\n}\n.article {\n  font-size: 12px;\n  height: auto;\n}\n",{"version":3,"sources":["edit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"edit.vue","sourceRoot":"src/views/lamp/resources/sms","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-form :model=\"smsTask\" :rules=\"rules\" label-position=\"right\" label-width=\"100px\" ref=\"form\" status-icon>\n      <el-row>\n        <el-col :sm=\"12\" :xs=\"24\" style=\"margin-top: 10px;\">\n          <el-form-item :label=\"$t('table.smsTask.templateId')\" prop=\"templateId\">\n            <el-select :disabled=\"type==='view'\" :multiple=\"false\" @change=\"changeTemplate\" filterable placeholder=\"请输入关键词\" style=\"width:300px;\" v-model=\"smsTask.templateId\">\n              <el-option :key=\"item.id\" :label=\"item.name + '('+item.templateCode+')'\" :value=\"item.id\" v-for=\"item in smsTemplateList\" />\n            </el-select>\n          </el-form-item>\n        </el-col>\n        <el-col :sm=\"12\" :xs=\"24\" style=\"margin-top: 10px;\">\n          <el-form-item :label=\"$t('table.smsTask.status')\" prop=\"status\" v-show=\"type==='view'\">\n            <el-tag :disabled=\"type==='view'\" :type=\"smsTask.status | statusFilter\">{{ smsTask.status.desc }}</el-tag>\n          </el-form-item>\n        </el-col>\n      </el-row>\n      <el-form-item :label=\"$t('table.smsTask.telNum')\" prop=\"telNum\">\n        <el-tag :closable=\"type!=='view'\" :disable-transitions=\"false\" :key=\"tag\" @close=\"handleClose(tag)\" v-for=\"tag in telNumList\">{{ tag }}</el-tag>\n        <el-input :disabled=\"type==='view'\" @blur=\"handleInputConfirm\" @keyup.enter.native=\"handleInputConfirm\" class=\"input-new-tag\" ref=\"saveTagInput\" v-if=\"telNumVisible\" v-model=\"telNum\" />\n        <el-button :disabled=\"type==='view'\" @click=\"showInput\" class=\"button-new-tag\" v-else>添加</el-button>\n      </el-form-item>\n      <el-form-item :label=\"$t('table.smsTask.topic')\" prop=\"topic\">\n        <el-input :disabled=\"type==='view'\" v-model=\"smsTask.topic\" />\n      </el-form-item>\n      <el-form-item :label=\"$t('table.smsTask.content')\" prop=\"content2\">\n        <el-row class=\"message\">\n          <el-col :sm=\"12\" :xs=\"24\" style=\"margin-top: 10px;\">\n            <el-form-item :key=\"index\" :label=\"key\" prop=\"content\" v-for=\"(item, key, index) in smsTask.templateParam\">\n              <el-input :disabled=\"type==='view'\" :value=\"item\" @input=\"(value)=>{templateCode(value,key,index)}\" maxlength=\"255\" />\n            </el-form-item>\n          </el-col>\n          <el-col :sm=\"12\" :xs=\"24\" style=\"margin-top: 10px;\">\n            <el-form-item label=\"预览：\">\n              <div class=\"article\" v-html=\"smsTask.content\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form-item>\n      <el-row>\n        <el-col :sm=\"12\" :xs=\"24\" style=\"margin-top: 10px;\">\n          <el-form-item label=\"定时发送\" prop=\"sendTime\">\n            <el-radio-group :disabled=\"type==='view'\" size=\"medium\" v-model=\"timing\">\n              <el-radio-button :label=\"false\">否</el-radio-button>\n              <el-radio-button :label=\"true\">是</el-radio-button>\n            </el-radio-group>\n            <el-date-picker\n              :disabled=\"type==='view'\"\n              :picker-options=\"pickerOptions\"\n              align=\"right\"\n              format=\"yyyy-MM-dd HH:mm:ss\"\n              placeholder=\"选择发送时间\"\n              style=\"margin-left:20px\"\n              type=\"datetime\"\n              v-model=\"smsTask.sendTime\"\n              v-show=\"timing\"\n              value-format=\"yyyy-MM-dd HH:mm:ss\"\n            />\n          </el-form-item>\n        </el-col>\n        <el-col :sm=\"12\" :xs=\"24\" style=\"margin-top: 10px;\">\n          <el-form-item label=\"是否草稿\" prop=\"draft\" v-show=\"type==='view'\">\n            <el-radio-group :disabled=\"type==='view'\" size=\"medium\" v-model=\"smsTask.draft\">\n              <el-radio-button :label=\"false\">否</el-radio-button>\n              <el-radio-button :label=\"true\">是</el-radio-button>\n            </el-radio-group>\n          </el-form-item>\n        </el-col>\n      </el-row>\n    </el-form>\n    <div class=\"dialog-footer\">\n      <el-button :disabled=\"disabled\" @click=\"submitForm(false)\" plain type=\"primary\" v-show=\"type!=='view'\">立即发送</el-button>\n      <el-button :disabled=\"disabled\" @click=\"submitForm(true)\" plain type=\"warning\" v-show=\"type!=='view'\">存草稿</el-button>\n    </div>\n    <aside class=\"tips\" v-show=\"type!=='view'\">\n      模板提示：\n      <p>1.长度不超过500字，单条短信超过70字后，按67字/条分多条计费；</p>\n      <p>2.短信模板内容不能包含【】符号。</p>\n    </aside>\n    <div v-show=\"type==='view'\">\n      <send-status-index :dialog-visible=\"dialog.isVisible\" ref=\"statusList\" />\n    </div>\n  </div>\n</template>\n<script>\nimport smsTemplateApi from '@/api/SmsTemplate.js'\nimport smsTaskApi from '@/api/SmsTask.js'\nimport { validMobile } from '@/utils/my-validate'\nimport SendStatusIndex from './sendStatusIndex'\n\nexport default {\n  name: 'SmsTaskEdit',\n  components: { SendStatusIndex },\n  filters: {\n    statusFilter (status) {\n      const map = {\n        WAITING: 'danger',\n        SUCCESS: 'success',\n        FAIL: 'error'\n      }\n      return map[status] || 'success'\n    }\n  },\n  props: {\n\n  },\n  data () {\n    return {\n      dialog: {\n        isVisible: false\n      },\n      type: 'add',\n      smsTask: this.initSmsTask(),\n      smsTemplateList: [],\n      telNumList: [],\n      telNumVisible: false,\n      telNum: '',\n      timing: false,\n      disabled: false,\n      smsTemplate: '',\n      content: '',\n      rules: {\n        topic: [\n          { required: true, message: this.$t('rules.require'), trigger: 'blur' },\n          { min: 1, max: 255, message: this.$t('rules.range4to10'), trigger: 'blur' }\n        ],\n        templateId: { required: true, message: this.$t('rules.require'), trigger: 'blur' },\n        sendTime: {\n          validator: (rule, value, callback) => {\n            const vm = this\n            if (vm.timing) {\n              if (vm.smsTask.sendTime) {\n                callback()\n              } else {\n                callback('请选择发送日期')\n              }\n            } else {\n              callback()\n            }\n          }, trigger: 'change'\n        }\n      },\n      pickerOptions: {\n        shortcuts: [{\n          text: '一小时后',\n          onClick (picker) {\n            const date = new Date();\n            date.setTime(date.getTime() + 3600 * 1000 * 1)\n            picker.$emit('pick', date)\n          }\n        }, {\n          text: '明天',\n          onClick (picker) {\n            const date = new Date();\n            date.setTime(date.getTime() + 3600 * 1000 * 24)\n            picker.$emit('pick', date);\n          }\n        }, {\n          text: '一周后',\n          onClick (picker) {\n            const date = new Date();\n            date.setTime(date.getTime() + 3600 * 1000 * 24 * 7)\n            picker.$emit('pick', date);\n          }\n        }]\n      }\n    }\n  },\n  computed: {\n\n  },\n  watch: {\n    $route () {\n      if (this.$route.path === '/resources/sms/edit') {\n        this.initSmsTemplateList()\n        this.loadSendStatus()\n      }\n    }\n  },\n  mounted () {\n    //在vue的mount阶段执行的函数都是顺序执行，不会阻塞的，所以如果希望mount阶段的函数也是阻塞的，需要额外写一个async函数，然后把需要同步执行的函数写到里面，然后在mount阶段调用这个额外写的函数\n    this.initSmsTemplateList()\n    this.loadSendStatus()\n  },\n  methods: {\n    loadSendStatus () {\n      const type = this.$route.query.type\n      const id = this.$route.query.id\n      if (type === 'view') {\n        this.$refs.statusList.setTaskId(id)\n      }\n    },\n    async loadSmsTask () {\n      const type = this.$route.query.type\n      const id = this.$route.query.id\n      this.type = type\n      if (type) {// 切换到别的页面时，无需重置表单\n        // this.smsTask = this.initSmsTask()\n        this.reset()\n      }\n      if (type === 'view') {\n        this.disabled = true\n      } else {\n        this.disabled = false\n      }\n\n      if (id) {\n        await smsTaskApi.get(id)\n          .then(response => {\n            const res = response.data\n            this.smsTask = { ...this.smsTask, ...res.data }\n            if (type !== 'edit') {\n              this.smsTask.id = ''\n            }\n            this.changeTemplate(this.smsTask.templateId)\n            // this.telNumList = this.smsTask.telNum.split(\",\")\n            this.telNumList = this.smsTask.telNumList;\n\n            if (this.smsTask.templateParams) {\n              this.smsTask.templateParam = JSON.parse(this.smsTask.templateParams)\n            }\n            this.smsTask.content = res.data.content\n            console.log('查询')\n            if (this.smsTask.sendTime) {\n              this.timing = true\n            } else {\n              this.timing = false\n            }\n\n            this.smsTemplate = this.smsTemplateList.find(item => item.id === this.smsTask.templateId)\n\n          })\n      }\n    },\n    changeTemplate (id) {\n      const vm = this\n      // vm.preSearch()\n      if (id) {\n        //遍历模板添加文本框\n        for (const item of vm.smsTemplateList) {\n          if (item.id === id) {\n            let templateParam = {}\n            if (typeof (item.templateParams) == 'string') {\n              templateParam = JSON.parse(item.templateParams)\n            } else {\n              templateParam = item.templateParams\n            }\n\n            for (const prop in templateParam) {\n              templateParam[prop] = ''\n            }\n            vm.smsTemplate = item\n            if (vm.type !== 'view') {\n              console.log('赋值')\n              vm.smsTask.templateParam = templateParam\n              // vm.smsTask.content = item.content\n              this.content = item.content\n            }\n            break\n          }\n        }\n        vm.changeContent()\n      }\n    },\n    //模板文本框输入内容\n    templateCode (val, key) {\n      const vm = this\n      vm.smsTask.templateParam[key] = val\n      vm.changeContent()\n    },\n    //短信内容处理\n    changeContent () {\n      const vm = this\n      if (!vm.smsTemplate) {\n        return\n      }\n      const type = vm.smsTemplate.providerType.code\n      let content = vm.smsTemplate.content\n\n      for (const key in vm.smsTask.templateParam) {\n        let strs = ''\n        if (type == \"TENCENT\") {\n          strs = '{' + key + '}'\n        } else {\n          strs = '${' + key + '}'\n        }\n        if (vm.smsTask.templateParam[key]) {\n          content = content.replace(strs, vm.smsTask.templateParam[key])\n        }\n      }\n      if (vm.type !== 'view') {\n        console.log('赋值')\n        vm.smsTask.content = content\n      }\n    },\n    async initSmsTemplateList () {\n      await smsTemplateApi.page({ current: 1, size: 10000, model:{}})\n        .then(response => {\n          const res = response.data\n          if (res.isSuccess) {\n            this.smsTemplateList = res.data.records\n          }\n        })\n      await this.loadSmsTask()  // 顺序不能变\n    },\n    initSmsTask () {\n      return {\n        templateId: '',\n        topic: '',\n        templateParam: {},\n        sendTime: null,\n        content: '',\n        draft: false,\n        status: {\n          code: '',\n          desc: ''\n        }\n      }\n    },\n    reset () {\n      // 先清除校验，再清除表单，不然有奇怪的bug\n      this.$refs.form.clearValidate()\n      this.$refs.form.resetFields()\n      this.smsTask = this.initSmsTask()\n      this.telNumList = []\n    },\n    submitForm (draft) {\n      const vm = this\n      if (vm.smsTask.templateParam && Object.keys(vm.smsTask.templateParam).length > 0) {\n        let flag = false\n        for (const key in vm.smsTask.templateParam) {\n          if (!vm.smsTask.templateParam[key]) {\n            flag = true\n            break\n          }\n        }\n        if (flag) {\n          vm.$message({\n            message: '发送内容不能为空',\n            type: 'error'\n          })\n          return\n        }\n\n      } else {\n        vm.$message({\n          message: '发送内容不能为空',\n          type: 'error'\n        })\n        return\n      }\n\n      this.$refs.form.validate((valid) => {\n        if (valid) {\n          vm.editSubmit(draft)\n        } else {\n          return false\n        }\n      })\n    },\n    editSubmit (draft) {\n      const vm = this\n      vm.smsTask.draft = draft\n      vm.smsTask.telNum = vm.telNumList;\n      if (!vm.timing) {\n        vm.smsTask.sendTime = null\n      }\n      if (vm.type === 'edit') {\n        vm.update()\n      } else {\n        vm.save()\n      }\n    },\n    save () {\n      const vm = this\n      vm.disabled = true\n      smsTaskApi.save(vm.smsTask)\n        .then((response) => {\n          const res = response.data\n          if (res.isSuccess) {\n            vm.$message({\n              message: vm.$t('tips.createSuccess'),\n              type: 'success'\n            })\n            vm.reset()\n            vm.$router.push('/resources/sms')\n          }\n        }).finally(()=>{\n          vm.disabled = false})\n    },\n    update () {\n      const vm = this\n      vm.disabled = true\n      smsTaskApi.update(vm.smsTask)\n        .then((response) => {\n          const res = response.data\n          if (res.isSuccess) {\n            vm.$message({\n              message: vm.$t('tips.createSuccess'),\n              type: 'success'\n            })\n            vm.reset()\n            vm.$router.push('/resources/sms')\n          }\n        }).finally(()=>vm.disabled = false)\n    },\n    handleClose (tag) {\n      this.telNumList.splice(this.telNumList.indexOf(tag), 1)\n    },\n    showInput () {\n      this.telNumVisible = true\n      this.$nextTick(() => {\n        this.$refs.saveTagInput.$refs.input.focus()\n      });\n    },\n    handleInputConfirm () {\n      const vm = this\n      // 正则校验\n      let inputValue = vm.telNum\n      if (inputValue) {\n        if (!validMobile(inputValue)) {\n          this.$message({\n            message: '该手机号不合法',\n            type: 'error'\n          })\n          vm.$refs.saveTagInput.focus()\n          return\n        }\n\n        if (this.telNumList.indexOf(inputValue) === -1) {\n          vm.telNumList.push(inputValue)\n          vm.telNumVisible = false\n          vm.telNum = ''\n        } else {\n          this.$message({\n            message: '该账号已经存在',\n            type: 'error'\n          })\n          vm.$refs.saveTagInput.focus()\n        }\n      } else {\n        this.telNumVisible = false\n      }\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n.el-tag {\n  margin-right: 10px;\n}\n.button-new-tag {\n  margin-left: 10px;\n  height: 32px;\n  line-height: 30px;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n.input-new-tag {\n  width: 120px;\n  vertical-align: bottom;\n}\n.message {\n  border: 1px solid #ddd;\n  padding-bottom: 10px;\n}\naside {\n  margin-top: 10px;\n  margin-bottom: 0;\n}\n.tips {\n  border: 1px solid #ddd;\n  margin-left: 18px;\n}\n.tips p {\n  text-indent: 20px;\n  padding: 0;\n  margin: 0px;\n}\n.article {\n  font-size: 12px;\n  height: auto;\n}\n</style>\n"]}]}